

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 03 16:57:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	idataBANK3,global,class=CODE,delta=2
     9                           	psect	idataBIGRAM,global,class=CODE,delta=2
    10                           	psect	stringtext1,global,class=STRCODE,delta=2
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x4A0,32
    47                           	dabs	1,0x420,80
    48                           	dabs	1,0x3DE,18
    49                           	dabs	1,0x226E,0,_currentStateBuffer
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1526 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0110                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020D                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0216                     	;# 
   194  0216                     	;# 
   195  0217                     	;# 
   196  0217                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021C                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029D                     	;# 
   215  029E                     	;# 
   216  029F                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  031C                     	;# 
   228  031C                     	;# 
   229  031D                     	;# 
   230  031E                     	;# 
   231  038C                     	;# 
   232  038D                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  040C                     	;# 
   237  040D                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  048D                     	;# 
   255  0491                     	;# 
   256  0491                     	;# 
   257  0492                     	;# 
   258  0492                     	;# 
   259  0493                     	;# 
   260  0493                     	;# 
   261  0493                     	;# 
   262  0494                     	;# 
   263  0494                     	;# 
   264  0495                     	;# 
   265  0495                     	;# 
   266  0496                     	;# 
   267  0496                     	;# 
   268  0497                     	;# 
   269  0497                     	;# 
   270  0595                     	;# 
   271  0596                     	;# 
   272  0597                     	;# 
   273  059C                     	;# 
   274  059D                     	;# 
   275  059E                     	;# 
   276  0611                     	;# 
   277  0611                     	;# 
   278  0612                     	;# 
   279  0613                     	;# 
   280  0614                     	;# 
   281  0614                     	;# 
   282  0615                     	;# 
   283  0616                     	;# 
   284  0617                     	;# 
   285  0617                     	;# 
   286  0618                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061A                     	;# 
   290  061B                     	;# 
   291  061C                     	;# 
   292  061D                     	;# 
   293  061D                     	;# 
   294  061E                     	;# 
   295  061F                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;_currentStateBuffer
   307                           
   308                           	psect	idataCOMMON
   309  07FA                     __pidataCOMMON:	
   310                           
   311                           ;initializer for _levelofDimmer_MSB
   312  07FA  3430               	retlw	48
   313                           
   314                           ;initializer for _ErrorNames
   315  07FB  3423               	retlw	35
   316  07FC  3423               	retlw	35
   317  07FD  3423               	retlw	35
   318  07FE  3423               	retlw	35
   319  07FF  3400               	retlw	0
   320                           
   321                           	psect	idataBANK0
   322  0003                     __pidataBANK0:	
   323                           
   324                           ;initializer for _levelofDimmer_LSB
   325  0003  3430               	retlw	48
   326                           
   327                           	psect	idataBANK1
   328  16C2                     __pidataBANK1:	
   329                           
   330                           ;initializer for _copy_parentalLockBuffer
   331  16C2  3430               	retlw	48
   332  16C3  3430               	retlw	48
   333  16C4  3430               	retlw	48
   334  16C5  3430               	retlw	48
   335  16C6  3430               	retlw	48
   336  16C7  3430               	retlw	48
   337  16C8  3430               	retlw	48
   338  16C9  3430               	retlw	48
   339  16CA  3430               	retlw	48
   340  16CB  3430               	retlw	48
   341  16CC  3430               	retlw	48
   342  16CD  3430               	retlw	48
   343  16CE  3430               	retlw	48
   344  16CF  3430               	retlw	48
   345  16D0  3430               	retlw	48
   346  16D1  3430               	retlw	48
   347  16D2  3430               	retlw	48
   348  16D3  3430               	retlw	48
   349  16D4  3430               	retlw	48
   350  16D5  3430               	retlw	48
   351  16D6  3430               	retlw	48
   352  16D7  3430               	retlw	48
   353  16D8  3430               	retlw	48
   354  16D9  3430               	retlw	48
   355  16DA  3430               	retlw	48
   356  16DB  3430               	retlw	48
   357  16DC  3430               	retlw	48
   358  16DD  3430               	retlw	48
   359  16DE  3430               	retlw	48
   360  16DF  3430               	retlw	48
   361  16E0  3430               	retlw	48
   362  16E1  3400               	retlw	0
   363                           
   364                           ;initializer for applianceControl@F3750
   365  16E2  3423               	retlw	35
   366  16E3  3400               	retlw	0
   367                           
   368                           ;initializer for applianceControl@F3748
   369  16E4  3423               	retlw	35
   370  16E5  3400               	retlw	0
   371                           
   372                           	psect	idataBANK2
   373  174A                     __pidataBANK2:	
   374                           
   375                           ;initializer for _mainReceivedDataBuffer
   376  174A  3423               	retlw	35
   377  174B  3400               	retlw	0
   378  174C  3400               	retlw	0
   379  174D  3400               	retlw	0
   380  174E  3400               	retlw	0
   381  174F  3400               	retlw	0
   382  1750  3400               	retlw	0
   383  1751  3400               	retlw	0
   384  1752  3400               	retlw	0
   385  1753  3400               	retlw	0
   386  1754  3400               	retlw	0
   387  1755  3400               	retlw	0
   388  1756  3400               	retlw	0
   389  1757  3400               	retlw	0
   390  1758  3400               	retlw	0
   391  1759  3400               	retlw	0
   392  175A  3400               	retlw	0
   393  175B  3400               	retlw	0
   394  175C  3400               	retlw	0
   395  175D  3400               	retlw	0
   396  175E  3400               	retlw	0
   397  175F  3400               	retlw	0
   398  1760  3400               	retlw	0
   399  1761  3400               	retlw	0
   400  1762  3400               	retlw	0
   401  1763  3400               	retlw	0
   402  1764  3400               	retlw	0
   403  1765  3400               	retlw	0
   404  1766  3400               	retlw	0
   405  1767  3400               	retlw	0
   406  1768  3400               	retlw	0
   407  1769  3400               	retlw	0
   408                           
   409                           ;initializer for _tempReceiveTouchpanelDataBuffer
   410  176A  3423               	retlw	35
   411  176B  3400               	retlw	0
   412  176C  3400               	retlw	0
   413  176D  3400               	retlw	0
   414  176E  3400               	retlw	0
   415  176F  3400               	retlw	0
   416  1770  3400               	retlw	0
   417  1771  3400               	retlw	0
   418  1772  3400               	retlw	0
   419  1773  3400               	retlw	0
   420  1774  3400               	retlw	0
   421  1775  3400               	retlw	0
   422  1776  3400               	retlw	0
   423  1777  3400               	retlw	0
   424  1778  3400               	retlw	0
   425  1779  3400               	retlw	0
   426  177A  3400               	retlw	0
   427  177B  3400               	retlw	0
   428  177C  3400               	retlw	0
   429  177D  3400               	retlw	0
   430  177E  3400               	retlw	0
   431  177F  3400               	retlw	0
   432  1780  3400               	retlw	0
   433  1781  3400               	retlw	0
   434                           
   435                           ;initializer for _tempReceivedDataBuffer
   436  1782  3423               	retlw	35
   437  1783  3400               	retlw	0
   438  1784  3400               	retlw	0
   439  1785  3400               	retlw	0
   440  1786  3400               	retlw	0
   441  1787  3400               	retlw	0
   442  1788  3400               	retlw	0
   443  1789  3400               	retlw	0
   444  178A  3400               	retlw	0
   445  178B  3400               	retlw	0
   446  178C  3400               	retlw	0
   447  178D  3400               	retlw	0
   448  178E  3400               	retlw	0
   449  178F  3400               	retlw	0
   450  1790  3400               	retlw	0
   451  1791  3400               	retlw	0
   452  1792  3400               	retlw	0
   453  1793  3400               	retlw	0
   454  1794  3400               	retlw	0
   455  1795  3400               	retlw	0
   456  1796  3400               	retlw	0
   457  1797  3400               	retlw	0
   458  1798  3400               	retlw	0
   459  1799  3400               	retlw	0
   460                           
   461                           	psect	idataBANK3
   462  07BA                     __pidataBANK3:	
   463                           
   464                           ;initializer for _touchpanleReceivedDatabuffer
   465  07BA  3423               	retlw	35
   466  07BB  3400               	retlw	0
   467  07BC  3400               	retlw	0
   468  07BD  3400               	retlw	0
   469  07BE  3400               	retlw	0
   470  07BF  3400               	retlw	0
   471  07C0  3400               	retlw	0
   472  07C1  3400               	retlw	0
   473  07C2  3400               	retlw	0
   474  07C3  3400               	retlw	0
   475  07C4  3400               	retlw	0
   476  07C5  3400               	retlw	0
   477  07C6  3400               	retlw	0
   478  07C7  3400               	retlw	0
   479  07C8  3400               	retlw	0
   480  07C9  3400               	retlw	0
   481  07CA  3400               	retlw	0
   482  07CB  3400               	retlw	0
   483  07CC  3400               	retlw	0
   484  07CD  3400               	retlw	0
   485  07CE  3400               	retlw	0
   486  07CF  3400               	retlw	0
   487  07D0  3400               	retlw	0
   488  07D1  3400               	retlw	0
   489  07D2  3400               	retlw	0
   490  07D3  3400               	retlw	0
   491  07D4  3400               	retlw	0
   492  07D5  3400               	retlw	0
   493  07D6  3400               	retlw	0
   494  07D7  3400               	retlw	0
   495  07D8  3400               	retlw	0
   496  07D9  3400               	retlw	0
   497                           
   498                           ;initializer for _parentalLockBuffer
   499  07DA  3430               	retlw	48
   500  07DB  3430               	retlw	48
   501  07DC  3430               	retlw	48
   502  07DD  3430               	retlw	48
   503  07DE  3430               	retlw	48
   504  07DF  3430               	retlw	48
   505  07E0  3430               	retlw	48
   506  07E1  3430               	retlw	48
   507  07E2  3430               	retlw	48
   508  07E3  3430               	retlw	48
   509  07E4  3430               	retlw	48
   510  07E5  3430               	retlw	48
   511  07E6  3430               	retlw	48
   512  07E7  3430               	retlw	48
   513  07E8  3430               	retlw	48
   514  07E9  3430               	retlw	48
   515  07EA  3430               	retlw	48
   516  07EB  3430               	retlw	48
   517  07EC  3430               	retlw	48
   518  07ED  3430               	retlw	48
   519  07EE  3430               	retlw	48
   520  07EF  3430               	retlw	48
   521  07F0  3430               	retlw	48
   522  07F1  3430               	retlw	48
   523  07F2  3430               	retlw	48
   524  07F3  3430               	retlw	48
   525  07F4  3430               	retlw	48
   526  07F5  3430               	retlw	48
   527  07F6  3430               	retlw	48
   528  07F7  3430               	retlw	48
   529  07F8  3430               	retlw	48
   530  07F9  3400               	retlw	0
   531                           
   532                           	psect	idataBIGRAM
   533  0738                     __pidataBIGRAM:	
   534                           
   535                           ;initializer for _currentStateBuffer
   536  0738  3423               	retlw	35
   537  0739  3400               	retlw	0
   538  073A  3400               	retlw	0
   539  073B  3400               	retlw	0
   540  073C  3400               	retlw	0
   541  073D  3400               	retlw	0
   542  073E  3400               	retlw	0
   543  073F  3400               	retlw	0
   544  0740  3400               	retlw	0
   545  0741  3400               	retlw	0
   546  0742  3400               	retlw	0
   547  0743  3400               	retlw	0
   548  0744  3400               	retlw	0
   549  0745  3400               	retlw	0
   550  0746  3400               	retlw	0
   551  0747  3400               	retlw	0
   552  0748  3400               	retlw	0
   553  0749  3400               	retlw	0
   554  074A  3400               	retlw	0
   555  074B  3400               	retlw	0
   556  074C  3400               	retlw	0
   557  074D  3400               	retlw	0
   558  074E  3400               	retlw	0
   559  074F  3400               	retlw	0
   560  0750  3400               	retlw	0
   561  0751  3400               	retlw	0
   562  0752  3400               	retlw	0
   563  0753  3400               	retlw	0
   564  0754  3400               	retlw	0
   565  0755  3400               	retlw	0
   566  0756  3400               	retlw	0
   567  0757  3400               	retlw	0
   568  0758  3400               	retlw	0
   569  0759  3400               	retlw	0
   570  075A  3400               	retlw	0
   571  075B  3400               	retlw	0
   572  075C  3400               	retlw	0
   573  075D  3400               	retlw	0
   574  075E  3400               	retlw	0
   575  075F  3400               	retlw	0
   576  0760  3400               	retlw	0
   577  0761  3400               	retlw	0
   578  0762  3400               	retlw	0
   579  0763  3400               	retlw	0
   580  0764  3400               	retlw	0
   581  0765  3400               	retlw	0
   582  0766  3400               	retlw	0
   583  0767  3400               	retlw	0
   584  0768  3400               	retlw	0
   585  0769  3400               	retlw	0
   586  076A  3400               	retlw	0
   587  076B  3400               	retlw	0
   588  076C  3400               	retlw	0
   589  076D  3400               	retlw	0
   590  076E  3400               	retlw	0
   591  076F  3400               	retlw	0
   592  0770  3400               	retlw	0
   593  0771  3400               	retlw	0
   594  0772  3400               	retlw	0
   595  0773  3400               	retlw	0
   596  0774  3400               	retlw	0
   597  0775  3400               	retlw	0
   598  0776  3400               	retlw	0
   599  0777  3400               	retlw	0
   600  0778  3400               	retlw	0
   601  0779  3400               	retlw	0
   602  077A  3400               	retlw	0
   603  077B  3400               	retlw	0
   604  077C  3400               	retlw	0
   605  077D  3400               	retlw	0
   606  077E  3400               	retlw	0
   607  077F  3400               	retlw	0
   608  0780  3400               	retlw	0
   609  0781  3400               	retlw	0
   610  0782  3400               	retlw	0
   611  0783  3400               	retlw	0
   612  0784  3400               	retlw	0
   613  0785  3400               	retlw	0
   614  0786  3400               	retlw	0
   615  0787  3400               	retlw	0
   616  0788  3400               	retlw	0
   617  0789  3400               	retlw	0
   618  078A  3400               	retlw	0
   619  078B  3400               	retlw	0
   620  078C  3400               	retlw	0
   621  078D  3400               	retlw	0
   622  078E  3400               	retlw	0
   623  078F  3400               	retlw	0
   624  0790  3400               	retlw	0
   625  0791  3400               	retlw	0
   626  0792  3400               	retlw	0
   627  0793  3400               	retlw	0
   628  0794  3400               	retlw	0
   629  0795  3400               	retlw	0
   630  0796  3400               	retlw	0
   631  0797  3400               	retlw	0
   632  0798  3400               	retlw	0
   633  0799  3400               	retlw	0
   634  079A  3400               	retlw	0
   635  079B  3400               	retlw	0
   636  079C  3400               	retlw	0
   637  079D  3400               	retlw	0
   638  079E  3400               	retlw	0
   639  079F  3400               	retlw	0
   640  07A0  3400               	retlw	0
   641  07A1  3400               	retlw	0
   642  07A2  3400               	retlw	0
   643  07A3  3400               	retlw	0
   644  07A4  3400               	retlw	0
   645  07A5  3400               	retlw	0
   646  07A6  3400               	retlw	0
   647  07A7  3400               	retlw	0
   648  07A8  3400               	retlw	0
   649  07A9  3400               	retlw	0
   650  07AA  3400               	retlw	0
   651  07AB  3400               	retlw	0
   652  07AC  3400               	retlw	0
   653  07AD  3400               	retlw	0
   654  07AE  3400               	retlw	0
   655  07AF  3400               	retlw	0
   656  07B0  3400               	retlw	0
   657  07B1  3400               	retlw	0
   658  07B2  3400               	retlw	0
   659  07B3  3400               	retlw	0
   660  07B4  3400               	retlw	0
   661  07B5  3400               	retlw	0
   662  07B6  3400               	retlw	0
   663  07B7  3400               	retlw	0
   664  07B8  3400               	retlw	0
   665  07B9  3400               	retlw	0
   666  005E                     _PEIE	set	94
   667  005F                     _GIE	set	95
   668  007E                     _RD6	set	126
   669  007F                     _RD7	set	127
   670  00A5                     _RC2IF	set	165
   671  008D                     _RC1IF	set	141
   672  0064                     _RA4	set	100
   673  0068                     _RB0	set	104
   674  006A                     _RB2	set	106
   675  006C                     _RB4	set	108
   676  0061                     _RA1	set	97
   677  0063                     _RA3	set	99
   678  0060                     _RA0	set	96
   679  0071                     _RC1	set	113
   680  0069                     _RB1	set	105
   681  0094                     _PIE4bits	set	148
   682  0091                     _PIE1bits	set	145
   683  008C                     _TRISAbits	set	140
   684  008E                     _TRISCbits	set	142
   685  008D                     _TRISBbits	set	141
   686  008F                     _TRISDbits	set	143
   687  018C                     _ANSELA	set	396
   688  018D                     _ANSELB	set	397
   689  018F                     _ANSELD	set	399
   690  0190                     _ANSELE	set	400
   691  019E                     _TX1STAbits	set	414
   692  019C                     _SP1BRGH	set	412
   693  019B                     _SP1BRGL	set	411
   694  019E                     _TX1STA	set	414
   695  019D                     _RC1STA	set	413
   696  019F                     _BAUD1CON	set	415
   697  019A                     _TX1REG	set	410
   698  0199                     _RC1REG	set	409
   699  019D                     _RC1STAbits	set	413
   700  020D                     _WPUB	set	525
   701  020F                     _WPUD	set	527
   702  0210                     _WPUE	set	528
   703  1466                     _RF6	set	5222
   704  1465                     _RF5	set	5221
   705  1464                     _RF4	set	5220
   706  1463                     _RF3	set	5219
   707  1462                     _RF2	set	5218
   708  1461                     _RF1	set	5217
   709  030D                     _TRISGbits	set	781
   710  030C                     _TRISFbits	set	780
   711  040C                     _ANSELF	set	1036
   712  040D                     _ANSELG	set	1037
   713  048D                     _WPUG	set	1165
   714  0496                     _TX2STAbits	set	1174
   715  0494                     _SP2BRGH	set	1172
   716  0493                     _SP2BRGL	set	1171
   717  0496                     _TX2STA	set	1174
   718  0495                     _RC2STA	set	1173
   719  0497                     _BAUD2CON	set	1175
   720  0491                     _RC2REG	set	1169
   721  0495                     _RC2STAbits	set	1173
   722  0492                     _TX2REG	set	1170
   723                           
   724                           	psect	stringtext1
   725  1800                     __pstringtext1:	
   726  1800                     STR_1:	
   727  1800  3423               	retlw	35	;'#'
   728  1801  3400               	retlw	0
   729                           
   730                           	psect	stringtext2
   731  0000                     __pstringtext2:	
   732                           
   733                           ; #config settings
   734  0000                     
   735                           	psect	cinit
   736  00CD                     start_initialization:	
   737  00CD                     __initialization:		;BIGRAM
   738                           
   739                           ; Initialize objects allocated to BIGRAM
   740  00CD  3038               	movlw	low __pidataBIGRAM
   741  00CE  0084               	movwf	4
   742  00CF  3087               	movlw	(high __pidataBIGRAM)| (0+128)
   743  00D0  0085               	movwf	5
   744  00D1  306E               	movlw	low (0+8814)
   745  00D2  0086               	movwf	6
   746  00D3  3022               	movlw	high (0+8814)
   747  00D4  0087               	movwf	7
   748  00D5  3000               	movlw	0
   749  00D6  00FF               	movwf	btemp+1
   750  00D7  3082               	movlw	130
   751  00D8  3195  25C5  3180   	fcall	init_ram
   752                           
   753                           ; Initialize objects allocated to COMMON
   754  00DB  30FA               	movlw	low __pidataCOMMON
   755  00DC  0084               	movwf	4
   756  00DD  3087               	movlw	(high __pidataCOMMON)| (0+128)
   757  00DE  0085               	movwf	5
   758  00DF  3070               	movlw	low __pdataCOMMON
   759  00E0  0086               	movwf	6
   760  00E1  3000               	movlw	high __pdataCOMMON
   761  00E2  0087               	movwf	7
   762  00E3  3000               	movlw	0
   763  00E4  00FF               	movwf	btemp+1
   764  00E5  3006               	movlw	6
   765  00E6  3195  25C5  3180   	fcall	init_ram
   766                           
   767                           ; Initialize objects allocated to BANK0
   768  00E9  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
   769  00EC  00E3               	movwf	__pdataBANK0& (0+127)
   770                           
   771                           ; Initialize objects allocated to BANK1
   772  00ED  30C2               	movlw	low __pidataBANK1
   773  00EE  0084               	movwf	4
   774  00EF  3096               	movlw	(high __pidataBANK1)| (0+128)
   775  00F0  0085               	movwf	5
   776  00F1  30A0               	movlw	low __pdataBANK1
   777  00F2  0086               	movwf	6
   778  00F3  3000               	movlw	high __pdataBANK1
   779  00F4  0087               	movwf	7
   780  00F5  3000               	movlw	0
   781  00F6  00FF               	movwf	btemp+1
   782  00F7  3024               	movlw	36
   783  00F8  3195  25C5  3180   	fcall	init_ram
   784                           
   785                           ; Initialize objects allocated to BANK2
   786  00FB  304A               	movlw	low __pidataBANK2
   787  00FC  0084               	movwf	4
   788  00FD  3097               	movlw	(high __pidataBANK2)| (0+128)
   789  00FE  0085               	movwf	5
   790  00FF  3020               	movlw	low __pdataBANK2
   791  0100  0086               	movwf	6
   792  0101  3001               	movlw	high __pdataBANK2
   793  0102  0087               	movwf	7
   794  0103  3000               	movlw	0
   795  0104  00FF               	movwf	btemp+1
   796  0105  3050               	movlw	80
   797  0106  3195  25C5  3180   	fcall	init_ram
   798                           
   799                           ; Initialize objects allocated to BANK3
   800  0109  30BA               	movlw	low __pidataBANK3
   801  010A  0084               	movwf	4
   802  010B  3087               	movlw	(high __pidataBANK3)| (0+128)
   803  010C  0085               	movwf	5
   804  010D  30A0               	movlw	low __pdataBANK3
   805  010E  0086               	movwf	6
   806  010F  3001               	movlw	high __pdataBANK3
   807  0110  0087               	movwf	7
   808  0111  3000               	movlw	0
   809  0112  00FF               	movwf	btemp+1
   810  0113  3040               	movlw	64
   811  0114  3195  25C5  3180   	fcall	init_ram
   812                           
   813                           ; Clear objects allocated to BANK0
   814  0117  304B               	movlw	low __pbssBANK0
   815  0118  0084               	movwf	4
   816  0119  3000               	movlw	high __pbssBANK0
   817  011A  0085               	movwf	5
   818  011B  3018               	movlw	24
   819  011C  00FE               	movwf	btemp
   820  011D  3000               	movlw	0
   821  011E  00FF               	movwf	btemp+1
   822  011F  3195  25B9  3180   	fcall	clear_ram0
   823                           
   824                           ; Clear objects allocated to BANK1
   825  0122  30C4               	movlw	low __pbssBANK1
   826  0123  0084               	movwf	4
   827  0124  3000               	movlw	high __pbssBANK1
   828  0125  0085               	movwf	5
   829  0126  301C               	movlw	28
   830  0127  00FE               	movwf	btemp
   831  0128  3000               	movlw	0
   832  0129  00FF               	movwf	btemp+1
   833  012A  3195  25B9         	fcall	clear_ram0
   834  012C                     end_of_initialization:	
   835                           ;End of C runtime variable initialization code
   836                           
   837  012C                     __end_of__initialization:	
   838  012C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   839  012D  0020               	movlb	0
   840  012E  3188  28AB         	ljmp	_main	;jump to C main() function
   841                           
   842                           	psect	dataCOMMON
   843  0070                     __pdataCOMMON:	
   844  0070                     _levelofDimmer_MSB:	
   845  0070                     	ds	1
   846  0071                     _ErrorNames:	
   847  0071                     	ds	5
   848                           
   849                           	psect	bssBANK0
   850  004B                     __pbssBANK0:	
   851  004B                     _touchpanelReceivedataPosition:	
   852  004B                     	ds	2
   853  004D                     _mainReceivedDataPosition:	
   854  004D                     	ds	2
   855  004F                     _R7:	
   856  004F                     	ds	2
   857  0051                     _R6:	
   858  0051                     	ds	2
   859  0053                     _R5:	
   860  0053                     	ds	2
   861  0055                     _R4:	
   862  0055                     	ds	2
   863  0057                     _R3:	
   864  0057                     	ds	2
   865  0059                     _R2:	
   866  0059                     	ds	2
   867  005B                     _R1:	
   868  005B                     	ds	2
   869  005D                     _M1:	
   870  005D                     	ds	2
   871  005F                     _CheckFlag2:	
   872  005F                     	ds	2
   873  0061                     _checkFlag:	
   874  0061                     	ds	2
   875                           
   876                           	psect	dataBANK0
   877  0063                     __pdataBANK0:	
   878  0063                     _levelofDimmer_LSB:	
   879  0063                     	ds	1
   880                           
   881                           	psect	bssBANK1
   882  00C4                     __pbssBANK1:	
   883  00C4                     _start_PWM_Generation_in_ISR_FLAG:	
   884  00C4                     	ds	2
   885  00C6                     _touchPanelDataReceived:	
   886  00C6                     	ds	2
   887  00C8                     _mainDataReceived:	
   888  00C8                     	ds	2
   889  00CA                     _R8:	
   890  00CA                     	ds	2
   891  00CC                     _M8:	
   892  00CC                     	ds	2
   893  00CE                     _M7:	
   894  00CE                     	ds	2
   895  00D0                     _M6:	
   896  00D0                     	ds	2
   897  00D2                     _M5:	
   898  00D2                     	ds	2
   899  00D4                     _M4:	
   900  00D4                     	ds	2
   901  00D6                     _M3:	
   902  00D6                     	ds	2
   903  00D8                     _M2:	
   904  00D8                     	ds	2
   905  00DA                     _PreventFlag_ManualTo_Panel:	
   906  00DA                     	ds	2
   907  00DC                     _PreventFlag_Touch2:	
   908  00DC                     	ds	2
   909  00DE                     _PreventFlag_Touch:	
   910  00DE                     	ds	2
   911                           
   912                           	psect	dataBANK1
   913  00A0                     __pdataBANK1:	
   914  00A0                     _copy_parentalLockBuffer:	
   915  00A0                     	ds	32
   916  00C0                     applianceControl@F3750:	
   917  00C0                     	ds	2
   918  00C2                     applianceControl@F3748:	
   919  00C2                     	ds	2
   920                           
   921                           	psect	dataBANK2
   922  0120                     __pdataBANK2:	
   923  0120                     _mainReceivedDataBuffer:	
   924  0120                     	ds	32
   925  0140                     _tempReceiveTouchpanelDataBuffer:	
   926  0140                     	ds	24
   927  0158                     _tempReceivedDataBuffer:	
   928  0158                     	ds	24
   929                           
   930                           	psect	dataBANK3
   931  01A0                     __pdataBANK3:	
   932  01A0                     _touchpanleReceivedDatabuffer:	
   933  01A0                     	ds	32
   934  01C0                     _parentalLockBuffer:	
   935  01C0                     	ds	32
   936                           
   937                           	psect	inittext
   938  15C5                     init_ram:	
   939  15C5  00FE               	movwf	126
   940  15C6                     initloop:	
   941  15C6  0012               	moviw fsr0++
   942  15C7  001E               	movwi fsr1++
   943  15C8  3001               	movlw	1
   944  15C9  02FE               	subwf	126,f
   945  15CA  3000               	movlw	0
   946  15CB  3BFF               	subwfb	127,f
   947  15CC  087F               	movf	127,w
   948  15CD  047E               	iorwf	126,w
   949  15CE  1903               	btfsc	3,2
   950  15CF  3400               	retlw	0
   951  15D0  2DC6               	goto	initloop
   952                           
   953                           	psect	clrtext
   954  15B9                     clear_ram0:	
   955                           ;	Called with FSR0 containing the base address, and
   956                           ;	btemp/btemp+1 has the size to clear
   957                           
   958  15B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   959  15BA                     clrloop0:	
   960  15BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   961  15BB  3101               	addfsr 0,1
   962  15BC  3001               	movlw	1
   963  15BD  02FE               	subwf	126,f
   964  15BE  3000               	movlw	0
   965  15BF  3BFF               	subwfb	127,f
   966  15C0  087F               	movf	127,w
   967  15C1  047E               	iorwf	126,w
   968  15C2  1903               	btfsc	3,2
   969  15C3  3400               	retlw	0	;all done for this memory range, return
   970  15C4  2DBA               	goto	clrloop0	;have we reached the end yet?
   971                           
   972                           	psect	cstackBANK1
   973  00E0                     __pcstackBANK1:	
   974  00E0                     main@start_flag:	
   975                           
   976                           ; 2 bytes @ 0x0
   977  00E0                     	ds	2
   978  00E2                     main@start_flag_484:	
   979                           
   980                           ; 2 bytes @ 0x2
   981  00E2                     	ds	2
   982  00E4                     main@end_flag:	
   983                           
   984                           ; 2 bytes @ 0x4
   985  00E4                     	ds	2
   986  00E6                     main@end_flag_485:	
   987                           
   988                           ; 2 bytes @ 0x6
   989  00E6                     	ds	2
   990  00E8                     main@dataBufferCounter:	
   991                           
   992                           ; 2 bytes @ 0x8
   993  00E8                     	ds	2
   994  00EA                     main@dataBufferCounter_487:	
   995                           
   996                           ; 2 bytes @ 0xA
   997  00EA                     	ds	2
   998  00EC                     main@man:	
   999                           
  1000                           ; 2 bytes @ 0xC
  1001  00EC                     	ds	2
  1002                           
  1003                           	psect	cstackCOMMON
  1004  0076                     __pcstackCOMMON:	
  1005  0076                     ?_isdigit:	
  1006  0076                     ?_errorsISR:	
  1007                           ; 1 bit 
  1008                           
  1009  0076                     ??_errorsISR:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0076                     ?_GPIO_pin_Initialize:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0076                     ?_allPeripheralInit:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0076                     ?_copyReceivedDataBuffer:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0076                     ?_errorsMain:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0076                     ?_copyTouchpanelReceiveDataBuffer:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0076                     ?_clearAllPorts:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0076                     ?_pinINIT_extra:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0076                     ?_EUSART_Initialize:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0076                     ?_EUSART2_Initialize:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0076                     ?_isr:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0076                     ?_main:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x0
  1047  0076                     	ds	1
  1048  0077                     errorsISR@Tx_count:	
  1049                           
  1050                           ; 2 bytes @ 0x1
  1051  0077                     	ds	2
  1052  0079                     errorsISR@errNum:	
  1053                           
  1054                           ; 1 bytes @ 0x3
  1055  0079                     	ds	1
  1056  007A                     ??_isr:	
  1057                           
  1058                           ; 1 bytes @ 0x4
  1059  007A                     	ds	2
  1060                           
  1061                           	psect	cstackBANK0
  1062  0020                     __pcstackBANK0:	
  1063  0020                     ?_sendAcknowledgment:	
  1064  0020                     ?_send_Response_To_Touch:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0020                     ?_sendFeedback_TO_Gateway:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0020                     ??_GPIO_pin_Initialize:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0020                     ??_allPeripheralInit:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0020                     ??_copyReceivedDataBuffer:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0020                     ??_errorsMain:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0020                     ??_copyTouchpanelReceiveDataBuffer:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0020                     ??_clearAllPorts:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0020                     ??_pinINIT_extra:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ??_EUSART_Initialize:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0020                     ??_EUSART2_Initialize:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0020                     ??_isdigit:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0020                     ?___wmul:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0020                     send_Response_To_Touch@switch_status:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106  0020                     sendFeedback_TO_Gateway@Switch_Num:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0020                     _isdigit$731:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0020                     sendAcknowledgment@currentStateBuffer:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0020                     ___wmul@multiplier:	
  1116                           ; 2 bytes @ 0x0
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x0
  1120  0020                     	ds	1
  1121  0021                     ??_sendFeedback_TO_Gateway:	
  1122  0021                     send_Response_To_Touch@fan_speed:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125  0021                     isdigit@c:	
  1126                           ; 1 bytes @ 0x1
  1127                           
  1128  0021                     errorsMain@Tx_count:	
  1129                           ; 1 bytes @ 0x1
  1130                           
  1131  0021                     copyReceivedDataBuffer@dataBufferCounter:	
  1132                           ; 2 bytes @ 0x1
  1133                           
  1134  0021                     copyTouchpanelReceiveDataBuffer@dataBufferCounter:	
  1135                           ; 2 bytes @ 0x1
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0x1
  1139  0021                     	ds	1
  1140  0022                     ??_sendAcknowledgment:	
  1141  0022                     ??_send_Response_To_Touch:	
  1142                           ; 1 bytes @ 0x2
  1143                           
  1144  0022                     sendFeedback_TO_Gateway@sw_status:	
  1145                           ; 1 bytes @ 0x2
  1146                           
  1147  0022                     sendAcknowledgment@Tx_count:	
  1148                           ; 1 bytes @ 0x2
  1149                           
  1150  0022                     ___wmul@multiplicand:	
  1151                           ; 2 bytes @ 0x2
  1152                           
  1153                           
  1154                           ; 2 bytes @ 0x2
  1155  0022                     	ds	1
  1156  0023                     ?_actiontouchPanel:	
  1157  0023                     actiontouchPanel@sw_status:	
  1158                           ; 1 bytes @ 0x3
  1159                           
  1160  0023                     send_Response_To_Touch@switch_no:	
  1161                           ; 1 bytes @ 0x3
  1162                           
  1163  0023                     errorsMain@errNum:	
  1164                           ; 1 bytes @ 0x3
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0x3
  1168  0023                     	ds	1
  1169  0024                     ??___wmul:	
  1170  0024                     actiontouchPanel@speeds:	
  1171                           ; 1 bytes @ 0x4
  1172                           
  1173  0024                     ___wmul@product:	
  1174                           ; 1 bytes @ 0x4
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x4
  1178  0024                     	ds	1
  1179  0025                     ??_actiontouchPanel:	
  1180                           
  1181                           ; 1 bytes @ 0x5
  1182  0025                     	ds	1
  1183  0026                     ?_atoi:	
  1184                           
  1185                           ; 2 bytes @ 0x6
  1186  0026                     	ds	1
  1187  0027                     actiontouchPanel@ch_sw_num:	
  1188                           
  1189                           ; 1 bytes @ 0x7
  1190  0027                     	ds	1
  1191  0028                     ??_atoi:	
  1192  0028                     actiontouchPanel@SwNum:	
  1193                           ; 1 bytes @ 0x8
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0x8
  1197  0028                     	ds	2
  1198  002A                     atoi@sign:	
  1199  002A                     actiontouchPanel@preventFlag:	
  1200                           ; 1 bytes @ 0xA
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0xA
  1204  002A                     	ds	1
  1205  002B                     atoi@a:	
  1206                           
  1207                           ; 2 bytes @ 0xB
  1208  002B                     	ds	1
  1209  002C                     actiontouchPanel@Switch_Num:	
  1210                           
  1211                           ; 1 bytes @ 0xC
  1212  002C                     	ds	1
  1213  002D                     atoi@s:	
  1214  002D                     actiontouchPanel@integer_switch_speed:	
  1215                           ; 1 bytes @ 0xD
  1216                           
  1217                           
  1218                           ; 2 bytes @ 0xD
  1219  002D                     	ds	1
  1220  002E                     ?_applianceControl:	
  1221  002E                     applianceControl@charSwitchLSB:	
  1222                           ; 1 bytes @ 0xE
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0xE
  1226  002E                     	ds	1
  1227  002F                     applianceControl@charSwitchSTATE:	
  1228  002F                     actiontouchPanel@switch_status:	
  1229                           ; 1 bytes @ 0xF
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0xF
  1233  002F                     	ds	1
  1234  0030                     applianceControl@chDimmerSpeedMSB:	
  1235                           
  1236                           ; 1 bytes @ 0x10
  1237  0030                     	ds	1
  1238  0031                     applianceControl@chDimmerSpeedLSB:	
  1239                           
  1240                           ; 1 bytes @ 0x11
  1241  0031                     	ds	1
  1242  0032                     applianceControl@charParentalControl:	
  1243                           
  1244                           ; 1 bytes @ 0x12
  1245  0032                     	ds	1
  1246  0033                     applianceControl@charFinalFrameState:	
  1247                           
  1248                           ; 1 bytes @ 0x13
  1249  0033                     	ds	1
  1250  0034                     ??_applianceControl:	
  1251                           
  1252                           ; 1 bytes @ 0x14
  1253  0034                     	ds	4
  1254  0038                     applianceControl@integerSpeed:	
  1255                           
  1256                           ; 2 bytes @ 0x18
  1257  0038                     	ds	2
  1258  003A                     applianceControl@charSwitchMSB:	
  1259                           
  1260                           ; 1 bytes @ 0x1A
  1261  003A                     	ds	1
  1262  003B                     applianceControl@switchNumberStringBuffer:	
  1263                           
  1264                           ; 2 bytes @ 0x1B
  1265  003B                     	ds	2
  1266  003D                     applianceControl@dimmerSpeedStringBuffer:	
  1267                           
  1268                           ; 2 bytes @ 0x1D
  1269  003D                     	ds	2
  1270  003F                     applianceControl@currentStateBufferPositions:	
  1271                           
  1272                           ; 2 bytes @ 0x1F
  1273  003F                     	ds	2
  1274  0041                     applianceControl@integerSwitchNumber:	
  1275                           
  1276                           ; 2 bytes @ 0x21
  1277  0041                     	ds	2
  1278  0043                     applianceControl@integerSwitchState:	
  1279                           
  1280                           ; 2 bytes @ 0x23
  1281  0043                     	ds	2
  1282  0045                     ??_main:	
  1283                           
  1284                           ; 1 bytes @ 0x25
  1285  0045                     	ds	6
  1286                           
  1287                           	psect	maintext
  1288  08AB                     __pmaintext:	
  1289 ;;
  1290 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1291 ;;
  1292 ;; *************** function _main *****************
  1293 ;; Defined at:
  1294 ;;		line 300 in file "../master_eight.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  dataBufferCo    2   10[BANK1 ] int 
  1299 ;;  dataBufferCo    2    8[BANK1 ] int 
  1300 ;;  end_flag        2    6[BANK1 ] int 
  1301 ;;  start_flag      2    2[BANK1 ] int 
  1302 ;;  end_flag        2    4[BANK1 ] int 
  1303 ;;  start_flag      2    0[BANK1 ] int 
  1304 ;;  man             2   12[BANK1 ] int 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2  307[None  ] int 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : B1F/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         0       6      14       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:       20 bytes
  1319 ;; Hardware stack levels required when called:    5
  1320 ;; This function calls:
  1321 ;;		_GPIO_pin_Initialize
  1322 ;;		_actiontouchPanel
  1323 ;;		_allPeripheralInit
  1324 ;;		_applianceControl
  1325 ;;		_copyReceivedDataBuffer
  1326 ;;		_copyTouchpanelReceiveDataBuffer
  1327 ;;		_errorsMain
  1328 ;;		_send_Response_To_Touch
  1329 ;; This function is called by:
  1330 ;;		Startup code after reset
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _main
  1336  08AB                     _main:	
  1337                           
  1338                           ;master_eight.c: 302: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1342  08AB  3029               	movlw	41
  1343  08AC  0020               	movlb	0	; select bank0
  1344  08AD  00C6               	movwf	??_main+1
  1345  08AE  3096               	movlw	150
  1346  08AF  00C5               	movwf	??_main
  1347  08B0  307F               	movlw	127
  1348  08B1                     u5047:	
  1349  08B1  0B89               	decfsz	9,f
  1350  08B2  28B1               	goto	u5047
  1351  08B3  0BC5               	decfsz	??_main,f
  1352  08B4  28B1               	goto	u5047
  1353  08B5  0BC6               	decfsz	??_main+1,f
  1354  08B6  28B1               	goto	u5047
  1355                           
  1356                           ;master_eight.c: 305: GPIO_pin_Initialize();
  1357  08B7  3196  269E  3188   	fcall	_GPIO_pin_Initialize
  1358                           
  1359                           ;master_eight.c: 306: allPeripheralInit();
  1360  08BA  3188  2005  3188   	fcall	_allPeripheralInit
  1361                           
  1362                           ;master_eight.c: 307: R1=1;R2=1;R3=1;R4=1;R5=1;R6=1;R7=1;R8=1;
  1363  08BD  3001               	movlw	1
  1364  08BE  0020               	movlb	0	; select bank0
  1365  08BF  00DB               	movwf	_R1
  1366  08C0  3000               	movlw	0
  1367  08C1  00DC               	movwf	_R1+1
  1368  08C2  3001               	movlw	1
  1369  08C3  00D9               	movwf	_R2
  1370  08C4  3000               	movlw	0
  1371  08C5  00DA               	movwf	_R2+1
  1372  08C6  3001               	movlw	1
  1373  08C7  00D7               	movwf	_R3
  1374  08C8  3000               	movlw	0
  1375  08C9  00D8               	movwf	_R3+1
  1376  08CA  3001               	movlw	1
  1377  08CB  00D5               	movwf	_R4
  1378  08CC  3000               	movlw	0
  1379  08CD  00D6               	movwf	_R4+1
  1380  08CE  3001               	movlw	1
  1381  08CF  00D3               	movwf	_R5
  1382  08D0  3000               	movlw	0
  1383  08D1  00D4               	movwf	_R5+1
  1384  08D2  3001               	movlw	1
  1385  08D3  00D1               	movwf	_R6
  1386  08D4  3000               	movlw	0
  1387  08D5  00D2               	movwf	_R6+1
  1388  08D6  3001               	movlw	1
  1389  08D7  00CF               	movwf	_R7
  1390  08D8  3000               	movlw	0
  1391  08D9  00D0               	movwf	_R7+1
  1392  08DA  3001               	movlw	1
  1393  08DB  0021               	movlb	1	; select bank1
  1394  08DC  00CA               	movwf	_R8^(0+128)
  1395  08DD  3000               	movlw	0
  1396  08DE  00CB               	movwf	(_R8^(0+128)+1)
  1397                           
  1398                           ;master_eight.c: 308: RA4 = 1;
  1399  08DF  0020               	movlb	0	; select bank0
  1400  08E0  160C               	bsf	12,4	;volatile
  1401                           
  1402                           ;master_eight.c: 309: RB4=0;
  1403  08E1  120D               	bcf	13,4	;volatile
  1404                           
  1405                           ;master_eight.c: 310: RB2=0;
  1406  08E2  110D               	bcf	13,2	;volatile
  1407                           
  1408                           ;master_eight.c: 311: RB0=0;
  1409  08E3  100D               	bcf	13,0	;volatile
  1410                           
  1411                           ;master_eight.c: 312: PreventFlag_Touch=0;
  1412  08E4  0021               	movlb	1	; select bank1
  1413  08E5  01DE               	clrf	_PreventFlag_Touch^(0+128)
  1414  08E6  01DF               	clrf	(_PreventFlag_Touch+1)^(0+128)
  1415  08E7                     l3570:	
  1416                           ;master_eight.c: 315: while(1){
  1417                           
  1418                           
  1419                           ;master_eight.c: 317: if(mainDataReceived==1){
  1420  08E7  0021               	movlb	1	; select bank1
  1421  08E8  0348               	decf	_mainDataReceived^(0+128),w
  1422  08E9  0449               	iorwf	(_mainDataReceived+1)^(0+128),w
  1423  08EA  1D03               	btfss	3,2
  1424  08EB  29A3               	goto	l3630
  1425                           
  1426                           ;master_eight.c: 318: mainDataReceived=0;
  1427  08EC  01C8               	clrf	_mainDataReceived^(0+128)
  1428  08ED  01C9               	clrf	(_mainDataReceived+1)^(0+128)
  1429                           
  1430                           ;master_eight.c: 319: checkFlag=1;
  1431  08EE  3001               	movlw	1
  1432  08EF  0020               	movlb	0	; select bank0
  1433  08F0  00E1               	movwf	_checkFlag
  1434  08F1  3000               	movlw	0
  1435  08F2  00E2               	movwf	_checkFlag+1
  1436                           
  1437                           ;master_eight.c: 320: int start_flag = 0;
  1438  08F3  0021               	movlb	1	; select bank1
  1439  08F4  01E0               	clrf	main@start_flag^(0+128)
  1440  08F5  01E1               	clrf	(main@start_flag+1)^(0+128)
  1441                           
  1442                           ;master_eight.c: 321: int end_flag = 0;
  1443  08F6  01E4               	clrf	main@end_flag^(0+128)
  1444  08F7  01E5               	clrf	(main@end_flag+1)^(0+128)
  1445                           
  1446                           ;master_eight.c: 322: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%
      +                          ' && mainReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1447  08F8  3025               	movlw	37
  1448  08F9  0022               	movlb	2	; select bank2
  1449  08FA  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1450  08FB  1D03               	btfss	3,2
  1451  08FC  295A               	goto	l3610
  1452  08FD  3025               	movlw	37
  1453  08FE  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1454  08FF  1D03               	btfss	3,2
  1455  0900  295A               	goto	l3610
  1456  0901  3040               	movlw	64
  1457  0902  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1458  0903  1D03               	btfss	3,2
  1459  0904  295A               	goto	l3610
  1460  0905  3040               	movlw	64
  1461  0906  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1462  0907  1D03               	btfss	3,2
  1463  0908  295A               	goto	l3610
  1464                           
  1465                           ;master_eight.c: 323: if(mainReceivedDataBuffer[0] == '%' && mainReceivedDataBuffer[1]==
      +                          '%' && start_flag == 0)
  1466  0909  3025               	movlw	37
  1467  090A  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1468  090B  1D03               	btfss	3,2
  1469  090C  291A               	goto	l3596
  1470  090D  3025               	movlw	37
  1471  090E  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1472  090F  1D03               	btfss	3,2
  1473  0910  291A               	goto	l3596
  1474  0911  0021               	movlb	1	; select bank1
  1475  0912  0860               	movf	main@start_flag^(0+128),w
  1476  0913  0461               	iorwf	(main@start_flag+1)^(0+128),w
  1477  0914  1D03               	btfss	3,2
  1478  0915  291A               	goto	l3596
  1479                           
  1480                           ;master_eight.c: 324: {
  1481                           ;master_eight.c: 325: end_flag = 1;
  1482  0916  3001               	movlw	1
  1483  0917  00E4               	movwf	main@end_flag^(0+128)
  1484  0918  3000               	movlw	0
  1485  0919  00E5               	movwf	(main@end_flag^(0+128)+1)
  1486  091A                     l3596:	
  1487                           
  1488                           ;master_eight.c: 326: }
  1489                           ;master_eight.c: 327: if(mainReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]==
      +                          '@' && end_flag ==1)
  1490  091A  3040               	movlw	64
  1491  091B  0022               	movlb	2	; select bank2
  1492  091C  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1493  091D  1D03               	btfss	3,2
  1494  091E  2930               	goto	l3608
  1495  091F  3040               	movlw	64
  1496  0920  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1497  0921  1D03               	btfss	3,2
  1498  0922  2930               	goto	l3608
  1499  0923  0021               	movlb	1	; select bank1
  1500  0924  0364               	decf	main@end_flag^(0+128),w
  1501  0925  0465               	iorwf	(main@end_flag+1)^(0+128),w
  1502  0926  1D03               	btfss	3,2
  1503  0927  2930               	goto	l3608
  1504                           
  1505                           ;master_eight.c: 328: {
  1506                           ;master_eight.c: 329: copyReceivedDataBuffer();
  1507  0928  3196  26E6  3188   	fcall	_copyReceivedDataBuffer
  1508                           
  1509                           ;master_eight.c: 330: start_flag = 0;
  1510  092B  0021               	movlb	1	; select bank1
  1511  092C  01E0               	clrf	main@start_flag^(0+128)
  1512  092D  01E1               	clrf	(main@start_flag+1)^(0+128)
  1513                           
  1514                           ;master_eight.c: 331: end_flag = 0;
  1515  092E  01E4               	clrf	main@end_flag^(0+128)
  1516  092F  01E5               	clrf	(main@end_flag+1)^(0+128)
  1517  0930                     l3608:	
  1518                           
  1519                           ;master_eight.c: 332: }
  1520                           ;master_eight.c: 338: applianceControl(tempReceivedDataBuffer[0],
  1521                           ;master_eight.c: 339: tempReceivedDataBuffer[1],
  1522                           ;master_eight.c: 340: tempReceivedDataBuffer[2],
  1523                           ;master_eight.c: 341: tempReceivedDataBuffer[3],
  1524                           ;master_eight.c: 342: tempReceivedDataBuffer[4],
  1525                           ;master_eight.c: 343: tempReceivedDataBuffer[5],
  1526                           ;master_eight.c: 344: tempReceivedDataBuffer[6]);
  1527  0930  0022               	movlb	2	; select bank2
  1528  0931  0859               	movf	(_tempReceivedDataBuffer^(0+256)+1),w
  1529  0932  0020               	movlb	0	; select bank0
  1530  0933  00C5               	movwf	??_main
  1531  0934  0845               	movf	??_main,w
  1532  0935  00AE               	movwf	applianceControl@charSwitchLSB
  1533  0936  0022               	movlb	2	; select bank2
  1534  0937  085A               	movf	(_tempReceivedDataBuffer^(0+256)+2),w
  1535  0938  0020               	movlb	0	; select bank0
  1536  0939  00C6               	movwf	??_main+1
  1537  093A  0846               	movf	??_main+1,w
  1538  093B  00AF               	movwf	applianceControl@charSwitchSTATE
  1539  093C  0022               	movlb	2	; select bank2
  1540  093D  085B               	movf	(_tempReceivedDataBuffer^(0+256)+3),w
  1541  093E  0020               	movlb	0	; select bank0
  1542  093F  00C7               	movwf	??_main+2
  1543  0940  0847               	movf	??_main+2,w
  1544  0941  00B0               	movwf	applianceControl@chDimmerSpeedMSB
  1545  0942  0022               	movlb	2	; select bank2
  1546  0943  085C               	movf	(_tempReceivedDataBuffer^(0+256)+4),w
  1547  0944  0020               	movlb	0	; select bank0
  1548  0945  00C8               	movwf	??_main+3
  1549  0946  0848               	movf	??_main+3,w
  1550  0947  00B1               	movwf	applianceControl@chDimmerSpeedLSB
  1551  0948  0022               	movlb	2	; select bank2
  1552  0949  085D               	movf	(_tempReceivedDataBuffer^(0+256)+5),w
  1553  094A  0020               	movlb	0	; select bank0
  1554  094B  00C9               	movwf	??_main+4
  1555  094C  0849               	movf	??_main+4,w
  1556  094D  00B2               	movwf	applianceControl@charParentalControl
  1557  094E  0022               	movlb	2	; select bank2
  1558  094F  085E               	movf	(_tempReceivedDataBuffer^(0+256)+6),w
  1559  0950  0020               	movlb	0	; select bank0
  1560  0951  00CA               	movwf	??_main+5
  1561  0952  084A               	movf	??_main+5,w
  1562  0953  00B3               	movwf	applianceControl@charFinalFrameState
  1563  0954  0022               	movlb	2	; select bank2
  1564  0955  0858               	movf	_tempReceivedDataBuffer^(0+256),w
  1565  0956  3181  2130  3188   	fcall	_applianceControl
  1566                           
  1567                           ;master_eight.c: 346: }
  1568  0959  29A3               	goto	l3630
  1569  095A                     l3610:	
  1570                           
  1571                           ;master_eight.c: 347: else{
  1572                           ;master_eight.c: 348: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1573  095A  3045               	movlw	69
  1574  095B  0020               	movlb	0	; select bank0
  1575  095C  00C5               	movwf	??_main
  1576  095D  0845               	movf	??_main,w
  1577  095E  00F1               	movwf	_ErrorNames
  1578  095F  3052               	movlw	82
  1579  0960  00C5               	movwf	??_main
  1580  0961  0845               	movf	??_main,w
  1581  0962  00F2               	movwf	_ErrorNames+1
  1582  0963  304C               	movlw	76
  1583  0964  00C5               	movwf	??_main
  1584  0965  0845               	movf	??_main,w
  1585  0966  00F3               	movwf	_ErrorNames+2
  1586  0967  3053               	movlw	83
  1587  0968  00C5               	movwf	??_main
  1588  0969  0845               	movf	??_main,w
  1589  096A  00F4               	movwf	_ErrorNames+3
  1590                           
  1591                           ;master_eight.c: 349: errorsMain(ErrorNames);
  1592  096B  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1593  096C  3196  2681  3188   	fcall	_errorsMain
  1594                           
  1595                           ;master_eight.c: 350: RC1STAbits.SPEN=0;
  1596  096F  0023               	movlb	3	; select bank3
  1597  0970  139D               	bcf	29,7	;volatile
  1598                           
  1599                           ;master_eight.c: 351: RC1STAbits.CREN = 0;
  1600  0971  121D               	bcf	29,4	;volatile
  1601                           
  1602                           ;master_eight.c: 352: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCo
      +                          unter++)
  1603  0972  0021               	movlb	1	; select bank1
  1604  0973  01E8               	clrf	main@dataBufferCounter^(0+128)
  1605  0974  01E9               	clrf	(main@dataBufferCounter+1)^(0+128)
  1606  0975  0869               	movf	(main@dataBufferCounter+1)^(0+128),w
  1607  0976  3A80               	xorlw	128
  1608  0977  0020               	movlb	0	; select bank0
  1609  0978  00C5               	movwf	??_main
  1610  0979  3080               	movlw	128
  1611  097A  0245               	subwf	??_main,w
  1612  097B  1D03               	skipz
  1613  097C  2980               	goto	u4365
  1614  097D  300F               	movlw	15
  1615  097E  0021               	movlb	1	; select bank1
  1616  097F  0268               	subwf	main@dataBufferCounter^(0+128),w
  1617  0980                     u4365:	
  1618  0980  1803               	btfsc	3,0
  1619  0981  29A0               	goto	l315
  1620  0982                     l3624:	
  1621                           
  1622                           ;master_eight.c: 353: {
  1623                           ;master_eight.c: 354: mainReceivedDataBuffer[dataBufferCounter] = '#';
  1624  0982  3023               	movlw	35
  1625  0983  0020               	movlb	0	; select bank0
  1626  0984  00C5               	movwf	??_main
  1627  0985  0021               	movlb	1	; select bank1
  1628  0986  0868               	movf	main@dataBufferCounter^(0+128),w
  1629  0987  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1630  0988  0086               	movwf	6
  1631  0989  3001               	movlw	1	; select bank2/3
  1632  098A  0087               	movwf	7
  1633  098B  0020               	movlb	0	; select bank0
  1634  098C  0845               	movf	??_main,w
  1635  098D  0081               	movwf	1
  1636  098E  3001               	movlw	1
  1637  098F  0021               	movlb	1	; select bank1
  1638  0990  07E8               	addwf	main@dataBufferCounter^(0+128),f
  1639  0991  3000               	movlw	0
  1640  0992  3DE9               	addwfc	(main@dataBufferCounter+1)^(0+128),f
  1641  0993  0869               	movf	(main@dataBufferCounter+1)^(0+128),w
  1642  0994  3A80               	xorlw	128
  1643  0995  0020               	movlb	0	; select bank0
  1644  0996  00C5               	movwf	??_main
  1645  0997  3080               	movlw	128
  1646  0998  0245               	subwf	??_main,w
  1647  0999  1D03               	skipz
  1648  099A  299E               	goto	u4375
  1649  099B  300F               	movlw	15
  1650  099C  0021               	movlb	1	; select bank1
  1651  099D  0268               	subwf	main@dataBufferCounter^(0+128),w
  1652  099E                     u4375:	
  1653  099E  1C03               	skipc
  1654  099F  2982               	goto	l3624
  1655  09A0                     l315:	
  1656                           
  1657                           ;master_eight.c: 355: }
  1658                           ;master_eight.c: 356: RC1STAbits.CREN = 1;
  1659  09A0  0023               	movlb	3	; select bank3
  1660  09A1  161D               	bsf	29,4	;volatile
  1661                           
  1662                           ;master_eight.c: 357: RC1STAbits.SPEN=1;
  1663  09A2  179D               	bsf	29,7	;volatile
  1664  09A3                     l3630:	
  1665                           
  1666                           ;master_eight.c: 358: }
  1667                           ;master_eight.c: 359: }
  1668                           ;master_eight.c: 362: if(touchPanelDataReceived == 1)
  1669  09A3  0021               	movlb	1	; select bank1
  1670  09A4  0346               	decf	_touchPanelDataReceived^(0+128),w
  1671  09A5  0447               	iorwf	(_touchPanelDataReceived+1)^(0+128),w
  1672  09A6  1D03               	btfss	3,2
  1673  09A7  2A43               	goto	l3684
  1674                           
  1675                           ;master_eight.c: 363: {
  1676                           ;master_eight.c: 364: CheckFlag2=1;
  1677  09A8  3001               	movlw	1
  1678  09A9  0020               	movlb	0	; select bank0
  1679  09AA  00DF               	movwf	_CheckFlag2
  1680  09AB  3000               	movlw	0
  1681  09AC  00E0               	movwf	_CheckFlag2+1
  1682                           
  1683                           ;master_eight.c: 365: PreventFlag_Touch=1;
  1684  09AD  3001               	movlw	1
  1685  09AE  0021               	movlb	1	; select bank1
  1686  09AF  00DE               	movwf	_PreventFlag_Touch^(0+128)
  1687  09B0  3000               	movlw	0
  1688  09B1  00DF               	movwf	(_PreventFlag_Touch^(0+128)+1)
  1689                           
  1690                           ;master_eight.c: 366: PreventFlag_ManualTo_Panel=1;
  1691  09B2  3001               	movlw	1
  1692  09B3  00DA               	movwf	_PreventFlag_ManualTo_Panel^(0+128)
  1693  09B4  3000               	movlw	0
  1694  09B5  00DB               	movwf	(_PreventFlag_ManualTo_Panel^(0+128)+1)
  1695                           
  1696                           ;master_eight.c: 367: touchPanelDataReceived = 0;
  1697  09B6  01C6               	clrf	_touchPanelDataReceived^(0+128)
  1698  09B7  01C7               	clrf	(_touchPanelDataReceived+1)^(0+128)
  1699                           
  1700                           ;master_eight.c: 368: int start_flag = 0;
  1701  09B8  01E2               	clrf	main@start_flag_484^(0+128)
  1702  09B9  01E3               	clrf	(main@start_flag_484+1)^(0+128)
  1703                           
  1704                           ;master_eight.c: 369: int end_flag = 0;
  1705  09BA  01E6               	clrf	main@end_flag_485^(0+128)
  1706  09BB  01E7               	clrf	(main@end_flag_485+1)^(0+128)
  1707                           
  1708                           ;master_eight.c: 370: if(touchpanleReceivedDatabuffer[0] == '(' && touchpanleReceivedDat
      +                          abuffer[7] == ')')
  1709  09BC  3028               	movlw	40
  1710  09BD  0023               	movlb	3	; select bank3
  1711  09BE  0620               	xorwf	_touchpanleReceivedDatabuffer^(0+384),w
  1712  09BF  1D03               	btfss	3,2
  1713  09C0  29FA               	goto	l3664
  1714  09C1  3029               	movlw	41
  1715  09C2  0627               	xorwf	(_touchpanleReceivedDatabuffer^(0+384)+7),w
  1716  09C3  1D03               	btfss	3,2
  1717  09C4  29FA               	goto	l3664
  1718                           
  1719                           ;master_eight.c: 371: {
  1720                           ;master_eight.c: 373: if(touchpanleReceivedDatabuffer[0] == '(' && start_flag == 0)
  1721  09C5  3028               	movlw	40
  1722  09C6  0620               	xorwf	_touchpanleReceivedDatabuffer^(0+384),w
  1723  09C7  1D03               	btfss	3,2
  1724  09C8  29D2               	goto	l3650
  1725  09C9  0021               	movlb	1	; select bank1
  1726  09CA  0862               	movf	main@start_flag_484^(0+128),w
  1727  09CB  0463               	iorwf	(main@start_flag_484+1)^(0+128),w
  1728  09CC  1D03               	btfss	3,2
  1729  09CD  29D2               	goto	l3650
  1730                           
  1731                           ;master_eight.c: 374: {
  1732                           ;master_eight.c: 375: end_flag =1;
  1733  09CE  3001               	movlw	1
  1734  09CF  00E6               	movwf	main@end_flag_485^(0+128)
  1735  09D0  3000               	movlw	0
  1736  09D1  00E7               	movwf	(main@end_flag_485^(0+128)+1)
  1737  09D2                     l3650:	
  1738                           
  1739                           ;master_eight.c: 377: }
  1740                           ;master_eight.c: 378: if(touchpanleReceivedDatabuffer[7] == ')' && end_flag ==1)
  1741  09D2  3029               	movlw	41
  1742  09D3  0023               	movlb	3	; select bank3
  1743  09D4  0627               	xorwf	(_touchpanleReceivedDatabuffer^(0+384)+7),w
  1744  09D5  1D03               	btfss	3,2
  1745  09D6  2A43               	goto	l3684
  1746  09D7  0021               	movlb	1	; select bank1
  1747  09D8  0366               	decf	main@end_flag_485^(0+128),w
  1748  09D9  0467               	iorwf	(main@end_flag_485+1)^(0+128),w
  1749  09DA  1D03               	btfss	3,2
  1750  09DB  2A43               	goto	l3684
  1751                           
  1752                           ;master_eight.c: 379: {
  1753                           ;master_eight.c: 380: copyTouchpanelReceiveDataBuffer();
  1754  09DC  3197  2718  3188   	fcall	_copyTouchpanelReceiveDataBuffer
  1755                           
  1756                           ;master_eight.c: 381: if(tempReceiveTouchpanelDataBuffer[0] != '@'){
  1757  09DF  3040               	movlw	64
  1758  09E0  0022               	movlb	2	; select bank2
  1759  09E1  0640               	xorwf	_tempReceiveTouchpanelDataBuffer^(0+256),w
  1760  09E2  1903               	btfsc	3,2
  1761  09E3  2A43               	goto	l3684
  1762                           
  1763                           ;master_eight.c: 386: actiontouchPanel(tempReceiveTouchpanelDataBuffer[0],tempReceiveTou
      +                          chpanelDataBuffer[1],tempReceiveTouchpanelDataBuffer[2]);
  1764  09E4  0841               	movf	(_tempReceiveTouchpanelDataBuffer^(0+256)+1),w
  1765  09E5  0020               	movlb	0	; select bank0
  1766  09E6  00C5               	movwf	??_main
  1767  09E7  0845               	movf	??_main,w
  1768  09E8  00A3               	movwf	actiontouchPanel@sw_status
  1769  09E9  0022               	movlb	2	; select bank2
  1770  09EA  0842               	movf	(_tempReceiveTouchpanelDataBuffer^(0+256)+2),w
  1771  09EB  0020               	movlb	0	; select bank0
  1772  09EC  00C6               	movwf	??_main+1
  1773  09ED  0846               	movf	??_main+1,w
  1774  09EE  00A4               	movwf	actiontouchPanel@speeds
  1775  09EF  0022               	movlb	2	; select bank2
  1776  09F0  0840               	movf	_tempReceiveTouchpanelDataBuffer^(0+256),w
  1777  09F1  3184  24A7  3188   	fcall	_actiontouchPanel
  1778                           
  1779                           ;master_eight.c: 387: start_flag = 0;
  1780  09F4  0021               	movlb	1	; select bank1
  1781  09F5  01E2               	clrf	main@start_flag_484^(0+128)
  1782  09F6  01E3               	clrf	(main@start_flag_484+1)^(0+128)
  1783                           
  1784                           ;master_eight.c: 388: end_flag = 0;
  1785  09F7  01E6               	clrf	main@end_flag_485^(0+128)
  1786  09F8  01E7               	clrf	(main@end_flag_485+1)^(0+128)
  1787                           
  1788                           ;master_eight.c: 389: }
  1789                           ;master_eight.c: 391: }
  1790                           ;master_eight.c: 393: }
  1791  09F9  2A43               	goto	l3684
  1792  09FA                     l3664:	
  1793                           
  1794                           ;master_eight.c: 394: else
  1795                           ;master_eight.c: 395: {
  1796                           ;master_eight.c: 396: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1797  09FA  3045               	movlw	69
  1798  09FB  0020               	movlb	0	; select bank0
  1799  09FC  00C5               	movwf	??_main
  1800  09FD  0845               	movf	??_main,w
  1801  09FE  00F1               	movwf	_ErrorNames
  1802  09FF  3052               	movlw	82
  1803  0A00  00C5               	movwf	??_main
  1804  0A01  0845               	movf	??_main,w
  1805  0A02  00F2               	movwf	_ErrorNames+1
  1806  0A03  304C               	movlw	76
  1807  0A04  00C5               	movwf	??_main
  1808  0A05  0845               	movf	??_main,w
  1809  0A06  00F3               	movwf	_ErrorNames+2
  1810  0A07  3053               	movlw	83
  1811  0A08  00C5               	movwf	??_main
  1812  0A09  0845               	movf	??_main,w
  1813  0A0A  00F4               	movwf	_ErrorNames+3
  1814                           
  1815                           ;master_eight.c: 397: errorsMain(ErrorNames);
  1816  0A0B  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1817  0A0C  3196  2681  3188   	fcall	_errorsMain
  1818                           
  1819                           ;master_eight.c: 398: RC2STAbits.SPEN = 0;
  1820  0A0F  0029               	movlb	9	; select bank9
  1821  0A10  1395               	bcf	21,7	;volatile
  1822                           
  1823                           ;master_eight.c: 399: RC2STAbits.CREN = 0;
  1824  0A11  1215               	bcf	21,4	;volatile
  1825                           
  1826                           ;master_eight.c: 400: for(int dataBufferCounter = 0; dataBufferCounter< 8; dataBufferCou
      +                          nter++)
  1827  0A12  0021               	movlb	1	; select bank1
  1828  0A13  01EA               	clrf	main@dataBufferCounter_487^(0+128)
  1829  0A14  01EB               	clrf	(main@dataBufferCounter_487+1)^(0+128)
  1830  0A15  086B               	movf	(main@dataBufferCounter_487+1)^(0+128),w
  1831  0A16  3A80               	xorlw	128
  1832  0A17  0020               	movlb	0	; select bank0
  1833  0A18  00C5               	movwf	??_main
  1834  0A19  3080               	movlw	128
  1835  0A1A  0245               	subwf	??_main,w
  1836  0A1B  1D03               	skipz
  1837  0A1C  2A20               	goto	u4465
  1838  0A1D  3008               	movlw	8
  1839  0A1E  0021               	movlb	1	; select bank1
  1840  0A1F  026A               	subwf	main@dataBufferCounter_487^(0+128),w
  1841  0A20                     u4465:	
  1842  0A20  1803               	btfsc	3,0
  1843  0A21  2A40               	goto	l323
  1844  0A22                     l3678:	
  1845                           
  1846                           ;master_eight.c: 401: {
  1847                           ;master_eight.c: 402: touchpanleReceivedDatabuffer[dataBufferCounter] = '#';
  1848  0A22  3023               	movlw	35
  1849  0A23  0020               	movlb	0	; select bank0
  1850  0A24  00C5               	movwf	??_main
  1851  0A25  0021               	movlb	1	; select bank1
  1852  0A26  086A               	movf	main@dataBufferCounter_487^(0+128),w
  1853  0A27  3EA0               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  1854  0A28  0086               	movwf	6
  1855  0A29  3001               	movlw	1	; select bank3/4
  1856  0A2A  0087               	movwf	7
  1857  0A2B  0020               	movlb	0	; select bank0
  1858  0A2C  0845               	movf	??_main,w
  1859  0A2D  0081               	movwf	1
  1860  0A2E  3001               	movlw	1
  1861  0A2F  0021               	movlb	1	; select bank1
  1862  0A30  07EA               	addwf	main@dataBufferCounter_487^(0+128),f
  1863  0A31  3000               	movlw	0
  1864  0A32  3DEB               	addwfc	(main@dataBufferCounter_487+1)^(0+128),f
  1865  0A33  086B               	movf	(main@dataBufferCounter_487+1)^(0+128),w
  1866  0A34  3A80               	xorlw	128
  1867  0A35  0020               	movlb	0	; select bank0
  1868  0A36  00C5               	movwf	??_main
  1869  0A37  3080               	movlw	128
  1870  0A38  0245               	subwf	??_main,w
  1871  0A39  1D03               	skipz
  1872  0A3A  2A3E               	goto	u4475
  1873  0A3B  3008               	movlw	8
  1874  0A3C  0021               	movlb	1	; select bank1
  1875  0A3D  026A               	subwf	main@dataBufferCounter_487^(0+128),w
  1876  0A3E                     u4475:	
  1877  0A3E  1C03               	skipc
  1878  0A3F  2A22               	goto	l3678
  1879  0A40                     l323:	
  1880                           
  1881                           ;master_eight.c: 403: }
  1882                           ;master_eight.c: 404: RC2STAbits.CREN = 1;
  1883  0A40  0029               	movlb	9	; select bank9
  1884  0A41  1615               	bsf	21,4	;volatile
  1885                           
  1886                           ;master_eight.c: 405: RC2STAbits.SPEN=1;
  1887  0A42  1795               	bsf	21,7	;volatile
  1888  0A43                     l3684:	
  1889                           
  1890                           ;master_eight.c: 406: }
  1891                           ;master_eight.c: 408: }
  1892                           ;master_eight.c: 410: int man = 1;
  1893  0A43  3001               	movlw	1
  1894  0A44  0021               	movlb	1	; select bank1
  1895  0A45  00EC               	movwf	main@man^(0+128)
  1896  0A46  3000               	movlw	0
  1897  0A47  00ED               	movwf	(main@man^(0+128)+1)
  1898                           
  1899                           ;master_eight.c: 411: PreventFlag_ManualTo_Panel=1;
  1900  0A48  3001               	movlw	1
  1901  0A49  00DA               	movwf	_PreventFlag_ManualTo_Panel^(0+128)
  1902  0A4A  3000               	movlw	0
  1903  0A4B  00DB               	movwf	(_PreventFlag_ManualTo_Panel^(0+128)+1)
  1904                           
  1905                           ;master_eight.c: 412: if(copy_parentalLockBuffer[1] == '0' && RF2 == 0 && R1 == 0)
  1906  0A4C  3030               	movlw	48
  1907  0A4D  0621               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1908  0A4E  1D03               	btfss	3,2
  1909  0A4F  2AAD               	goto	l3704
  1910  0A50  0025               	movlb	5	; select bank5
  1911  0A51  190C               	btfsc	12,2	;volatile
  1912  0A52  2AAD               	goto	l3704
  1913  0A53  0020               	movlb	0	; select bank0
  1914  0A54  085B               	movf	_R1,w
  1915  0A55  045C               	iorwf	_R1+1,w
  1916  0A56  1D03               	btfss	3,2
  1917  0A57  2AAD               	goto	l3704
  1918                           
  1919                           ;master_eight.c: 413: {
  1920                           ;master_eight.c: 414: if(man == 1)
  1921  0A58  0021               	movlb	1	; select bank1
  1922  0A59  036C               	decf	main@man^(0+128),w
  1923  0A5A  046D               	iorwf	(main@man+1)^(0+128),w
  1924  0A5B  1D03               	btfss	3,2
  1925  0A5C  2AA5               	goto	l3700
  1926                           
  1927                           ;master_eight.c: 415: {
  1928                           ;master_eight.c: 417: _delay((unsigned long)((5)*(16000000/4000.0)));
  1929  0A5D  301A               	movlw	26
  1930  0A5E  0020               	movlb	0	; select bank0
  1931  0A5F  00C5               	movwf	??_main
  1932  0A60  30F8               	movlw	248
  1933  0A61                     u5057:	
  1934  0A61  0B89               	decfsz	9,f
  1935  0A62  2A61               	goto	u5057
  1936  0A63  0BC5               	decfsz	??_main,f
  1937  0A64  2A61               	goto	u5057
  1938  0A65  0000               	nop
  1939                           
  1940                           ;master_eight.c: 418: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  1941  0A66  3052               	movlw	82
  1942  0A67  0023               	movlb	3	; select bank3
  1943  0A68  009A               	movwf	26	;volatile
  1944  0A69  3006               	movlw	6
  1945  0A6A  0020               	movlb	0	; select bank0
  1946  0A6B  00C5               	movwf	??_main
  1947  0A6C  3030               	movlw	48
  1948  0A6D                     u5067:	
  1949  0A6D  0B89               	decfsz	9,f
  1950  0A6E  2A6D               	goto	u5067
  1951  0A6F  0BC5               	decfsz	??_main,f
  1952  0A70  2A6D               	goto	u5067
  1953  0A71  0000               	nop
  1954                           
  1955                           ;master_eight.c: 419: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  1956  0A72  3030               	movlw	48
  1957  0A73  0023               	movlb	3	; select bank3
  1958  0A74  009A               	movwf	26	;volatile
  1959  0A75  3006               	movlw	6
  1960  0A76  0020               	movlb	0	; select bank0
  1961  0A77  00C5               	movwf	??_main
  1962  0A78  3030               	movlw	48
  1963  0A79                     u5077:	
  1964  0A79  0B89               	decfsz	9,f
  1965  0A7A  2A79               	goto	u5077
  1966  0A7B  0BC5               	decfsz	??_main,f
  1967  0A7C  2A79               	goto	u5077
  1968  0A7D  0000               	nop
  1969                           
  1970                           ;master_eight.c: 420: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  1971  0A7E  3030               	movlw	48
  1972  0A7F  0023               	movlb	3	; select bank3
  1973  0A80  009A               	movwf	26	;volatile
  1974  0A81  3006               	movlw	6
  1975  0A82  0020               	movlb	0	; select bank0
  1976  0A83  00C5               	movwf	??_main
  1977  0A84  3030               	movlw	48
  1978  0A85                     u5087:	
  1979  0A85  0B89               	decfsz	9,f
  1980  0A86  2A85               	goto	u5087
  1981  0A87  0BC5               	decfsz	??_main,f
  1982  0A88  2A85               	goto	u5087
  1983  0A89  0000               	nop
  1984                           
  1985                           ;master_eight.c: 421: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  1986  0A8A  3031               	movlw	49
  1987  0A8B  0023               	movlb	3	; select bank3
  1988  0A8C  009A               	movwf	26	;volatile
  1989  0A8D  3006               	movlw	6
  1990  0A8E  0020               	movlb	0	; select bank0
  1991  0A8F  00C5               	movwf	??_main
  1992  0A90  3030               	movlw	48
  1993  0A91                     u5097:	
  1994  0A91  0B89               	decfsz	9,f
  1995  0A92  2A91               	goto	u5097
  1996  0A93  0BC5               	decfsz	??_main,f
  1997  0A94  2A91               	goto	u5097
  1998  0A95  0000               	nop
  1999                           
  2000                           ;master_eight.c: 422: send_Response_To_Touch('A','0','0');
  2001  0A96  3030               	movlw	48
  2002  0A97  0020               	movlb	0	; select bank0
  2003  0A98  00C5               	movwf	??_main
  2004  0A99  0845               	movf	??_main,w
  2005  0A9A  00A0               	movwf	send_Response_To_Touch@switch_status
  2006  0A9B  3030               	movlw	48
  2007  0A9C  00C6               	movwf	??_main+1
  2008  0A9D  0846               	movf	??_main+1,w
  2009  0A9E  00A1               	movwf	send_Response_To_Touch@fan_speed
  2010  0A9F  3041               	movlw	65
  2011  0AA0  3197  279A  3188   	fcall	_send_Response_To_Touch
  2012                           
  2013                           ;master_eight.c: 423: RB1=0;
  2014  0AA3  0020               	movlb	0	; select bank0
  2015  0AA4  108D               	bcf	13,1	;volatile
  2016  0AA5                     l3700:	
  2017                           
  2018                           ;master_eight.c: 424: }
  2019                           ;master_eight.c: 425: man=0;
  2020  0AA5  0021               	movlb	1	; select bank1
  2021  0AA6  01EC               	clrf	main@man^(0+128)
  2022  0AA7  01ED               	clrf	(main@man+1)^(0+128)
  2023                           
  2024                           ;master_eight.c: 426: R1=1;
  2025  0AA8  3001               	movlw	1
  2026  0AA9  0020               	movlb	0	; select bank0
  2027  0AAA  00DB               	movwf	_R1
  2028  0AAB  3000               	movlw	0
  2029  0AAC  00DC               	movwf	_R1+1
  2030  0AAD                     l3704:	
  2031                           
  2032                           ;master_eight.c: 428: }
  2033                           ;master_eight.c: 430: if(copy_parentalLockBuffer[1] == '0' && RF2 == 1 && R1 == 1)
  2034  0AAD  3030               	movlw	48
  2035  0AAE  0021               	movlb	1	; select bank1
  2036  0AAF  0621               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  2037  0AB0  1D03               	btfss	3,2
  2038  0AB1  2B0D               	goto	l3722
  2039  0AB2  0025               	movlb	5	; select bank5
  2040  0AB3  1D0C               	btfss	12,2	;volatile
  2041  0AB4  2B0D               	goto	l3722
  2042  0AB5  0020               	movlb	0	; select bank0
  2043  0AB6  035B               	decf	_R1,w
  2044  0AB7  045C               	iorwf	_R1+1,w
  2045  0AB8  1D03               	btfss	3,2
  2046  0AB9  2B0D               	goto	l3722
  2047                           
  2048                           ;master_eight.c: 431: {
  2049                           ;master_eight.c: 432: if(man==1)
  2050  0ABA  0021               	movlb	1	; select bank1
  2051  0ABB  036C               	decf	main@man^(0+128),w
  2052  0ABC  046D               	iorwf	(main@man+1)^(0+128),w
  2053  0ABD  1D03               	btfss	3,2
  2054  0ABE  2B07               	goto	l3718
  2055                           
  2056                           ;master_eight.c: 433: {
  2057                           ;master_eight.c: 434: _delay((unsigned long)((5)*(16000000/4000.0)));
  2058  0ABF  301A               	movlw	26
  2059  0AC0  0020               	movlb	0	; select bank0
  2060  0AC1  00C5               	movwf	??_main
  2061  0AC2  30F8               	movlw	248
  2062  0AC3                     u5107:	
  2063  0AC3  0B89               	decfsz	9,f
  2064  0AC4  2AC3               	goto	u5107
  2065  0AC5  0BC5               	decfsz	??_main,f
  2066  0AC6  2AC3               	goto	u5107
  2067  0AC7  0000               	nop
  2068                           
  2069                           ;master_eight.c: 435: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2070  0AC8  3052               	movlw	82
  2071  0AC9  0023               	movlb	3	; select bank3
  2072  0ACA  009A               	movwf	26	;volatile
  2073  0ACB  3006               	movlw	6
  2074  0ACC  0020               	movlb	0	; select bank0
  2075  0ACD  00C5               	movwf	??_main
  2076  0ACE  3030               	movlw	48
  2077  0ACF                     u5117:	
  2078  0ACF  0B89               	decfsz	9,f
  2079  0AD0  2ACF               	goto	u5117
  2080  0AD1  0BC5               	decfsz	??_main,f
  2081  0AD2  2ACF               	goto	u5117
  2082  0AD3  0000               	nop
  2083                           
  2084                           ;master_eight.c: 436: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  2085  0AD4  3031               	movlw	49
  2086  0AD5  0023               	movlb	3	; select bank3
  2087  0AD6  009A               	movwf	26	;volatile
  2088  0AD7  3006               	movlw	6
  2089  0AD8  0020               	movlb	0	; select bank0
  2090  0AD9  00C5               	movwf	??_main
  2091  0ADA  3030               	movlw	48
  2092  0ADB                     u5127:	
  2093  0ADB  0B89               	decfsz	9,f
  2094  0ADC  2ADB               	goto	u5127
  2095  0ADD  0BC5               	decfsz	??_main,f
  2096  0ADE  2ADB               	goto	u5127
  2097  0ADF  0000               	nop
  2098                           
  2099                           ;master_eight.c: 437: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2100  0AE0  3030               	movlw	48
  2101  0AE1  0023               	movlb	3	; select bank3
  2102  0AE2  009A               	movwf	26	;volatile
  2103  0AE3  3006               	movlw	6
  2104  0AE4  0020               	movlb	0	; select bank0
  2105  0AE5  00C5               	movwf	??_main
  2106  0AE6  3030               	movlw	48
  2107  0AE7                     u5137:	
  2108  0AE7  0B89               	decfsz	9,f
  2109  0AE8  2AE7               	goto	u5137
  2110  0AE9  0BC5               	decfsz	??_main,f
  2111  0AEA  2AE7               	goto	u5137
  2112  0AEB  0000               	nop
  2113                           
  2114                           ;master_eight.c: 438: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  2115  0AEC  3031               	movlw	49
  2116  0AED  0023               	movlb	3	; select bank3
  2117  0AEE  009A               	movwf	26	;volatile
  2118  0AEF  3006               	movlw	6
  2119  0AF0  0020               	movlb	0	; select bank0
  2120  0AF1  00C5               	movwf	??_main
  2121  0AF2  3030               	movlw	48
  2122  0AF3                     u5147:	
  2123  0AF3  0B89               	decfsz	9,f
  2124  0AF4  2AF3               	goto	u5147
  2125  0AF5  0BC5               	decfsz	??_main,f
  2126  0AF6  2AF3               	goto	u5147
  2127  0AF7  0000               	nop
  2128                           
  2129                           ;master_eight.c: 439: send_Response_To_Touch('A','1','0');
  2130  0AF8  3031               	movlw	49
  2131  0AF9  0020               	movlb	0	; select bank0
  2132  0AFA  00C5               	movwf	??_main
  2133  0AFB  0845               	movf	??_main,w
  2134  0AFC  00A0               	movwf	send_Response_To_Touch@switch_status
  2135  0AFD  3030               	movlw	48
  2136  0AFE  00C6               	movwf	??_main+1
  2137  0AFF  0846               	movf	??_main+1,w
  2138  0B00  00A1               	movwf	send_Response_To_Touch@fan_speed
  2139  0B01  3041               	movlw	65
  2140  0B02  3197  279A  3188   	fcall	_send_Response_To_Touch
  2141                           
  2142                           ;master_eight.c: 440: RB1=1;
  2143  0B05  0020               	movlb	0	; select bank0
  2144  0B06  148D               	bsf	13,1	;volatile
  2145  0B07                     l3718:	
  2146                           
  2147                           ;master_eight.c: 441: }
  2148                           ;master_eight.c: 442: man=0;
  2149  0B07  0021               	movlb	1	; select bank1
  2150  0B08  01EC               	clrf	main@man^(0+128)
  2151  0B09  01ED               	clrf	(main@man+1)^(0+128)
  2152                           
  2153                           ;master_eight.c: 443: R1=0;
  2154  0B0A  0020               	movlb	0	; select bank0
  2155  0B0B  01DB               	clrf	_R1
  2156  0B0C  01DC               	clrf	_R1+1
  2157  0B0D                     l3722:	
  2158                           
  2159                           ;master_eight.c: 444: }
  2160                           ;master_eight.c: 448: if(copy_parentalLockBuffer[2] == '0' && RF3 == 0 && R2 == 0)
  2161  0B0D  3030               	movlw	48
  2162  0B0E  0021               	movlb	1	; select bank1
  2163  0B0F  0622               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  2164  0B10  1D03               	btfss	3,2
  2165  0B11  2B6F               	goto	l3740
  2166  0B12  0025               	movlb	5	; select bank5
  2167  0B13  198C               	btfsc	12,3	;volatile
  2168  0B14  2B6F               	goto	l3740
  2169  0B15  0020               	movlb	0	; select bank0
  2170  0B16  0859               	movf	_R2,w
  2171  0B17  045A               	iorwf	_R2+1,w
  2172  0B18  1D03               	btfss	3,2
  2173  0B19  2B6F               	goto	l3740
  2174                           
  2175                           ;master_eight.c: 449: {
  2176                           ;master_eight.c: 450: if(man==1)
  2177  0B1A  0021               	movlb	1	; select bank1
  2178  0B1B  036C               	decf	main@man^(0+128),w
  2179  0B1C  046D               	iorwf	(main@man+1)^(0+128),w
  2180  0B1D  1D03               	btfss	3,2
  2181  0B1E  2B67               	goto	l3736
  2182                           
  2183                           ;master_eight.c: 451: {
  2184                           ;master_eight.c: 452: _delay((unsigned long)((5)*(16000000/4000.0)));
  2185  0B1F  301A               	movlw	26
  2186  0B20  0020               	movlb	0	; select bank0
  2187  0B21  00C5               	movwf	??_main
  2188  0B22  30F8               	movlw	248
  2189  0B23                     u5157:	
  2190  0B23  0B89               	decfsz	9,f
  2191  0B24  2B23               	goto	u5157
  2192  0B25  0BC5               	decfsz	??_main,f
  2193  0B26  2B23               	goto	u5157
  2194  0B27  0000               	nop
  2195                           
  2196                           ;master_eight.c: 453: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2197  0B28  3052               	movlw	82
  2198  0B29  0023               	movlb	3	; select bank3
  2199  0B2A  009A               	movwf	26	;volatile
  2200  0B2B  3006               	movlw	6
  2201  0B2C  0020               	movlb	0	; select bank0
  2202  0B2D  00C5               	movwf	??_main
  2203  0B2E  3030               	movlw	48
  2204  0B2F                     u5167:	
  2205  0B2F  0B89               	decfsz	9,f
  2206  0B30  2B2F               	goto	u5167
  2207  0B31  0BC5               	decfsz	??_main,f
  2208  0B32  2B2F               	goto	u5167
  2209  0B33  0000               	nop
  2210                           
  2211                           ;master_eight.c: 454: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2212  0B34  3030               	movlw	48
  2213  0B35  0023               	movlb	3	; select bank3
  2214  0B36  009A               	movwf	26	;volatile
  2215  0B37  3006               	movlw	6
  2216  0B38  0020               	movlb	0	; select bank0
  2217  0B39  00C5               	movwf	??_main
  2218  0B3A  3030               	movlw	48
  2219  0B3B                     u5177:	
  2220  0B3B  0B89               	decfsz	9,f
  2221  0B3C  2B3B               	goto	u5177
  2222  0B3D  0BC5               	decfsz	??_main,f
  2223  0B3E  2B3B               	goto	u5177
  2224  0B3F  0000               	nop
  2225                           
  2226                           ;master_eight.c: 455: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2227  0B40  3030               	movlw	48
  2228  0B41  0023               	movlb	3	; select bank3
  2229  0B42  009A               	movwf	26	;volatile
  2230  0B43  3006               	movlw	6
  2231  0B44  0020               	movlb	0	; select bank0
  2232  0B45  00C5               	movwf	??_main
  2233  0B46  3030               	movlw	48
  2234  0B47                     u5187:	
  2235  0B47  0B89               	decfsz	9,f
  2236  0B48  2B47               	goto	u5187
  2237  0B49  0BC5               	decfsz	??_main,f
  2238  0B4A  2B47               	goto	u5187
  2239  0B4B  0000               	nop
  2240                           
  2241                           ;master_eight.c: 456: TX1REG = '2';_delay((unsigned long)((1)*(16000000/4000.0)));
  2242  0B4C  3032               	movlw	50
  2243  0B4D  0023               	movlb	3	; select bank3
  2244  0B4E  009A               	movwf	26	;volatile
  2245  0B4F  3006               	movlw	6
  2246  0B50  0020               	movlb	0	; select bank0
  2247  0B51  00C5               	movwf	??_main
  2248  0B52  3030               	movlw	48
  2249  0B53                     u5197:	
  2250  0B53  0B89               	decfsz	9,f
  2251  0B54  2B53               	goto	u5197
  2252  0B55  0BC5               	decfsz	??_main,f
  2253  0B56  2B53               	goto	u5197
  2254  0B57  0000               	nop
  2255                           
  2256                           ;master_eight.c: 457: send_Response_To_Touch('B','0','0');
  2257  0B58  3030               	movlw	48
  2258  0B59  0020               	movlb	0	; select bank0
  2259  0B5A  00C5               	movwf	??_main
  2260  0B5B  0845               	movf	??_main,w
  2261  0B5C  00A0               	movwf	send_Response_To_Touch@switch_status
  2262  0B5D  3030               	movlw	48
  2263  0B5E  00C6               	movwf	??_main+1
  2264  0B5F  0846               	movf	??_main+1,w
  2265  0B60  00A1               	movwf	send_Response_To_Touch@fan_speed
  2266  0B61  3042               	movlw	66
  2267  0B62  3197  279A  3188   	fcall	_send_Response_To_Touch
  2268                           
  2269                           ;master_eight.c: 458: RC1=0;
  2270  0B65  0020               	movlb	0	; select bank0
  2271  0B66  108E               	bcf	14,1	;volatile
  2272  0B67                     l3736:	
  2273                           
  2274                           ;master_eight.c: 459: }
  2275                           ;master_eight.c: 460: man=0;
  2276  0B67  0021               	movlb	1	; select bank1
  2277  0B68  01EC               	clrf	main@man^(0+128)
  2278  0B69  01ED               	clrf	(main@man+1)^(0+128)
  2279                           
  2280                           ;master_eight.c: 461: R2=1;
  2281  0B6A  3001               	movlw	1
  2282  0B6B  0020               	movlb	0	; select bank0
  2283  0B6C  00D9               	movwf	_R2
  2284  0B6D  3000               	movlw	0
  2285  0B6E  00DA               	movwf	_R2+1
  2286  0B6F                     l3740:	
  2287                           
  2288                           ;master_eight.c: 462: }
  2289                           ;master_eight.c: 464: if(copy_parentalLockBuffer[2] == '0' && RF3 == 1 && R2 == 1)
  2290  0B6F  3030               	movlw	48
  2291  0B70  0021               	movlb	1	; select bank1
  2292  0B71  0622               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  2293  0B72  1D03               	btfss	3,2
  2294  0B73  2BCF               	goto	l3758
  2295  0B74  0025               	movlb	5	; select bank5
  2296  0B75  1D8C               	btfss	12,3	;volatile
  2297  0B76  2BCF               	goto	l3758
  2298  0B77  0020               	movlb	0	; select bank0
  2299  0B78  0359               	decf	_R2,w
  2300  0B79  045A               	iorwf	_R2+1,w
  2301  0B7A  1D03               	btfss	3,2
  2302  0B7B  2BCF               	goto	l3758
  2303                           
  2304                           ;master_eight.c: 465: {
  2305                           ;master_eight.c: 466: if(man==1)
  2306  0B7C  0021               	movlb	1	; select bank1
  2307  0B7D  036C               	decf	main@man^(0+128),w
  2308  0B7E  046D               	iorwf	(main@man+1)^(0+128),w
  2309  0B7F  1D03               	btfss	3,2
  2310  0B80  2BC9               	goto	l3754
  2311                           
  2312                           ;master_eight.c: 467: {
  2313                           ;master_eight.c: 468: _delay((unsigned long)((5)*(16000000/4000.0)));
  2314  0B81  301A               	movlw	26
  2315  0B82  0020               	movlb	0	; select bank0
  2316  0B83  00C5               	movwf	??_main
  2317  0B84  30F8               	movlw	248
  2318  0B85                     u5207:	
  2319  0B85  0B89               	decfsz	9,f
  2320  0B86  2B85               	goto	u5207
  2321  0B87  0BC5               	decfsz	??_main,f
  2322  0B88  2B85               	goto	u5207
  2323  0B89  0000               	nop
  2324                           
  2325                           ;master_eight.c: 469: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2326  0B8A  3052               	movlw	82
  2327  0B8B  0023               	movlb	3	; select bank3
  2328  0B8C  009A               	movwf	26	;volatile
  2329  0B8D  3006               	movlw	6
  2330  0B8E  0020               	movlb	0	; select bank0
  2331  0B8F  00C5               	movwf	??_main
  2332  0B90  3030               	movlw	48
  2333  0B91                     u5217:	
  2334  0B91  0B89               	decfsz	9,f
  2335  0B92  2B91               	goto	u5217
  2336  0B93  0BC5               	decfsz	??_main,f
  2337  0B94  2B91               	goto	u5217
  2338  0B95  0000               	nop
  2339                           
  2340                           ;master_eight.c: 470: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  2341  0B96  3031               	movlw	49
  2342  0B97  0023               	movlb	3	; select bank3
  2343  0B98  009A               	movwf	26	;volatile
  2344  0B99  3006               	movlw	6
  2345  0B9A  0020               	movlb	0	; select bank0
  2346  0B9B  00C5               	movwf	??_main
  2347  0B9C  3030               	movlw	48
  2348  0B9D                     u5227:	
  2349  0B9D  0B89               	decfsz	9,f
  2350  0B9E  2B9D               	goto	u5227
  2351  0B9F  0BC5               	decfsz	??_main,f
  2352  0BA0  2B9D               	goto	u5227
  2353  0BA1  0000               	nop
  2354                           
  2355                           ;master_eight.c: 471: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2356  0BA2  3030               	movlw	48
  2357  0BA3  0023               	movlb	3	; select bank3
  2358  0BA4  009A               	movwf	26	;volatile
  2359  0BA5  3006               	movlw	6
  2360  0BA6  0020               	movlb	0	; select bank0
  2361  0BA7  00C5               	movwf	??_main
  2362  0BA8  3030               	movlw	48
  2363  0BA9                     u5237:	
  2364  0BA9  0B89               	decfsz	9,f
  2365  0BAA  2BA9               	goto	u5237
  2366  0BAB  0BC5               	decfsz	??_main,f
  2367  0BAC  2BA9               	goto	u5237
  2368  0BAD  0000               	nop
  2369                           
  2370                           ;master_eight.c: 472: TX1REG = '2';_delay((unsigned long)((1)*(16000000/4000.0)));
  2371  0BAE  3032               	movlw	50
  2372  0BAF  0023               	movlb	3	; select bank3
  2373  0BB0  009A               	movwf	26	;volatile
  2374  0BB1  3006               	movlw	6
  2375  0BB2  0020               	movlb	0	; select bank0
  2376  0BB3  00C5               	movwf	??_main
  2377  0BB4  3030               	movlw	48
  2378  0BB5                     u5247:	
  2379  0BB5  0B89               	decfsz	9,f
  2380  0BB6  2BB5               	goto	u5247
  2381  0BB7  0BC5               	decfsz	??_main,f
  2382  0BB8  2BB5               	goto	u5247
  2383  0BB9  0000               	nop
  2384                           
  2385                           ;master_eight.c: 473: send_Response_To_Touch('B','1','0');
  2386  0BBA  3031               	movlw	49
  2387  0BBB  0020               	movlb	0	; select bank0
  2388  0BBC  00C5               	movwf	??_main
  2389  0BBD  0845               	movf	??_main,w
  2390  0BBE  00A0               	movwf	send_Response_To_Touch@switch_status
  2391  0BBF  3030               	movlw	48
  2392  0BC0  00C6               	movwf	??_main+1
  2393  0BC1  0846               	movf	??_main+1,w
  2394  0BC2  00A1               	movwf	send_Response_To_Touch@fan_speed
  2395  0BC3  3042               	movlw	66
  2396  0BC4  3197  279A  3188   	fcall	_send_Response_To_Touch
  2397                           
  2398                           ;master_eight.c: 474: RC1=1;
  2399  0BC7  0020               	movlb	0	; select bank0
  2400  0BC8  148E               	bsf	14,1	;volatile
  2401  0BC9                     l3754:	
  2402                           
  2403                           ;master_eight.c: 475: }
  2404                           ;master_eight.c: 476: man=0;
  2405  0BC9  0021               	movlb	1	; select bank1
  2406  0BCA  01EC               	clrf	main@man^(0+128)
  2407  0BCB  01ED               	clrf	(main@man+1)^(0+128)
  2408                           
  2409                           ;master_eight.c: 477: R2=0;
  2410  0BCC  0020               	movlb	0	; select bank0
  2411  0BCD  01D9               	clrf	_R2
  2412  0BCE  01DA               	clrf	_R2+1
  2413  0BCF                     l3758:	
  2414                           
  2415                           ;master_eight.c: 478: }
  2416                           ;master_eight.c: 483: if(copy_parentalLockBuffer[3] == '0' && RF4 == 0 && R3 == 0)
  2417  0BCF  3030               	movlw	48
  2418  0BD0  0021               	movlb	1	; select bank1
  2419  0BD1  0623               	xorwf	(_copy_parentalLockBuffer^(0+128)+3),w
  2420  0BD2  1D03               	btfss	3,2
  2421  0BD3  2C31               	goto	l3776
  2422  0BD4  0025               	movlb	5	; select bank5
  2423  0BD5  1A0C               	btfsc	12,4	;volatile
  2424  0BD6  2C31               	goto	l3776
  2425  0BD7  0020               	movlb	0	; select bank0
  2426  0BD8  0857               	movf	_R3,w
  2427  0BD9  0458               	iorwf	_R3+1,w
  2428  0BDA  1D03               	btfss	3,2
  2429  0BDB  2C31               	goto	l3776
  2430                           
  2431                           ;master_eight.c: 484: {
  2432                           ;master_eight.c: 485: if(man == 1)
  2433  0BDC  0021               	movlb	1	; select bank1
  2434  0BDD  036C               	decf	main@man^(0+128),w
  2435  0BDE  046D               	iorwf	(main@man+1)^(0+128),w
  2436  0BDF  1D03               	btfss	3,2
  2437  0BE0  2C29               	goto	l3772
  2438                           
  2439                           ;master_eight.c: 486: {
  2440                           ;master_eight.c: 487: _delay((unsigned long)((5)*(16000000/4000.0)));
  2441  0BE1  301A               	movlw	26
  2442  0BE2  0020               	movlb	0	; select bank0
  2443  0BE3  00C5               	movwf	??_main
  2444  0BE4  30F8               	movlw	248
  2445  0BE5                     u5257:	
  2446  0BE5  0B89               	decfsz	9,f
  2447  0BE6  2BE5               	goto	u5257
  2448  0BE7  0BC5               	decfsz	??_main,f
  2449  0BE8  2BE5               	goto	u5257
  2450  0BE9  0000               	nop
  2451                           
  2452                           ;master_eight.c: 488: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2453  0BEA  3052               	movlw	82
  2454  0BEB  0023               	movlb	3	; select bank3
  2455  0BEC  009A               	movwf	26	;volatile
  2456  0BED  3006               	movlw	6
  2457  0BEE  0020               	movlb	0	; select bank0
  2458  0BEF  00C5               	movwf	??_main
  2459  0BF0  3030               	movlw	48
  2460  0BF1                     u5267:	
  2461  0BF1  0B89               	decfsz	9,f
  2462  0BF2  2BF1               	goto	u5267
  2463  0BF3  0BC5               	decfsz	??_main,f
  2464  0BF4  2BF1               	goto	u5267
  2465  0BF5  0000               	nop
  2466                           
  2467                           ;master_eight.c: 489: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2468  0BF6  3030               	movlw	48
  2469  0BF7  0023               	movlb	3	; select bank3
  2470  0BF8  009A               	movwf	26	;volatile
  2471  0BF9  3006               	movlw	6
  2472  0BFA  0020               	movlb	0	; select bank0
  2473  0BFB  00C5               	movwf	??_main
  2474  0BFC  3030               	movlw	48
  2475  0BFD                     u5277:	
  2476  0BFD  0B89               	decfsz	9,f
  2477  0BFE  2BFD               	goto	u5277
  2478  0BFF  0BC5               	decfsz	??_main,f
  2479  0C00  2BFD               	goto	u5277
  2480  0C01  0000               	nop
  2481                           
  2482                           ;master_eight.c: 490: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2483  0C02  3030               	movlw	48
  2484  0C03  0023               	movlb	3	; select bank3
  2485  0C04  009A               	movwf	26	;volatile
  2486  0C05  3006               	movlw	6
  2487  0C06  0020               	movlb	0	; select bank0
  2488  0C07  00C5               	movwf	??_main
  2489  0C08  3030               	movlw	48
  2490  0C09                     u5287:	
  2491  0C09  0B89               	decfsz	9,f
  2492  0C0A  2C09               	goto	u5287
  2493  0C0B  0BC5               	decfsz	??_main,f
  2494  0C0C  2C09               	goto	u5287
  2495  0C0D  0000               	nop
  2496                           
  2497                           ;master_eight.c: 491: TX1REG = '3';_delay((unsigned long)((1)*(16000000/4000.0)));
  2498  0C0E  3033               	movlw	51
  2499  0C0F  0023               	movlb	3	; select bank3
  2500  0C10  009A               	movwf	26	;volatile
  2501  0C11  3006               	movlw	6
  2502  0C12  0020               	movlb	0	; select bank0
  2503  0C13  00C5               	movwf	??_main
  2504  0C14  3030               	movlw	48
  2505  0C15                     u5297:	
  2506  0C15  0B89               	decfsz	9,f
  2507  0C16  2C15               	goto	u5297
  2508  0C17  0BC5               	decfsz	??_main,f
  2509  0C18  2C15               	goto	u5297
  2510  0C19  0000               	nop
  2511                           
  2512                           ;master_eight.c: 492: send_Response_To_Touch('C','0','0');
  2513  0C1A  3030               	movlw	48
  2514  0C1B  0020               	movlb	0	; select bank0
  2515  0C1C  00C5               	movwf	??_main
  2516  0C1D  0845               	movf	??_main,w
  2517  0C1E  00A0               	movwf	send_Response_To_Touch@switch_status
  2518  0C1F  3030               	movlw	48
  2519  0C20  00C6               	movwf	??_main+1
  2520  0C21  0846               	movf	??_main+1,w
  2521  0C22  00A1               	movwf	send_Response_To_Touch@fan_speed
  2522  0C23  3043               	movlw	67
  2523  0C24  3197  279A  3188   	fcall	_send_Response_To_Touch
  2524                           
  2525                           ;master_eight.c: 493: RA0=0;
  2526  0C27  0020               	movlb	0	; select bank0
  2527  0C28  100C               	bcf	12,0	;volatile
  2528  0C29                     l3772:	
  2529                           
  2530                           ;master_eight.c: 494: }
  2531                           ;master_eight.c: 495: man=0;
  2532  0C29  0021               	movlb	1	; select bank1
  2533  0C2A  01EC               	clrf	main@man^(0+128)
  2534  0C2B  01ED               	clrf	(main@man+1)^(0+128)
  2535                           
  2536                           ;master_eight.c: 496: R3=1;
  2537  0C2C  3001               	movlw	1
  2538  0C2D  0020               	movlb	0	; select bank0
  2539  0C2E  00D7               	movwf	_R3
  2540  0C2F  3000               	movlw	0
  2541  0C30  00D8               	movwf	_R3+1
  2542  0C31                     l3776:	
  2543                           
  2544                           ;master_eight.c: 498: }
  2545                           ;master_eight.c: 500: if(copy_parentalLockBuffer[3] == '0' && RF4 == 1 && R3 == 1)
  2546  0C31  3030               	movlw	48
  2547  0C32  0021               	movlb	1	; select bank1
  2548  0C33  0623               	xorwf	(_copy_parentalLockBuffer^(0+128)+3),w
  2549  0C34  1D03               	btfss	3,2
  2550  0C35  2C91               	goto	l3794
  2551  0C36  0025               	movlb	5	; select bank5
  2552  0C37  1E0C               	btfss	12,4	;volatile
  2553  0C38  2C91               	goto	l3794
  2554  0C39  0020               	movlb	0	; select bank0
  2555  0C3A  0357               	decf	_R3,w
  2556  0C3B  0458               	iorwf	_R3+1,w
  2557  0C3C  1D03               	btfss	3,2
  2558  0C3D  2C91               	goto	l3794
  2559                           
  2560                           ;master_eight.c: 501: {
  2561                           ;master_eight.c: 502: if(man==1)
  2562  0C3E  0021               	movlb	1	; select bank1
  2563  0C3F  036C               	decf	main@man^(0+128),w
  2564  0C40  046D               	iorwf	(main@man+1)^(0+128),w
  2565  0C41  1D03               	btfss	3,2
  2566  0C42  2C8B               	goto	l3790
  2567                           
  2568                           ;master_eight.c: 503: {
  2569                           ;master_eight.c: 504: _delay((unsigned long)((5)*(16000000/4000.0)));
  2570  0C43  301A               	movlw	26
  2571  0C44  0020               	movlb	0	; select bank0
  2572  0C45  00C5               	movwf	??_main
  2573  0C46  30F8               	movlw	248
  2574  0C47                     u5307:	
  2575  0C47  0B89               	decfsz	9,f
  2576  0C48  2C47               	goto	u5307
  2577  0C49  0BC5               	decfsz	??_main,f
  2578  0C4A  2C47               	goto	u5307
  2579  0C4B  0000               	nop
  2580                           
  2581                           ;master_eight.c: 505: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2582  0C4C  3052               	movlw	82
  2583  0C4D  0023               	movlb	3	; select bank3
  2584  0C4E  009A               	movwf	26	;volatile
  2585  0C4F  3006               	movlw	6
  2586  0C50  0020               	movlb	0	; select bank0
  2587  0C51  00C5               	movwf	??_main
  2588  0C52  3030               	movlw	48
  2589  0C53                     u5317:	
  2590  0C53  0B89               	decfsz	9,f
  2591  0C54  2C53               	goto	u5317
  2592  0C55  0BC5               	decfsz	??_main,f
  2593  0C56  2C53               	goto	u5317
  2594  0C57  0000               	nop
  2595                           
  2596                           ;master_eight.c: 506: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  2597  0C58  3031               	movlw	49
  2598  0C59  0023               	movlb	3	; select bank3
  2599  0C5A  009A               	movwf	26	;volatile
  2600  0C5B  3006               	movlw	6
  2601  0C5C  0020               	movlb	0	; select bank0
  2602  0C5D  00C5               	movwf	??_main
  2603  0C5E  3030               	movlw	48
  2604  0C5F                     u5327:	
  2605  0C5F  0B89               	decfsz	9,f
  2606  0C60  2C5F               	goto	u5327
  2607  0C61  0BC5               	decfsz	??_main,f
  2608  0C62  2C5F               	goto	u5327
  2609  0C63  0000               	nop
  2610                           
  2611                           ;master_eight.c: 507: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2612  0C64  3030               	movlw	48
  2613  0C65  0023               	movlb	3	; select bank3
  2614  0C66  009A               	movwf	26	;volatile
  2615  0C67  3006               	movlw	6
  2616  0C68  0020               	movlb	0	; select bank0
  2617  0C69  00C5               	movwf	??_main
  2618  0C6A  3030               	movlw	48
  2619  0C6B                     u5337:	
  2620  0C6B  0B89               	decfsz	9,f
  2621  0C6C  2C6B               	goto	u5337
  2622  0C6D  0BC5               	decfsz	??_main,f
  2623  0C6E  2C6B               	goto	u5337
  2624  0C6F  0000               	nop
  2625                           
  2626                           ;master_eight.c: 508: TX1REG = '3';_delay((unsigned long)((1)*(16000000/4000.0)));
  2627  0C70  3033               	movlw	51
  2628  0C71  0023               	movlb	3	; select bank3
  2629  0C72  009A               	movwf	26	;volatile
  2630  0C73  3006               	movlw	6
  2631  0C74  0020               	movlb	0	; select bank0
  2632  0C75  00C5               	movwf	??_main
  2633  0C76  3030               	movlw	48
  2634  0C77                     u5347:	
  2635  0C77  0B89               	decfsz	9,f
  2636  0C78  2C77               	goto	u5347
  2637  0C79  0BC5               	decfsz	??_main,f
  2638  0C7A  2C77               	goto	u5347
  2639  0C7B  0000               	nop
  2640                           
  2641                           ;master_eight.c: 509: send_Response_To_Touch('C','1','0');
  2642  0C7C  3031               	movlw	49
  2643  0C7D  0020               	movlb	0	; select bank0
  2644  0C7E  00C5               	movwf	??_main
  2645  0C7F  0845               	movf	??_main,w
  2646  0C80  00A0               	movwf	send_Response_To_Touch@switch_status
  2647  0C81  3030               	movlw	48
  2648  0C82  00C6               	movwf	??_main+1
  2649  0C83  0846               	movf	??_main+1,w
  2650  0C84  00A1               	movwf	send_Response_To_Touch@fan_speed
  2651  0C85  3043               	movlw	67
  2652  0C86  3197  279A  3188   	fcall	_send_Response_To_Touch
  2653                           
  2654                           ;master_eight.c: 510: RA0=1;
  2655  0C89  0020               	movlb	0	; select bank0
  2656  0C8A  140C               	bsf	12,0	;volatile
  2657  0C8B                     l3790:	
  2658                           
  2659                           ;master_eight.c: 511: }
  2660                           ;master_eight.c: 512: man=0;
  2661  0C8B  0021               	movlb	1	; select bank1
  2662  0C8C  01EC               	clrf	main@man^(0+128)
  2663  0C8D  01ED               	clrf	(main@man+1)^(0+128)
  2664                           
  2665                           ;master_eight.c: 513: R3=0;
  2666  0C8E  0020               	movlb	0	; select bank0
  2667  0C8F  01D7               	clrf	_R3
  2668  0C90  01D8               	clrf	_R3+1
  2669  0C91                     l3794:	
  2670                           
  2671                           ;master_eight.c: 515: }
  2672                           ;master_eight.c: 520: if(copy_parentalLockBuffer[4] == '0' && RF5 == 0 && R4 == 0)
  2673  0C91  3030               	movlw	48
  2674  0C92  0021               	movlb	1	; select bank1
  2675  0C93  0624               	xorwf	(_copy_parentalLockBuffer^(0+128)+4),w
  2676  0C94  1D03               	btfss	3,2
  2677  0C95  2CF3               	goto	l3812
  2678  0C96  0025               	movlb	5	; select bank5
  2679  0C97  1A8C               	btfsc	12,5	;volatile
  2680  0C98  2CF3               	goto	l3812
  2681  0C99  0020               	movlb	0	; select bank0
  2682  0C9A  0855               	movf	_R4,w
  2683  0C9B  0456               	iorwf	_R4+1,w
  2684  0C9C  1D03               	btfss	3,2
  2685  0C9D  2CF3               	goto	l3812
  2686                           
  2687                           ;master_eight.c: 521: {
  2688                           ;master_eight.c: 522: if(man==1)
  2689  0C9E  0021               	movlb	1	; select bank1
  2690  0C9F  036C               	decf	main@man^(0+128),w
  2691  0CA0  046D               	iorwf	(main@man+1)^(0+128),w
  2692  0CA1  1D03               	btfss	3,2
  2693  0CA2  2CEB               	goto	l3808
  2694                           
  2695                           ;master_eight.c: 523: {
  2696                           ;master_eight.c: 524: _delay((unsigned long)((5)*(16000000/4000.0)));
  2697  0CA3  301A               	movlw	26
  2698  0CA4  0020               	movlb	0	; select bank0
  2699  0CA5  00C5               	movwf	??_main
  2700  0CA6  30F8               	movlw	248
  2701  0CA7                     u5357:	
  2702  0CA7  0B89               	decfsz	9,f
  2703  0CA8  2CA7               	goto	u5357
  2704  0CA9  0BC5               	decfsz	??_main,f
  2705  0CAA  2CA7               	goto	u5357
  2706  0CAB  0000               	nop
  2707                           
  2708                           ;master_eight.c: 525: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2709  0CAC  3052               	movlw	82
  2710  0CAD  0023               	movlb	3	; select bank3
  2711  0CAE  009A               	movwf	26	;volatile
  2712  0CAF  3006               	movlw	6
  2713  0CB0  0020               	movlb	0	; select bank0
  2714  0CB1  00C5               	movwf	??_main
  2715  0CB2  3030               	movlw	48
  2716  0CB3                     u5367:	
  2717  0CB3  0B89               	decfsz	9,f
  2718  0CB4  2CB3               	goto	u5367
  2719  0CB5  0BC5               	decfsz	??_main,f
  2720  0CB6  2CB3               	goto	u5367
  2721  0CB7  0000               	nop
  2722                           
  2723                           ;master_eight.c: 526: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2724  0CB8  3030               	movlw	48
  2725  0CB9  0023               	movlb	3	; select bank3
  2726  0CBA  009A               	movwf	26	;volatile
  2727  0CBB  3006               	movlw	6
  2728  0CBC  0020               	movlb	0	; select bank0
  2729  0CBD  00C5               	movwf	??_main
  2730  0CBE  3030               	movlw	48
  2731  0CBF                     u5377:	
  2732  0CBF  0B89               	decfsz	9,f
  2733  0CC0  2CBF               	goto	u5377
  2734  0CC1  0BC5               	decfsz	??_main,f
  2735  0CC2  2CBF               	goto	u5377
  2736  0CC3  0000               	nop
  2737                           
  2738                           ;master_eight.c: 527: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2739  0CC4  3030               	movlw	48
  2740  0CC5  0023               	movlb	3	; select bank3
  2741  0CC6  009A               	movwf	26	;volatile
  2742  0CC7  3006               	movlw	6
  2743  0CC8  0020               	movlb	0	; select bank0
  2744  0CC9  00C5               	movwf	??_main
  2745  0CCA  3030               	movlw	48
  2746  0CCB                     u5387:	
  2747  0CCB  0B89               	decfsz	9,f
  2748  0CCC  2CCB               	goto	u5387
  2749  0CCD  0BC5               	decfsz	??_main,f
  2750  0CCE  2CCB               	goto	u5387
  2751  0CCF  0000               	nop
  2752                           
  2753                           ;master_eight.c: 528: TX1REG = '4';_delay((unsigned long)((1)*(16000000/4000.0)));
  2754  0CD0  3034               	movlw	52
  2755  0CD1  0023               	movlb	3	; select bank3
  2756  0CD2  009A               	movwf	26	;volatile
  2757  0CD3  3006               	movlw	6
  2758  0CD4  0020               	movlb	0	; select bank0
  2759  0CD5  00C5               	movwf	??_main
  2760  0CD6  3030               	movlw	48
  2761  0CD7                     u5397:	
  2762  0CD7  0B89               	decfsz	9,f
  2763  0CD8  2CD7               	goto	u5397
  2764  0CD9  0BC5               	decfsz	??_main,f
  2765  0CDA  2CD7               	goto	u5397
  2766  0CDB  0000               	nop
  2767                           
  2768                           ;master_eight.c: 529: send_Response_To_Touch('D','0','0');
  2769  0CDC  3030               	movlw	48
  2770  0CDD  0020               	movlb	0	; select bank0
  2771  0CDE  00C5               	movwf	??_main
  2772  0CDF  0845               	movf	??_main,w
  2773  0CE0  00A0               	movwf	send_Response_To_Touch@switch_status
  2774  0CE1  3030               	movlw	48
  2775  0CE2  00C6               	movwf	??_main+1
  2776  0CE3  0846               	movf	??_main+1,w
  2777  0CE4  00A1               	movwf	send_Response_To_Touch@fan_speed
  2778  0CE5  3044               	movlw	68
  2779  0CE6  3197  279A  3188   	fcall	_send_Response_To_Touch
  2780                           
  2781                           ;master_eight.c: 530: RF1=0;
  2782  0CE9  0025               	movlb	5	; select bank5
  2783  0CEA  108C               	bcf	12,1	;volatile
  2784  0CEB                     l3808:	
  2785                           
  2786                           ;master_eight.c: 531: }
  2787                           ;master_eight.c: 532: man=0;
  2788  0CEB  0021               	movlb	1	; select bank1
  2789  0CEC  01EC               	clrf	main@man^(0+128)
  2790  0CED  01ED               	clrf	(main@man+1)^(0+128)
  2791                           
  2792                           ;master_eight.c: 533: R4=1;
  2793  0CEE  3001               	movlw	1
  2794  0CEF  0020               	movlb	0	; select bank0
  2795  0CF0  00D5               	movwf	_R4
  2796  0CF1  3000               	movlw	0
  2797  0CF2  00D6               	movwf	_R4+1
  2798  0CF3                     l3812:	
  2799                           
  2800                           ;master_eight.c: 535: }
  2801                           ;master_eight.c: 537: if(copy_parentalLockBuffer[4] == '0' && RF5 == 1 && R4 == 1)
  2802  0CF3  3030               	movlw	48
  2803  0CF4  0021               	movlb	1	; select bank1
  2804  0CF5  0624               	xorwf	(_copy_parentalLockBuffer^(0+128)+4),w
  2805  0CF6  1D03               	btfss	3,2
  2806  0CF7  2D53               	goto	l3830
  2807  0CF8  0025               	movlb	5	; select bank5
  2808  0CF9  1E8C               	btfss	12,5	;volatile
  2809  0CFA  2D53               	goto	l3830
  2810  0CFB  0020               	movlb	0	; select bank0
  2811  0CFC  0355               	decf	_R4,w
  2812  0CFD  0456               	iorwf	_R4+1,w
  2813  0CFE  1D03               	btfss	3,2
  2814  0CFF  2D53               	goto	l3830
  2815                           
  2816                           ;master_eight.c: 538: {
  2817                           ;master_eight.c: 539: if(man==1)
  2818  0D00  0021               	movlb	1	; select bank1
  2819  0D01  036C               	decf	main@man^(0+128),w
  2820  0D02  046D               	iorwf	(main@man+1)^(0+128),w
  2821  0D03  1D03               	btfss	3,2
  2822  0D04  2D4D               	goto	l3826
  2823                           
  2824                           ;master_eight.c: 540: {
  2825                           ;master_eight.c: 541: _delay((unsigned long)((5)*(16000000/4000.0)));
  2826  0D05  301A               	movlw	26
  2827  0D06  0020               	movlb	0	; select bank0
  2828  0D07  00C5               	movwf	??_main
  2829  0D08  30F8               	movlw	248
  2830  0D09                     u5407:	
  2831  0D09  0B89               	decfsz	9,f
  2832  0D0A  2D09               	goto	u5407
  2833  0D0B  0BC5               	decfsz	??_main,f
  2834  0D0C  2D09               	goto	u5407
  2835  0D0D  0000               	nop
  2836                           
  2837                           ;master_eight.c: 542: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2838  0D0E  3052               	movlw	82
  2839  0D0F  0023               	movlb	3	; select bank3
  2840  0D10  009A               	movwf	26	;volatile
  2841  0D11  3006               	movlw	6
  2842  0D12  0020               	movlb	0	; select bank0
  2843  0D13  00C5               	movwf	??_main
  2844  0D14  3030               	movlw	48
  2845  0D15                     u5417:	
  2846  0D15  0B89               	decfsz	9,f
  2847  0D16  2D15               	goto	u5417
  2848  0D17  0BC5               	decfsz	??_main,f
  2849  0D18  2D15               	goto	u5417
  2850  0D19  0000               	nop
  2851                           
  2852                           ;master_eight.c: 543: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  2853  0D1A  3031               	movlw	49
  2854  0D1B  0023               	movlb	3	; select bank3
  2855  0D1C  009A               	movwf	26	;volatile
  2856  0D1D  3006               	movlw	6
  2857  0D1E  0020               	movlb	0	; select bank0
  2858  0D1F  00C5               	movwf	??_main
  2859  0D20  3030               	movlw	48
  2860  0D21                     u5427:	
  2861  0D21  0B89               	decfsz	9,f
  2862  0D22  2D21               	goto	u5427
  2863  0D23  0BC5               	decfsz	??_main,f
  2864  0D24  2D21               	goto	u5427
  2865  0D25  0000               	nop
  2866                           
  2867                           ;master_eight.c: 544: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2868  0D26  3030               	movlw	48
  2869  0D27  0023               	movlb	3	; select bank3
  2870  0D28  009A               	movwf	26	;volatile
  2871  0D29  3006               	movlw	6
  2872  0D2A  0020               	movlb	0	; select bank0
  2873  0D2B  00C5               	movwf	??_main
  2874  0D2C  3030               	movlw	48
  2875  0D2D                     u5437:	
  2876  0D2D  0B89               	decfsz	9,f
  2877  0D2E  2D2D               	goto	u5437
  2878  0D2F  0BC5               	decfsz	??_main,f
  2879  0D30  2D2D               	goto	u5437
  2880  0D31  0000               	nop
  2881                           
  2882                           ;master_eight.c: 545: TX1REG = '4';_delay((unsigned long)((1)*(16000000/4000.0)));
  2883  0D32  3034               	movlw	52
  2884  0D33  0023               	movlb	3	; select bank3
  2885  0D34  009A               	movwf	26	;volatile
  2886  0D35  3006               	movlw	6
  2887  0D36  0020               	movlb	0	; select bank0
  2888  0D37  00C5               	movwf	??_main
  2889  0D38  3030               	movlw	48
  2890  0D39                     u5447:	
  2891  0D39  0B89               	decfsz	9,f
  2892  0D3A  2D39               	goto	u5447
  2893  0D3B  0BC5               	decfsz	??_main,f
  2894  0D3C  2D39               	goto	u5447
  2895  0D3D  0000               	nop
  2896                           
  2897                           ;master_eight.c: 546: send_Response_To_Touch('D','1','0');
  2898  0D3E  3031               	movlw	49
  2899  0D3F  0020               	movlb	0	; select bank0
  2900  0D40  00C5               	movwf	??_main
  2901  0D41  0845               	movf	??_main,w
  2902  0D42  00A0               	movwf	send_Response_To_Touch@switch_status
  2903  0D43  3030               	movlw	48
  2904  0D44  00C6               	movwf	??_main+1
  2905  0D45  0846               	movf	??_main+1,w
  2906  0D46  00A1               	movwf	send_Response_To_Touch@fan_speed
  2907  0D47  3044               	movlw	68
  2908  0D48  3197  279A  3188   	fcall	_send_Response_To_Touch
  2909                           
  2910                           ;master_eight.c: 547: RF1=1;
  2911  0D4B  0025               	movlb	5	; select bank5
  2912  0D4C  148C               	bsf	12,1	;volatile
  2913  0D4D                     l3826:	
  2914                           
  2915                           ;master_eight.c: 548: }
  2916                           ;master_eight.c: 549: man=0;
  2917  0D4D  0021               	movlb	1	; select bank1
  2918  0D4E  01EC               	clrf	main@man^(0+128)
  2919  0D4F  01ED               	clrf	(main@man+1)^(0+128)
  2920                           
  2921                           ;master_eight.c: 550: R4=0;
  2922  0D50  0020               	movlb	0	; select bank0
  2923  0D51  01D5               	clrf	_R4
  2924  0D52  01D6               	clrf	_R4+1
  2925  0D53                     l3830:	
  2926                           
  2927                           ;master_eight.c: 552: }
  2928                           ;master_eight.c: 556: if(copy_parentalLockBuffer[5] == '0' && RF6 == 0 && R5 == 0)
  2929  0D53  3030               	movlw	48
  2930  0D54  0021               	movlb	1	; select bank1
  2931  0D55  0625               	xorwf	(_copy_parentalLockBuffer^(0+128)+5),w
  2932  0D56  1D03               	btfss	3,2
  2933  0D57  2DB4               	goto	l3848
  2934  0D58  0025               	movlb	5	; select bank5
  2935  0D59  1B0C               	btfsc	12,6	;volatile
  2936  0D5A  2DB4               	goto	l3848
  2937  0D5B  0020               	movlb	0	; select bank0
  2938  0D5C  0853               	movf	_R5,w
  2939  0D5D  0454               	iorwf	_R5+1,w
  2940  0D5E  1D03               	btfss	3,2
  2941  0D5F  2DB4               	goto	l3848
  2942                           
  2943                           ;master_eight.c: 557: {
  2944                           ;master_eight.c: 558: if(man==1)
  2945  0D60  0021               	movlb	1	; select bank1
  2946  0D61  036C               	decf	main@man^(0+128),w
  2947  0D62  046D               	iorwf	(main@man+1)^(0+128),w
  2948  0D63  1D03               	btfss	3,2
  2949  0D64  2DAC               	goto	l3844
  2950                           
  2951                           ;master_eight.c: 559: {
  2952                           ;master_eight.c: 561: _delay((unsigned long)((5)*(16000000/4000.0)));
  2953  0D65  301A               	movlw	26
  2954  0D66  0020               	movlb	0	; select bank0
  2955  0D67  00C5               	movwf	??_main
  2956  0D68  30F8               	movlw	248
  2957  0D69                     u5457:	
  2958  0D69  0B89               	decfsz	9,f
  2959  0D6A  2D69               	goto	u5457
  2960  0D6B  0BC5               	decfsz	??_main,f
  2961  0D6C  2D69               	goto	u5457
  2962  0D6D  0000               	nop
  2963                           
  2964                           ;master_eight.c: 562: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  2965  0D6E  3052               	movlw	82
  2966  0D6F  0023               	movlb	3	; select bank3
  2967  0D70  009A               	movwf	26	;volatile
  2968  0D71  3006               	movlw	6
  2969  0D72  0020               	movlb	0	; select bank0
  2970  0D73  00C5               	movwf	??_main
  2971  0D74  3030               	movlw	48
  2972  0D75                     u5467:	
  2973  0D75  0B89               	decfsz	9,f
  2974  0D76  2D75               	goto	u5467
  2975  0D77  0BC5               	decfsz	??_main,f
  2976  0D78  2D75               	goto	u5467
  2977  0D79  0000               	nop
  2978                           
  2979                           ;master_eight.c: 563: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2980  0D7A  3030               	movlw	48
  2981  0D7B  0023               	movlb	3	; select bank3
  2982  0D7C  009A               	movwf	26	;volatile
  2983  0D7D  3006               	movlw	6
  2984  0D7E  0020               	movlb	0	; select bank0
  2985  0D7F  00C5               	movwf	??_main
  2986  0D80  3030               	movlw	48
  2987  0D81                     u5477:	
  2988  0D81  0B89               	decfsz	9,f
  2989  0D82  2D81               	goto	u5477
  2990  0D83  0BC5               	decfsz	??_main,f
  2991  0D84  2D81               	goto	u5477
  2992  0D85  0000               	nop
  2993                           
  2994                           ;master_eight.c: 564: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  2995  0D86  3030               	movlw	48
  2996  0D87  0023               	movlb	3	; select bank3
  2997  0D88  009A               	movwf	26	;volatile
  2998  0D89  3006               	movlw	6
  2999  0D8A  0020               	movlb	0	; select bank0
  3000  0D8B  00C5               	movwf	??_main
  3001  0D8C  3030               	movlw	48
  3002  0D8D                     u5487:	
  3003  0D8D  0B89               	decfsz	9,f
  3004  0D8E  2D8D               	goto	u5487
  3005  0D8F  0BC5               	decfsz	??_main,f
  3006  0D90  2D8D               	goto	u5487
  3007  0D91  0000               	nop
  3008                           
  3009                           ;master_eight.c: 565: TX1REG = '5';_delay((unsigned long)((1)*(16000000/4000.0)));
  3010  0D92  3035               	movlw	53
  3011  0D93  0023               	movlb	3	; select bank3
  3012  0D94  009A               	movwf	26	;volatile
  3013  0D95  3006               	movlw	6
  3014  0D96  0020               	movlb	0	; select bank0
  3015  0D97  00C5               	movwf	??_main
  3016  0D98  3030               	movlw	48
  3017  0D99                     u5497:	
  3018  0D99  0B89               	decfsz	9,f
  3019  0D9A  2D99               	goto	u5497
  3020  0D9B  0BC5               	decfsz	??_main,f
  3021  0D9C  2D99               	goto	u5497
  3022  0D9D  0000               	nop
  3023                           
  3024                           ;master_eight.c: 566: RA3=0;
  3025  0D9E  0020               	movlb	0	; select bank0
  3026  0D9F  118C               	bcf	12,3	;volatile
  3027                           
  3028                           ;master_eight.c: 567: send_Response_To_Touch('E','0','0');
  3029  0DA0  3030               	movlw	48
  3030  0DA1  00C5               	movwf	??_main
  3031  0DA2  0845               	movf	??_main,w
  3032  0DA3  00A0               	movwf	send_Response_To_Touch@switch_status
  3033  0DA4  3030               	movlw	48
  3034  0DA5  00C6               	movwf	??_main+1
  3035  0DA6  0846               	movf	??_main+1,w
  3036  0DA7  00A1               	movwf	send_Response_To_Touch@fan_speed
  3037  0DA8  3045               	movlw	69
  3038  0DA9  3197  279A  3188   	fcall	_send_Response_To_Touch
  3039  0DAC                     l3844:	
  3040                           
  3041                           ;master_eight.c: 568: }
  3042                           ;master_eight.c: 569: man=0;
  3043  0DAC  0021               	movlb	1	; select bank1
  3044  0DAD  01EC               	clrf	main@man^(0+128)
  3045  0DAE  01ED               	clrf	(main@man+1)^(0+128)
  3046                           
  3047                           ;master_eight.c: 570: R5=1;
  3048  0DAF  3001               	movlw	1
  3049  0DB0  0020               	movlb	0	; select bank0
  3050  0DB1  00D3               	movwf	_R5
  3051  0DB2  3000               	movlw	0
  3052  0DB3  00D4               	movwf	_R5+1
  3053  0DB4                     l3848:	
  3054                           
  3055                           ;master_eight.c: 572: }
  3056                           ;master_eight.c: 574: if(copy_parentalLockBuffer[5] == '0' && RF6 == 1 && R5 == 1)
  3057  0DB4  3030               	movlw	48
  3058  0DB5  0021               	movlb	1	; select bank1
  3059  0DB6  0625               	xorwf	(_copy_parentalLockBuffer^(0+128)+5),w
  3060  0DB7  1D03               	btfss	3,2
  3061  0DB8  2E14               	goto	l3866
  3062  0DB9  0025               	movlb	5	; select bank5
  3063  0DBA  1F0C               	btfss	12,6	;volatile
  3064  0DBB  2E14               	goto	l3866
  3065  0DBC  0020               	movlb	0	; select bank0
  3066  0DBD  0353               	decf	_R5,w
  3067  0DBE  0454               	iorwf	_R5+1,w
  3068  0DBF  1D03               	btfss	3,2
  3069  0DC0  2E14               	goto	l3866
  3070                           
  3071                           ;master_eight.c: 575: {
  3072                           ;master_eight.c: 576: if(man==1)
  3073  0DC1  0021               	movlb	1	; select bank1
  3074  0DC2  036C               	decf	main@man^(0+128),w
  3075  0DC3  046D               	iorwf	(main@man+1)^(0+128),w
  3076  0DC4  1D03               	btfss	3,2
  3077  0DC5  2E0E               	goto	l3862
  3078                           
  3079                           ;master_eight.c: 577: {
  3080                           ;master_eight.c: 578: _delay((unsigned long)((5)*(16000000/4000.0)));
  3081  0DC6  301A               	movlw	26
  3082  0DC7  0020               	movlb	0	; select bank0
  3083  0DC8  00C5               	movwf	??_main
  3084  0DC9  30F8               	movlw	248
  3085  0DCA                     u5507:	
  3086  0DCA  0B89               	decfsz	9,f
  3087  0DCB  2DCA               	goto	u5507
  3088  0DCC  0BC5               	decfsz	??_main,f
  3089  0DCD  2DCA               	goto	u5507
  3090  0DCE  0000               	nop
  3091                           
  3092                           ;master_eight.c: 579: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  3093  0DCF  3052               	movlw	82
  3094  0DD0  0023               	movlb	3	; select bank3
  3095  0DD1  009A               	movwf	26	;volatile
  3096  0DD2  3006               	movlw	6
  3097  0DD3  0020               	movlb	0	; select bank0
  3098  0DD4  00C5               	movwf	??_main
  3099  0DD5  3030               	movlw	48
  3100  0DD6                     u5517:	
  3101  0DD6  0B89               	decfsz	9,f
  3102  0DD7  2DD6               	goto	u5517
  3103  0DD8  0BC5               	decfsz	??_main,f
  3104  0DD9  2DD6               	goto	u5517
  3105  0DDA  0000               	nop
  3106                           
  3107                           ;master_eight.c: 580: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  3108  0DDB  3031               	movlw	49
  3109  0DDC  0023               	movlb	3	; select bank3
  3110  0DDD  009A               	movwf	26	;volatile
  3111  0DDE  3006               	movlw	6
  3112  0DDF  0020               	movlb	0	; select bank0
  3113  0DE0  00C5               	movwf	??_main
  3114  0DE1  3030               	movlw	48
  3115  0DE2                     u5527:	
  3116  0DE2  0B89               	decfsz	9,f
  3117  0DE3  2DE2               	goto	u5527
  3118  0DE4  0BC5               	decfsz	??_main,f
  3119  0DE5  2DE2               	goto	u5527
  3120  0DE6  0000               	nop
  3121                           
  3122                           ;master_eight.c: 581: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3123  0DE7  3030               	movlw	48
  3124  0DE8  0023               	movlb	3	; select bank3
  3125  0DE9  009A               	movwf	26	;volatile
  3126  0DEA  3006               	movlw	6
  3127  0DEB  0020               	movlb	0	; select bank0
  3128  0DEC  00C5               	movwf	??_main
  3129  0DED  3030               	movlw	48
  3130  0DEE                     u5537:	
  3131  0DEE  0B89               	decfsz	9,f
  3132  0DEF  2DEE               	goto	u5537
  3133  0DF0  0BC5               	decfsz	??_main,f
  3134  0DF1  2DEE               	goto	u5537
  3135  0DF2  0000               	nop
  3136                           
  3137                           ;master_eight.c: 582: TX1REG = '5';_delay((unsigned long)((1)*(16000000/4000.0)));
  3138  0DF3  3035               	movlw	53
  3139  0DF4  0023               	movlb	3	; select bank3
  3140  0DF5  009A               	movwf	26	;volatile
  3141  0DF6  3006               	movlw	6
  3142  0DF7  0020               	movlb	0	; select bank0
  3143  0DF8  00C5               	movwf	??_main
  3144  0DF9  3030               	movlw	48
  3145  0DFA                     u5547:	
  3146  0DFA  0B89               	decfsz	9,f
  3147  0DFB  2DFA               	goto	u5547
  3148  0DFC  0BC5               	decfsz	??_main,f
  3149  0DFD  2DFA               	goto	u5547
  3150  0DFE  0000               	nop
  3151                           
  3152                           ;master_eight.c: 583: send_Response_To_Touch('E','1','0');
  3153  0DFF  3031               	movlw	49
  3154  0E00  0020               	movlb	0	; select bank0
  3155  0E01  00C5               	movwf	??_main
  3156  0E02  0845               	movf	??_main,w
  3157  0E03  00A0               	movwf	send_Response_To_Touch@switch_status
  3158  0E04  3030               	movlw	48
  3159  0E05  00C6               	movwf	??_main+1
  3160  0E06  0846               	movf	??_main+1,w
  3161  0E07  00A1               	movwf	send_Response_To_Touch@fan_speed
  3162  0E08  3045               	movlw	69
  3163  0E09  3197  279A  3188   	fcall	_send_Response_To_Touch
  3164                           
  3165                           ;master_eight.c: 584: RA3=1;
  3166  0E0C  0020               	movlb	0	; select bank0
  3167  0E0D  158C               	bsf	12,3	;volatile
  3168  0E0E                     l3862:	
  3169                           
  3170                           ;master_eight.c: 585: }
  3171                           ;master_eight.c: 586: man=0;
  3172  0E0E  0021               	movlb	1	; select bank1
  3173  0E0F  01EC               	clrf	main@man^(0+128)
  3174  0E10  01ED               	clrf	(main@man+1)^(0+128)
  3175                           
  3176                           ;master_eight.c: 587: R5=0;
  3177  0E11  0020               	movlb	0	; select bank0
  3178  0E12  01D3               	clrf	_R5
  3179  0E13  01D4               	clrf	_R5+1
  3180  0E14                     l3866:	
  3181                           
  3182                           ;master_eight.c: 588: }
  3183                           ;master_eight.c: 590: if(copy_parentalLockBuffer[6] == '0' && RD7 == 0 && R6 == 0)
  3184  0E14  3030               	movlw	48
  3185  0E15  0021               	movlb	1	; select bank1
  3186  0E16  0626               	xorwf	(_copy_parentalLockBuffer^(0+128)+6),w
  3187  0E17  1D03               	btfss	3,2
  3188  0E18  2E75               	goto	l3884
  3189  0E19  0020               	movlb	0	; select bank0
  3190  0E1A  1B8F               	btfsc	15,7	;volatile
  3191  0E1B  2E75               	goto	l3884
  3192  0E1C  0851               	movf	_R6,w
  3193  0E1D  0452               	iorwf	_R6+1,w
  3194  0E1E  1D03               	btfss	3,2
  3195  0E1F  2E75               	goto	l3884
  3196                           
  3197                           ;master_eight.c: 591: {
  3198                           ;master_eight.c: 592: if(man==1)
  3199  0E20  0021               	movlb	1	; select bank1
  3200  0E21  036C               	decf	main@man^(0+128),w
  3201  0E22  046D               	iorwf	(main@man+1)^(0+128),w
  3202  0E23  1D03               	btfss	3,2
  3203  0E24  2E6D               	goto	l3880
  3204                           
  3205                           ;master_eight.c: 593: {
  3206                           ;master_eight.c: 595: _delay((unsigned long)((5)*(16000000/4000.0)));
  3207  0E25  301A               	movlw	26
  3208  0E26  0020               	movlb	0	; select bank0
  3209  0E27  00C5               	movwf	??_main
  3210  0E28  30F8               	movlw	248
  3211  0E29                     u5557:	
  3212  0E29  0B89               	decfsz	9,f
  3213  0E2A  2E29               	goto	u5557
  3214  0E2B  0BC5               	decfsz	??_main,f
  3215  0E2C  2E29               	goto	u5557
  3216  0E2D  0000               	nop
  3217                           
  3218                           ;master_eight.c: 596: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  3219  0E2E  3052               	movlw	82
  3220  0E2F  0023               	movlb	3	; select bank3
  3221  0E30  009A               	movwf	26	;volatile
  3222  0E31  3006               	movlw	6
  3223  0E32  0020               	movlb	0	; select bank0
  3224  0E33  00C5               	movwf	??_main
  3225  0E34  3030               	movlw	48
  3226  0E35                     u5567:	
  3227  0E35  0B89               	decfsz	9,f
  3228  0E36  2E35               	goto	u5567
  3229  0E37  0BC5               	decfsz	??_main,f
  3230  0E38  2E35               	goto	u5567
  3231  0E39  0000               	nop
  3232                           
  3233                           ;master_eight.c: 597: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3234  0E3A  3030               	movlw	48
  3235  0E3B  0023               	movlb	3	; select bank3
  3236  0E3C  009A               	movwf	26	;volatile
  3237  0E3D  3006               	movlw	6
  3238  0E3E  0020               	movlb	0	; select bank0
  3239  0E3F  00C5               	movwf	??_main
  3240  0E40  3030               	movlw	48
  3241  0E41                     u5577:	
  3242  0E41  0B89               	decfsz	9,f
  3243  0E42  2E41               	goto	u5577
  3244  0E43  0BC5               	decfsz	??_main,f
  3245  0E44  2E41               	goto	u5577
  3246  0E45  0000               	nop
  3247                           
  3248                           ;master_eight.c: 598: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3249  0E46  3030               	movlw	48
  3250  0E47  0023               	movlb	3	; select bank3
  3251  0E48  009A               	movwf	26	;volatile
  3252  0E49  3006               	movlw	6
  3253  0E4A  0020               	movlb	0	; select bank0
  3254  0E4B  00C5               	movwf	??_main
  3255  0E4C  3030               	movlw	48
  3256  0E4D                     u5587:	
  3257  0E4D  0B89               	decfsz	9,f
  3258  0E4E  2E4D               	goto	u5587
  3259  0E4F  0BC5               	decfsz	??_main,f
  3260  0E50  2E4D               	goto	u5587
  3261  0E51  0000               	nop
  3262                           
  3263                           ;master_eight.c: 599: TX1REG = '6';_delay((unsigned long)((1)*(16000000/4000.0)));
  3264  0E52  3036               	movlw	54
  3265  0E53  0023               	movlb	3	; select bank3
  3266  0E54  009A               	movwf	26	;volatile
  3267  0E55  3006               	movlw	6
  3268  0E56  0020               	movlb	0	; select bank0
  3269  0E57  00C5               	movwf	??_main
  3270  0E58  3030               	movlw	48
  3271  0E59                     u5597:	
  3272  0E59  0B89               	decfsz	9,f
  3273  0E5A  2E59               	goto	u5597
  3274  0E5B  0BC5               	decfsz	??_main,f
  3275  0E5C  2E59               	goto	u5597
  3276  0E5D  0000               	nop
  3277                           
  3278                           ;master_eight.c: 600: send_Response_To_Touch('F','0','0');
  3279  0E5E  3030               	movlw	48
  3280  0E5F  0020               	movlb	0	; select bank0
  3281  0E60  00C5               	movwf	??_main
  3282  0E61  0845               	movf	??_main,w
  3283  0E62  00A0               	movwf	send_Response_To_Touch@switch_status
  3284  0E63  3030               	movlw	48
  3285  0E64  00C6               	movwf	??_main+1
  3286  0E65  0846               	movf	??_main+1,w
  3287  0E66  00A1               	movwf	send_Response_To_Touch@fan_speed
  3288  0E67  3046               	movlw	70
  3289  0E68  3197  279A  3188   	fcall	_send_Response_To_Touch
  3290                           
  3291                           ;master_eight.c: 601: RA1=0;
  3292  0E6B  0020               	movlb	0	; select bank0
  3293  0E6C  108C               	bcf	12,1	;volatile
  3294  0E6D                     l3880:	
  3295                           
  3296                           ;master_eight.c: 602: }
  3297                           ;master_eight.c: 603: man=0;
  3298  0E6D  0021               	movlb	1	; select bank1
  3299  0E6E  01EC               	clrf	main@man^(0+128)
  3300  0E6F  01ED               	clrf	(main@man+1)^(0+128)
  3301                           
  3302                           ;master_eight.c: 604: R6=1;
  3303  0E70  3001               	movlw	1
  3304  0E71  0020               	movlb	0	; select bank0
  3305  0E72  00D1               	movwf	_R6
  3306  0E73  3000               	movlw	0
  3307  0E74  00D2               	movwf	_R6+1
  3308  0E75                     l3884:	
  3309                           
  3310                           ;master_eight.c: 606: }
  3311                           ;master_eight.c: 608: if(copy_parentalLockBuffer[6] == '0' && RD7 == 1 && R6 == 1 )
  3312  0E75  3030               	movlw	48
  3313  0E76  0021               	movlb	1	; select bank1
  3314  0E77  0626               	xorwf	(_copy_parentalLockBuffer^(0+128)+6),w
  3315  0E78  1D03               	btfss	3,2
  3316  0E79  2ED4               	goto	l3902
  3317  0E7A  0020               	movlb	0	; select bank0
  3318  0E7B  1F8F               	btfss	15,7	;volatile
  3319  0E7C  2ED4               	goto	l3902
  3320  0E7D  0351               	decf	_R6,w
  3321  0E7E  0452               	iorwf	_R6+1,w
  3322  0E7F  1D03               	btfss	3,2
  3323  0E80  2ED4               	goto	l3902
  3324                           
  3325                           ;master_eight.c: 609: {
  3326                           ;master_eight.c: 610: if(man==1)
  3327  0E81  0021               	movlb	1	; select bank1
  3328  0E82  036C               	decf	main@man^(0+128),w
  3329  0E83  046D               	iorwf	(main@man+1)^(0+128),w
  3330  0E84  1D03               	btfss	3,2
  3331  0E85  2ECE               	goto	l3898
  3332                           
  3333                           ;master_eight.c: 611: {
  3334                           ;master_eight.c: 612: _delay((unsigned long)((5)*(16000000/4000.0)));
  3335  0E86  301A               	movlw	26
  3336  0E87  0020               	movlb	0	; select bank0
  3337  0E88  00C5               	movwf	??_main
  3338  0E89  30F8               	movlw	248
  3339  0E8A                     u5607:	
  3340  0E8A  0B89               	decfsz	9,f
  3341  0E8B  2E8A               	goto	u5607
  3342  0E8C  0BC5               	decfsz	??_main,f
  3343  0E8D  2E8A               	goto	u5607
  3344  0E8E  0000               	nop
  3345                           
  3346                           ;master_eight.c: 613: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  3347  0E8F  3052               	movlw	82
  3348  0E90  0023               	movlb	3	; select bank3
  3349  0E91  009A               	movwf	26	;volatile
  3350  0E92  3006               	movlw	6
  3351  0E93  0020               	movlb	0	; select bank0
  3352  0E94  00C5               	movwf	??_main
  3353  0E95  3030               	movlw	48
  3354  0E96                     u5617:	
  3355  0E96  0B89               	decfsz	9,f
  3356  0E97  2E96               	goto	u5617
  3357  0E98  0BC5               	decfsz	??_main,f
  3358  0E99  2E96               	goto	u5617
  3359  0E9A  0000               	nop
  3360                           
  3361                           ;master_eight.c: 614: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  3362  0E9B  3031               	movlw	49
  3363  0E9C  0023               	movlb	3	; select bank3
  3364  0E9D  009A               	movwf	26	;volatile
  3365  0E9E  3006               	movlw	6
  3366  0E9F  0020               	movlb	0	; select bank0
  3367  0EA0  00C5               	movwf	??_main
  3368  0EA1  3030               	movlw	48
  3369  0EA2                     u5627:	
  3370  0EA2  0B89               	decfsz	9,f
  3371  0EA3  2EA2               	goto	u5627
  3372  0EA4  0BC5               	decfsz	??_main,f
  3373  0EA5  2EA2               	goto	u5627
  3374  0EA6  0000               	nop
  3375                           
  3376                           ;master_eight.c: 615: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3377  0EA7  3030               	movlw	48
  3378  0EA8  0023               	movlb	3	; select bank3
  3379  0EA9  009A               	movwf	26	;volatile
  3380  0EAA  3006               	movlw	6
  3381  0EAB  0020               	movlb	0	; select bank0
  3382  0EAC  00C5               	movwf	??_main
  3383  0EAD  3030               	movlw	48
  3384  0EAE                     u5637:	
  3385  0EAE  0B89               	decfsz	9,f
  3386  0EAF  2EAE               	goto	u5637
  3387  0EB0  0BC5               	decfsz	??_main,f
  3388  0EB1  2EAE               	goto	u5637
  3389  0EB2  0000               	nop
  3390                           
  3391                           ;master_eight.c: 616: TX1REG = '6';_delay((unsigned long)((1)*(16000000/4000.0)));
  3392  0EB3  3036               	movlw	54
  3393  0EB4  0023               	movlb	3	; select bank3
  3394  0EB5  009A               	movwf	26	;volatile
  3395  0EB6  3006               	movlw	6
  3396  0EB7  0020               	movlb	0	; select bank0
  3397  0EB8  00C5               	movwf	??_main
  3398  0EB9  3030               	movlw	48
  3399  0EBA                     u5647:	
  3400  0EBA  0B89               	decfsz	9,f
  3401  0EBB  2EBA               	goto	u5647
  3402  0EBC  0BC5               	decfsz	??_main,f
  3403  0EBD  2EBA               	goto	u5647
  3404  0EBE  0000               	nop
  3405                           
  3406                           ;master_eight.c: 617: send_Response_To_Touch('F','1','0');
  3407  0EBF  3031               	movlw	49
  3408  0EC0  0020               	movlb	0	; select bank0
  3409  0EC1  00C5               	movwf	??_main
  3410  0EC2  0845               	movf	??_main,w
  3411  0EC3  00A0               	movwf	send_Response_To_Touch@switch_status
  3412  0EC4  3030               	movlw	48
  3413  0EC5  00C6               	movwf	??_main+1
  3414  0EC6  0846               	movf	??_main+1,w
  3415  0EC7  00A1               	movwf	send_Response_To_Touch@fan_speed
  3416  0EC8  3046               	movlw	70
  3417  0EC9  3197  279A  3188   	fcall	_send_Response_To_Touch
  3418                           
  3419                           ;master_eight.c: 618: RA1=1;
  3420  0ECC  0020               	movlb	0	; select bank0
  3421  0ECD  148C               	bsf	12,1	;volatile
  3422  0ECE                     l3898:	
  3423                           
  3424                           ;master_eight.c: 619: }
  3425                           ;master_eight.c: 620: man=0;
  3426  0ECE  0021               	movlb	1	; select bank1
  3427  0ECF  01EC               	clrf	main@man^(0+128)
  3428  0ED0  01ED               	clrf	(main@man+1)^(0+128)
  3429                           
  3430                           ;master_eight.c: 621: R6=0;
  3431  0ED1  0020               	movlb	0	; select bank0
  3432  0ED2  01D1               	clrf	_R6
  3433  0ED3  01D2               	clrf	_R6+1
  3434  0ED4                     l3902:	
  3435                           
  3436                           ;master_eight.c: 622: }
  3437                           ;master_eight.c: 625: if(copy_parentalLockBuffer[7] == '0' && RD6 == 0 && R7 == 0)
  3438  0ED4  3030               	movlw	48
  3439  0ED5  0021               	movlb	1	; select bank1
  3440  0ED6  0627               	xorwf	(_copy_parentalLockBuffer^(0+128)+7),w
  3441  0ED7  1D03               	btfss	3,2
  3442  0ED8  2F81               	goto	l3936
  3443  0ED9  0020               	movlb	0	; select bank0
  3444  0EDA  1B0F               	btfsc	15,6	;volatile
  3445  0EDB  2F81               	goto	l3936
  3446  0EDC  084F               	movf	_R7,w
  3447  0EDD  0450               	iorwf	_R7+1,w
  3448  0EDE  1D03               	btfss	3,2
  3449  0EDF  2F81               	goto	l3936
  3450                           
  3451                           ;master_eight.c: 626: {
  3452                           ;master_eight.c: 627: if(man==1)
  3453  0EE0  0021               	movlb	1	; select bank1
  3454  0EE1  036C               	decf	main@man^(0+128),w
  3455  0EE2  046D               	iorwf	(main@man+1)^(0+128),w
  3456  0EE3  1D03               	btfss	3,2
  3457  0EE4  2F79               	goto	l3932
  3458                           
  3459                           ;master_eight.c: 628: {
  3460                           ;master_eight.c: 630: _delay((unsigned long)((5)*(16000000/4000.0)));
  3461  0EE5  301A               	movlw	26
  3462  0EE6  0020               	movlb	0	; select bank0
  3463  0EE7  00C5               	movwf	??_main
  3464  0EE8  30F8               	movlw	248
  3465  0EE9                     u5657:	
  3466  0EE9  0B89               	decfsz	9,f
  3467  0EEA  2EE9               	goto	u5657
  3468  0EEB  0BC5               	decfsz	??_main,f
  3469  0EEC  2EE9               	goto	u5657
  3470  0EED  0000               	nop
  3471                           
  3472                           ;master_eight.c: 631: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  3473  0EEE  3052               	movlw	82
  3474  0EEF  0023               	movlb	3	; select bank3
  3475  0EF0  009A               	movwf	26	;volatile
  3476  0EF1  3006               	movlw	6
  3477  0EF2  0020               	movlb	0	; select bank0
  3478  0EF3  00C5               	movwf	??_main
  3479  0EF4  3030               	movlw	48
  3480  0EF5                     u5667:	
  3481  0EF5  0B89               	decfsz	9,f
  3482  0EF6  2EF5               	goto	u5667
  3483  0EF7  0BC5               	decfsz	??_main,f
  3484  0EF8  2EF5               	goto	u5667
  3485  0EF9  0000               	nop
  3486                           
  3487                           ;master_eight.c: 632: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3488  0EFA  3030               	movlw	48
  3489  0EFB  0023               	movlb	3	; select bank3
  3490  0EFC  009A               	movwf	26	;volatile
  3491  0EFD  3006               	movlw	6
  3492  0EFE  0020               	movlb	0	; select bank0
  3493  0EFF  00C5               	movwf	??_main
  3494  0F00  3030               	movlw	48
  3495  0F01                     u5677:	
  3496  0F01  0B89               	decfsz	9,f
  3497  0F02  2F01               	goto	u5677
  3498  0F03  0BC5               	decfsz	??_main,f
  3499  0F04  2F01               	goto	u5677
  3500  0F05  0000               	nop
  3501                           
  3502                           ;master_eight.c: 633: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3503  0F06  3030               	movlw	48
  3504  0F07  0023               	movlb	3	; select bank3
  3505  0F08  009A               	movwf	26	;volatile
  3506  0F09  3006               	movlw	6
  3507  0F0A  0020               	movlb	0	; select bank0
  3508  0F0B  00C5               	movwf	??_main
  3509  0F0C  3030               	movlw	48
  3510  0F0D                     u5687:	
  3511  0F0D  0B89               	decfsz	9,f
  3512  0F0E  2F0D               	goto	u5687
  3513  0F0F  0BC5               	decfsz	??_main,f
  3514  0F10  2F0D               	goto	u5687
  3515  0F11  0000               	nop
  3516                           
  3517                           ;master_eight.c: 634: TX1REG = '7';_delay((unsigned long)((1)*(16000000/4000.0)));
  3518  0F12  3037               	movlw	55
  3519  0F13  0023               	movlb	3	; select bank3
  3520  0F14  009A               	movwf	26	;volatile
  3521  0F15  3006               	movlw	6
  3522  0F16  0020               	movlb	0	; select bank0
  3523  0F17  00C5               	movwf	??_main
  3524  0F18  3030               	movlw	48
  3525  0F19                     u5697:	
  3526  0F19  0B89               	decfsz	9,f
  3527  0F1A  2F19               	goto	u5697
  3528  0F1B  0BC5               	decfsz	??_main,f
  3529  0F1C  2F19               	goto	u5697
  3530  0F1D  0000               	nop
  3531                           
  3532                           ;master_eight.c: 635: _delay((unsigned long)((10)*(16000000/4000.0)));
  3533  0F1E  3034               	movlw	52
  3534  0F1F  0020               	movlb	0	; select bank0
  3535  0F20  00C5               	movwf	??_main
  3536  0F21  30F1               	movlw	241
  3537  0F22                     u5707:	
  3538  0F22  0B89               	decfsz	9,f
  3539  0F23  2F22               	goto	u5707
  3540  0F24  0BC5               	decfsz	??_main,f
  3541  0F25  2F22               	goto	u5707
  3542  0F26  3200               	nop2
  3543                           
  3544                           ;master_eight.c: 636: send_Response_To_Touch('P','0','0');
  3545  0F27  3030               	movlw	48
  3546  0F28  0020               	movlb	0	; select bank0
  3547  0F29  00C5               	movwf	??_main
  3548  0F2A  0845               	movf	??_main,w
  3549  0F2B  00A0               	movwf	send_Response_To_Touch@switch_status
  3550  0F2C  3030               	movlw	48
  3551  0F2D  00C6               	movwf	??_main+1
  3552  0F2E  0846               	movf	??_main+1,w
  3553  0F2F  00A1               	movwf	send_Response_To_Touch@fan_speed
  3554  0F30  3050               	movlw	80
  3555  0F31  3197  279A  3188   	fcall	_send_Response_To_Touch
  3556                           
  3557                           ;master_eight.c: 637: _delay((unsigned long)((10)*(16000000/4000.0)));
  3558  0F34  3034               	movlw	52
  3559  0F35  0020               	movlb	0	; select bank0
  3560  0F36  00C5               	movwf	??_main
  3561  0F37  30F1               	movlw	241
  3562  0F38                     u5717:	
  3563  0F38  0B89               	decfsz	9,f
  3564  0F39  2F38               	goto	u5717
  3565  0F3A  0BC5               	decfsz	??_main,f
  3566  0F3B  2F38               	goto	u5717
  3567  0F3C  3200               	nop2
  3568                           
  3569                           ;master_eight.c: 638: RB4=0;
  3570  0F3D  0020               	movlb	0	; select bank0
  3571  0F3E  120D               	bcf	13,4	;volatile
  3572                           
  3573                           ;master_eight.c: 639: _delay((unsigned long)((500)*(16000000/4000.0)));
  3574  0F3F  300B               	movlw	11
  3575  0F40  0020               	movlb	0	; select bank0
  3576  0F41  00C6               	movwf	??_main+1
  3577  0F42  3026               	movlw	38
  3578  0F43  00C5               	movwf	??_main
  3579  0F44  305D               	movlw	93
  3580  0F45                     u5727:	
  3581  0F45  0B89               	decfsz	9,f
  3582  0F46  2F45               	goto	u5727
  3583  0F47  0BC5               	decfsz	??_main,f
  3584  0F48  2F45               	goto	u5727
  3585  0F49  0BC6               	decfsz	??_main+1,f
  3586  0F4A  2F45               	goto	u5727
  3587  0F4B  3200               	nop2
  3588                           
  3589                           ;master_eight.c: 640: RB2=0;
  3590  0F4C  0020               	movlb	0	; select bank0
  3591  0F4D  110D               	bcf	13,2	;volatile
  3592                           
  3593                           ;master_eight.c: 641: _delay((unsigned long)((500)*(16000000/4000.0)));
  3594  0F4E  300B               	movlw	11
  3595  0F4F  0020               	movlb	0	; select bank0
  3596  0F50  00C6               	movwf	??_main+1
  3597  0F51  3026               	movlw	38
  3598  0F52  00C5               	movwf	??_main
  3599  0F53  305D               	movlw	93
  3600  0F54                     u5737:	
  3601  0F54  0B89               	decfsz	9,f
  3602  0F55  2F54               	goto	u5737
  3603  0F56  0BC5               	decfsz	??_main,f
  3604  0F57  2F54               	goto	u5737
  3605  0F58  0BC6               	decfsz	??_main+1,f
  3606  0F59  2F54               	goto	u5737
  3607  0F5A  3200               	nop2
  3608                           
  3609                           ;master_eight.c: 642: RB0=0;
  3610  0F5B  0020               	movlb	0	; select bank0
  3611  0F5C  100D               	bcf	13,0	;volatile
  3612                           
  3613                           ;master_eight.c: 643: _delay((unsigned long)((500)*(16000000/4000.0)));
  3614  0F5D  300B               	movlw	11
  3615  0F5E  0020               	movlb	0	; select bank0
  3616  0F5F  00C6               	movwf	??_main+1
  3617  0F60  3026               	movlw	38
  3618  0F61  00C5               	movwf	??_main
  3619  0F62  305D               	movlw	93
  3620  0F63                     u5747:	
  3621  0F63  0B89               	decfsz	9,f
  3622  0F64  2F63               	goto	u5747
  3623  0F65  0BC5               	decfsz	??_main,f
  3624  0F66  2F63               	goto	u5747
  3625  0F67  0BC6               	decfsz	??_main+1,f
  3626  0F68  2F63               	goto	u5747
  3627  0F69  3200               	nop2
  3628                           
  3629                           ;master_eight.c: 644: RA4 = 1;
  3630  0F6A  0020               	movlb	0	; select bank0
  3631  0F6B  160C               	bsf	12,4	;volatile
  3632                           
  3633                           ;master_eight.c: 645: _delay((unsigned long)((500)*(16000000/4000.0)));
  3634  0F6C  300B               	movlw	11
  3635  0F6D  0020               	movlb	0	; select bank0
  3636  0F6E  00C6               	movwf	??_main+1
  3637  0F6F  3026               	movlw	38
  3638  0F70  00C5               	movwf	??_main
  3639  0F71  305D               	movlw	93
  3640  0F72                     u5757:	
  3641  0F72  0B89               	decfsz	9,f
  3642  0F73  2F72               	goto	u5757
  3643  0F74  0BC5               	decfsz	??_main,f
  3644  0F75  2F72               	goto	u5757
  3645  0F76  0BC6               	decfsz	??_main+1,f
  3646  0F77  2F72               	goto	u5757
  3647  0F78  3200               	nop2
  3648  0F79                     l3932:	
  3649                           
  3650                           ;master_eight.c: 646: }
  3651                           ;master_eight.c: 647: man=0;
  3652  0F79  0021               	movlb	1	; select bank1
  3653  0F7A  01EC               	clrf	main@man^(0+128)
  3654  0F7B  01ED               	clrf	(main@man+1)^(0+128)
  3655                           
  3656                           ;master_eight.c: 648: R7=1;
  3657  0F7C  3001               	movlw	1
  3658  0F7D  0020               	movlb	0	; select bank0
  3659  0F7E  00CF               	movwf	_R7
  3660  0F7F  3000               	movlw	0
  3661  0F80  00D0               	movwf	_R7+1
  3662  0F81                     l3936:	
  3663                           
  3664                           ;master_eight.c: 650: }
  3665                           ;master_eight.c: 653: if(copy_parentalLockBuffer[7] == '0' && RD6 == 1 && R7 == 1 )
  3666  0F81  3030               	movlw	48
  3667  0F82  0021               	movlb	1	; select bank1
  3668  0F83  0627               	xorwf	(_copy_parentalLockBuffer^(0+128)+7),w
  3669  0F84  1D03               	btfss	3,2
  3670  0F85  28E7               	goto	l3570
  3671  0F86  0020               	movlb	0	; select bank0
  3672  0F87  1F0F               	btfss	15,6	;volatile
  3673  0F88  28E7               	goto	l3570
  3674  0F89  034F               	decf	_R7,w
  3675  0F8A  0450               	iorwf	_R7+1,w
  3676  0F8B  1D03               	btfss	3,2
  3677  0F8C  28E7               	goto	l3570
  3678                           
  3679                           ;master_eight.c: 654: {
  3680                           ;master_eight.c: 655: if(man==1)
  3681  0F8D  0021               	movlb	1	; select bank1
  3682  0F8E  036C               	decf	main@man^(0+128),w
  3683  0F8F  046D               	iorwf	(main@man+1)^(0+128),w
  3684  0F90  1D03               	btfss	3,2
  3685  0F91  2FF9               	goto	l3954
  3686                           
  3687                           ;master_eight.c: 656: {
  3688                           ;master_eight.c: 658: _delay((unsigned long)((5)*(16000000/4000.0)));
  3689  0F92  301A               	movlw	26
  3690  0F93  0020               	movlb	0	; select bank0
  3691  0F94  00C5               	movwf	??_main
  3692  0F95  30F8               	movlw	248
  3693  0F96                     u5767:	
  3694  0F96  0B89               	decfsz	9,f
  3695  0F97  2F96               	goto	u5767
  3696  0F98  0BC5               	decfsz	??_main,f
  3697  0F99  2F96               	goto	u5767
  3698  0F9A  0000               	nop
  3699                           
  3700                           ;master_eight.c: 659: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  3701  0F9B  3052               	movlw	82
  3702  0F9C  0023               	movlb	3	; select bank3
  3703  0F9D  009A               	movwf	26	;volatile
  3704  0F9E  3006               	movlw	6
  3705  0F9F  0020               	movlb	0	; select bank0
  3706  0FA0  00C5               	movwf	??_main
  3707  0FA1  3030               	movlw	48
  3708  0FA2                     u5777:	
  3709  0FA2  0B89               	decfsz	9,f
  3710  0FA3  2FA2               	goto	u5777
  3711  0FA4  0BC5               	decfsz	??_main,f
  3712  0FA5  2FA2               	goto	u5777
  3713  0FA6  0000               	nop
  3714                           
  3715                           ;master_eight.c: 660: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  3716  0FA7  3031               	movlw	49
  3717  0FA8  0023               	movlb	3	; select bank3
  3718  0FA9  009A               	movwf	26	;volatile
  3719  0FAA  3006               	movlw	6
  3720  0FAB  0020               	movlb	0	; select bank0
  3721  0FAC  00C5               	movwf	??_main
  3722  0FAD  3030               	movlw	48
  3723  0FAE                     u5787:	
  3724  0FAE  0B89               	decfsz	9,f
  3725  0FAF  2FAE               	goto	u5787
  3726  0FB0  0BC5               	decfsz	??_main,f
  3727  0FB1  2FAE               	goto	u5787
  3728  0FB2  0000               	nop
  3729                           
  3730                           ;master_eight.c: 661: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3731  0FB3  3030               	movlw	48
  3732  0FB4  0023               	movlb	3	; select bank3
  3733  0FB5  009A               	movwf	26	;volatile
  3734  0FB6  3006               	movlw	6
  3735  0FB7  0020               	movlb	0	; select bank0
  3736  0FB8  00C5               	movwf	??_main
  3737  0FB9  3030               	movlw	48
  3738  0FBA                     u5797:	
  3739  0FBA  0B89               	decfsz	9,f
  3740  0FBB  2FBA               	goto	u5797
  3741  0FBC  0BC5               	decfsz	??_main,f
  3742  0FBD  2FBA               	goto	u5797
  3743  0FBE  0000               	nop
  3744                           
  3745                           ;master_eight.c: 662: TX1REG = '7';_delay((unsigned long)((1)*(16000000/4000.0)));
  3746  0FBF  3037               	movlw	55
  3747  0FC0  0023               	movlb	3	; select bank3
  3748  0FC1  009A               	movwf	26	;volatile
  3749  0FC2  3006               	movlw	6
  3750  0FC3  0020               	movlb	0	; select bank0
  3751  0FC4  00C5               	movwf	??_main
  3752  0FC5  3030               	movlw	48
  3753  0FC6                     u5807:	
  3754  0FC6  0B89               	decfsz	9,f
  3755  0FC7  2FC6               	goto	u5807
  3756  0FC8  0BC5               	decfsz	??_main,f
  3757  0FC9  2FC6               	goto	u5807
  3758  0FCA  0000               	nop
  3759                           
  3760                           ;master_eight.c: 663: _delay((unsigned long)((10)*(16000000/4000.0)));
  3761  0FCB  3034               	movlw	52
  3762  0FCC  0020               	movlb	0	; select bank0
  3763  0FCD  00C5               	movwf	??_main
  3764  0FCE  30F1               	movlw	241
  3765  0FCF                     u5817:	
  3766  0FCF  0B89               	decfsz	9,f
  3767  0FD0  2FCF               	goto	u5817
  3768  0FD1  0BC5               	decfsz	??_main,f
  3769  0FD2  2FCF               	goto	u5817
  3770  0FD3  3200               	nop2
  3771                           
  3772                           ;master_eight.c: 664: send_Response_To_Touch('P','1','1');
  3773  0FD4  3031               	movlw	49
  3774  0FD5  0020               	movlb	0	; select bank0
  3775  0FD6  00C5               	movwf	??_main
  3776  0FD7  0845               	movf	??_main,w
  3777  0FD8  00A0               	movwf	send_Response_To_Touch@switch_status
  3778  0FD9  3031               	movlw	49
  3779  0FDA  00C6               	movwf	??_main+1
  3780  0FDB  0846               	movf	??_main+1,w
  3781  0FDC  00A1               	movwf	send_Response_To_Touch@fan_speed
  3782  0FDD  3050               	movlw	80
  3783  0FDE  3197  279A  3188   	fcall	_send_Response_To_Touch
  3784                           
  3785                           ;master_eight.c: 665: _delay((unsigned long)((10)*(16000000/4000.0)));
  3786  0FE1  3034               	movlw	52
  3787  0FE2  0020               	movlb	0	; select bank0
  3788  0FE3  00C5               	movwf	??_main
  3789  0FE4  30F1               	movlw	241
  3790  0FE5                     u5827:	
  3791  0FE5  0B89               	decfsz	9,f
  3792  0FE6  2FE5               	goto	u5827
  3793  0FE7  0BC5               	decfsz	??_main,f
  3794  0FE8  2FE5               	goto	u5827
  3795  0FE9  3200               	nop2
  3796                           
  3797                           ;master_eight.c: 666: RA4 = 0;
  3798  0FEA  0020               	movlb	0	; select bank0
  3799  0FEB  120C               	bcf	12,4	;volatile
  3800                           
  3801                           ;master_eight.c: 667: _delay((unsigned long)((500)*(16000000/4000.0)));
  3802  0FEC  300B               	movlw	11
  3803  0FED  0020               	movlb	0	; select bank0
  3804  0FEE  00C6               	movwf	??_main+1
  3805  0FEF  3026               	movlw	38
  3806  0FF0  00C5               	movwf	??_main
  3807  0FF1  305D               	movlw	93
  3808  0FF2                     u5837:	
  3809  0FF2  0B89               	decfsz	9,f
  3810  0FF3  2FF2               	goto	u5837
  3811  0FF4  0BC5               	decfsz	??_main,f
  3812  0FF5  2FF2               	goto	u5837
  3813  0FF6  0BC6               	decfsz	??_main+1,f
  3814  0FF7  2FF2               	goto	u5837
  3815  0FF8  3200               	nop2
  3816  0FF9                     l3954:	
  3817                           
  3818                           ;master_eight.c: 668: }
  3819                           ;master_eight.c: 669: man=0;
  3820  0FF9  0021               	movlb	1	; select bank1
  3821  0FFA  01EC               	clrf	main@man^(0+128)
  3822  0FFB  01ED               	clrf	(main@man+1)^(0+128)
  3823                           
  3824                           ;master_eight.c: 670: R7=0;
  3825  0FFC  0020               	movlb	0	; select bank0
  3826  0FFD  01CF               	clrf	_R7
  3827  0FFE  01D0               	clrf	_R7+1
  3828  0FFF  28E7               	goto	l3570
  3829  1000                     __end_of_main:	
  3830                           
  3831                           	psect	text1
  3832  1681                     __ptext1:	
  3833 ;; *************** function _errorsMain *****************
  3834 ;; Defined at:
  3835 ;;		line 846 in file "../master_eight.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  errNum          1    wreg     PTR unsigned char 
  3838 ;;		 -> ErrorNames(5), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  errNum          1    3[BANK0 ] PTR unsigned char 
  3841 ;;		 -> ErrorNames(5), 
  3842 ;;  Tx_count        2    1[BANK0 ] int 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3853 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  3854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3855 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  3856 ;;Total ram usage:        4 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    2
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _errorsMain
  3868  1681                     _errorsMain:	
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _errorsMain: [wreg+fsr1l+fsr1h+status,2+status,0]
  3872                           ;errorsMain@errNum stored from wreg
  3873  1681  0020               	movlb	0	; select bank0
  3874  1682  00A3               	movwf	errorsMain@errNum
  3875                           
  3876                           ;master_eight.c: 847: int Tx_count=0;
  3877  1683  01A1               	clrf	errorsMain@Tx_count
  3878  1684  01A2               	clrf	errorsMain@Tx_count+1
  3879  1685                     l3528:	
  3880                           ;master_eight.c: 848: while(Tx_count!=4)
  3881                           
  3882  1685  3004               	movlw	4
  3883  1686  0621               	xorwf	errorsMain@Tx_count,w
  3884  1687  0422               	iorwf	errorsMain@Tx_count+1,w
  3885  1688  1903               	btfsc	3,2
  3886  1689  0008               	return
  3887  168A                     l386:	
  3888                           ;master_eight.c: 849: {
  3889                           ;master_eight.c: 850: while (!TX1STAbits.TRMT);
  3890                           
  3891  168A  0023               	movlb	3	; select bank3
  3892  168B  1C9E               	btfss	30,1	;volatile
  3893  168C  2E8A               	goto	l386
  3894                           
  3895                           ;master_eight.c: 851: TX1REG = *errNum;
  3896  168D  0020               	movlb	0	; select bank0
  3897  168E  0823               	movf	errorsMain@errNum,w
  3898  168F  0086               	movwf	6
  3899  1690  0187               	clrf	7
  3900  1691  0801               	movf	1,w
  3901  1692  0023               	movlb	3	; select bank3
  3902  1693  009A               	movwf	26	;volatile
  3903                           
  3904                           ;master_eight.c: 852: *errNum++;
  3905  1694  3001               	movlw	1
  3906  1695  0020               	movlb	0	; select bank0
  3907  1696  00A0               	movwf	??_errorsMain
  3908  1697  0820               	movf	??_errorsMain,w
  3909  1698  07A3               	addwf	errorsMain@errNum,f
  3910                           
  3911                           ;master_eight.c: 853: Tx_count++;
  3912  1699  3001               	movlw	1
  3913  169A  07A1               	addwf	errorsMain@Tx_count,f
  3914  169B  3000               	movlw	0
  3915  169C  3DA2               	addwfc	errorsMain@Tx_count+1,f
  3916  169D  2E85               	goto	l3528
  3917  169E                     __end_of_errorsMain:	
  3918                           
  3919                           	psect	text2
  3920  1718                     __ptext2:	
  3921 ;; *************** function _copyTouchpanelReceiveDataBuffer *****************
  3922 ;; Defined at:
  3923 ;;		line 881 in file "../master_eight.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  dataBufferCo    2    1[BANK0 ] int 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  3939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3940 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  3941 ;;Total ram usage:        3 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    2
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _copyTouchpanelReceiveDataBuffer
  3953  1718                     _copyTouchpanelReceiveDataBuffer:	
  3954                           
  3955                           ;master_eight.c: 883: int dataBufferCounter=2;
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _copyTouchpanelReceiveDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  3959  1718  3002               	movlw	2
  3960  1719  0020               	movlb	0	; select bank0
  3961  171A  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  3962  171B  3000               	movlw	0
  3963  171C  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  3964                           
  3965                           ;master_eight.c: 884: for(dataBufferCounter=2; dataBufferCounter<5;dataBufferCounter++)
  3966  171D  3002               	movlw	2
  3967  171E  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  3968  171F  3000               	movlw	0
  3969  1720  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  3970  1721                     L1:	
  3971  1721  0822               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,w
  3972  1722  3A80               	xorlw	128
  3973  1723  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  3974  1724  3080               	movlw	128
  3975  1725  0220               	subwf	??_copyTouchpanelReceiveDataBuffer,w
  3976  1726  1D03               	skipz
  3977  1727  2F2A               	goto	u4235
  3978  1728  3005               	movlw	5
  3979  1729  0221               	subwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  3980  172A                     u4235:	
  3981  172A  1803               	btfsc	3,0
  3982  172B  0008               	return
  3983                           
  3984                           ;master_eight.c: 885: {
  3985                           ;master_eight.c: 886: tempReceiveTouchpanelDataBuffer[dataBufferCounter-2] = touchpanleR
      +                          eceivedDatabuffer[dataBufferCounter];
  3986  172C  0020               	movlb	0	; select bank0
  3987  172D  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  3988  172E  3EA0               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  3989  172F  0086               	movwf	6
  3990  1730  3001               	movlw	1	; select bank3/4
  3991  1731  0087               	movwf	7
  3992  1732  0801               	movf	1,w
  3993  1733  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  3994  1734  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  3995  1735  3EFE               	addlw	254
  3996  1736  3E40               	addlw	(low (_tempReceiveTouchpanelDataBuffer| (0+256)))& (0+255)
  3997  1737  0086               	movwf	6
  3998  1738  3001               	movlw	1	; select bank2/3
  3999  1739  0087               	movwf	7
  4000  173A  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  4001  173B  0081               	movwf	1
  4002                           
  4003                           ;master_eight.c: 887: touchpanleReceivedDatabuffer[dataBufferCounter] = "#";
  4004  173C  3000               	movlw	(low (STR_1| (0+32768)))& (0+255)
  4005  173D  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  4006  173E  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  4007  173F  3EA0               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  4008  1740  0086               	movwf	6
  4009  1741  3001               	movlw	1	; select bank3/4
  4010  1742  0087               	movwf	7
  4011  1743  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  4012  1744  0081               	movwf	1
  4013  1745  3001               	movlw	1
  4014  1746  07A1               	addwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,f
  4015  1747  3000               	movlw	0
  4016  1748  3DA2               	addwfc	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,f
  4017  1749  2F21               	goto	L1
  4018  174A                     __end_of_copyTouchpanelReceiveDataBuffer:	
  4019                           
  4020                           	psect	text3
  4021  16E6                     __ptext3:	
  4022 ;; *************** function _copyReceivedDataBuffer *****************
  4023 ;; Defined at:
  4024 ;;		line 874 in file "../master_eight.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  dataBufferCo    2    1[BANK0 ] int 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  4039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4041 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  4042 ;;Total ram usage:        3 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _copyReceivedDataBuffer
  4054  16E6                     _copyReceivedDataBuffer:	
  4055                           
  4056                           ;master_eight.c: 875: int dataBufferCounter=2;
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  4060  16E6  3002               	movlw	2
  4061  16E7  0020               	movlb	0	; select bank0
  4062  16E8  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  4063  16E9  3000               	movlw	0
  4064  16EA  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  4065                           
  4066                           ;master_eight.c: 876: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  4067  16EB  3002               	movlw	2
  4068  16EC  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  4069  16ED  3000               	movlw	0
  4070  16EE  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  4071  16EF                     L2:	
  4072  16EF  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  4073  16F0  3A80               	xorlw	128
  4074  16F1  00A0               	movwf	??_copyReceivedDataBuffer
  4075  16F2  3080               	movlw	128
  4076  16F3  0220               	subwf	??_copyReceivedDataBuffer,w
  4077  16F4  1D03               	skipz
  4078  16F5  2EF8               	goto	u4195
  4079  16F6  3009               	movlw	9
  4080  16F7  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  4081  16F8                     u4195:	
  4082  16F8  1803               	btfsc	3,0
  4083  16F9  0008               	return
  4084                           
  4085                           ;master_eight.c: 877: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffer
      +                          [dataBufferCounter];
  4086  16FA  0020               	movlb	0	; select bank0
  4087  16FB  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4088  16FC  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  4089  16FD  0086               	movwf	6
  4090  16FE  3001               	movlw	1	; select bank2/3
  4091  16FF  0087               	movwf	7
  4092  1700  0801               	movf	1,w
  4093  1701  00A0               	movwf	??_copyReceivedDataBuffer
  4094  1702  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4095  1703  3EFE               	addlw	254
  4096  1704  3E58               	addlw	(low (_tempReceivedDataBuffer| (0+256)))& (0+255)
  4097  1705  0086               	movwf	6
  4098  1706  3001               	movlw	1	; select bank2/3
  4099  1707  0087               	movwf	7
  4100  1708  0820               	movf	??_copyReceivedDataBuffer,w
  4101  1709  0081               	movwf	1
  4102                           
  4103                           ;master_eight.c: 878: mainReceivedDataBuffer[dataBufferCounter]='#';
  4104  170A  3023               	movlw	35
  4105  170B  00A0               	movwf	??_copyReceivedDataBuffer
  4106  170C  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4107  170D  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  4108  170E  0086               	movwf	6
  4109  170F  3001               	movlw	1	; select bank2/3
  4110  1710  0087               	movwf	7
  4111  1711  0820               	movf	??_copyReceivedDataBuffer,w
  4112  1712  0081               	movwf	1
  4113  1713  3001               	movlw	1
  4114  1714  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  4115  1715  3000               	movlw	0
  4116  1716  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  4117  1717  2EEF               	goto	L2
  4118  1718                     __end_of_copyReceivedDataBuffer:	
  4119                           
  4120                           	psect	text4
  4121  0130                     __ptext4:	
  4122 ;; *************** function _applianceControl *****************
  4123 ;; Defined at:
  4124 ;;		line 1 in file "../application.h"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  charSwitchMS    1    wreg     unsigned char 
  4127 ;;  charSwitchLS    1   14[BANK0 ] unsigned char 
  4128 ;;  charSwitchST    1   15[BANK0 ] unsigned char 
  4129 ;;  chDimmerSpee    1   16[BANK0 ] unsigned char 
  4130 ;;  chDimmerSpee    1   17[BANK0 ] unsigned char 
  4131 ;;  charParental    1   18[BANK0 ] unsigned char 
  4132 ;;  charFinalFra    1   19[BANK0 ] unsigned char 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  charSwitchMS    1   26[BANK0 ] unsigned char 
  4135 ;;  integerSwitc    2   35[BANK0 ] int 
  4136 ;;  integerSwitc    2   33[BANK0 ] int 
  4137 ;;  currentState    2   31[BANK0 ] int 
  4138 ;;  dimmerSpeedS    2   29[BANK0 ] unsigned char [2]
  4139 ;;  switchNumber    2   27[BANK0 ] unsigned char [2]
  4140 ;;  integerSpeed    2   24[BANK0 ] int 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4150 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  4151 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0
  4152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4153 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0
  4154 ;;Total ram usage:       23 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    4
  4157 ;; This function calls:
  4158 ;;		_atoi
  4159 ;;		_sendAcknowledgment
  4160 ;;		_send_Response_To_Touch
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _applianceControl
  4168  0130                     _applianceControl:	
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4172                           ;applianceControl@charSwitchMSB stored from wreg
  4173  0130  0020               	movlb	0	; select bank0
  4174  0131  00BA               	movwf	applianceControl@charSwitchMSB
  4175                           
  4176                           ;application.h: 5: int integerSwitchNumber = 0;
  4177  0132  01C1               	clrf	applianceControl@integerSwitchNumber
  4178  0133  01C2               	clrf	applianceControl@integerSwitchNumber+1
  4179                           
  4180                           ;application.h: 6: int integerSwitchState = 0;
  4181  0134  01C3               	clrf	applianceControl@integerSwitchState
  4182  0135  01C4               	clrf	applianceControl@integerSwitchState+1
  4183                           
  4184                           ;application.h: 7: int integerSpeed = 0;
  4185  0136  01B8               	clrf	applianceControl@integerSpeed
  4186  0137  01B9               	clrf	applianceControl@integerSpeed+1
  4187                           
  4188                           ;application.h: 8: int currentStateBufferPositions=0;
  4189  0138  01BF               	clrf	applianceControl@currentStateBufferPositions
  4190  0139  01C0               	clrf	applianceControl@currentStateBufferPositions+1
  4191                           
  4192                           ;application.h: 12: char switchNumberStringBuffer[2]="#";
  4193  013A  0021               	movlb	1	; select bank1
  4194  013B  0843               	movf	(applianceControl@F3748+1)^(0+128),w
  4195  013C  0020               	movlb	0	; select bank0
  4196  013D  00BC               	movwf	applianceControl@switchNumberStringBuffer+1
  4197  013E  0021               	movlb	1	; select bank1
  4198  013F  0842               	movf	applianceControl@F3748^(0+128),w
  4199  0140  0020               	movlb	0	; select bank0
  4200  0141  00BB               	movwf	applianceControl@switchNumberStringBuffer
  4201                           
  4202                           ;application.h: 13: char dimmerSpeedStringBuffer[2]="#";
  4203  0142  0021               	movlb	1	; select bank1
  4204  0143  0841               	movf	(applianceControl@F3750+1)^(0+128),w
  4205  0144  0020               	movlb	0	; select bank0
  4206  0145  00BE               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  4207  0146  0021               	movlb	1	; select bank1
  4208  0147  0840               	movf	applianceControl@F3750^(0+128),w
  4209  0148  0020               	movlb	0	; select bank0
  4210  0149  00BD               	movwf	applianceControl@dimmerSpeedStringBuffer
  4211                           
  4212                           ;application.h: 15: switchNumberStringBuffer[0]=charSwitchMSB;
  4213  014A  083A               	movf	applianceControl@charSwitchMSB,w
  4214  014B  00B4               	movwf	??_applianceControl
  4215  014C  0834               	movf	??_applianceControl,w
  4216  014D  00BB               	movwf	applianceControl@switchNumberStringBuffer
  4217                           
  4218                           ;application.h: 16: switchNumberStringBuffer[1]=charSwitchLSB;
  4219  014E  082E               	movf	applianceControl@charSwitchLSB,w
  4220  014F  00B4               	movwf	??_applianceControl
  4221  0150  0834               	movf	??_applianceControl,w
  4222  0151  00BC               	movwf	applianceControl@switchNumberStringBuffer+1
  4223                           
  4224                           ;application.h: 17: integerSwitchNumber = atoi(switchNumberStringBuffer);
  4225  0152  303B               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  4226  0153  3188  2040  3181   	fcall	_atoi
  4227  0156  0020               	movlb	0	; select bank0
  4228  0157  0827               	movf	?_atoi+1,w
  4229  0158  00C2               	movwf	applianceControl@integerSwitchNumber+1
  4230  0159  0826               	movf	?_atoi,w
  4231  015A  00C1               	movwf	applianceControl@integerSwitchNumber
  4232                           
  4233                           ;application.h: 21: integerSwitchState = charSwitchSTATE-'0';
  4234  015B  082F               	movf	applianceControl@charSwitchSTATE,w
  4235  015C  3ED0               	addlw	208
  4236  015D  00C3               	movwf	applianceControl@integerSwitchState
  4237  015E  30FF               	movlw	255
  4238  015F  1803               	skipnc
  4239  0160  3000               	movlw	0
  4240  0161  00C4               	movwf	applianceControl@integerSwitchState+1
  4241                           
  4242                           ;application.h: 24: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  4243  0162  0830               	movf	applianceControl@chDimmerSpeedMSB,w
  4244  0163  00B4               	movwf	??_applianceControl
  4245  0164  0834               	movf	??_applianceControl,w
  4246  0165  00BD               	movwf	applianceControl@dimmerSpeedStringBuffer
  4247                           
  4248                           ;application.h: 25: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  4249  0166  0831               	movf	applianceControl@chDimmerSpeedLSB,w
  4250  0167  00B4               	movwf	??_applianceControl
  4251  0168  0834               	movf	??_applianceControl,w
  4252  0169  00BE               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  4253                           
  4254                           ;application.h: 26: integerSpeed = atoi(dimmerSpeedStringBuffer);
  4255  016A  303D               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  4256  016B  3188  2040  3181   	fcall	_atoi
  4257  016E  0020               	movlb	0	; select bank0
  4258  016F  0827               	movf	?_atoi+1,w
  4259  0170  00B9               	movwf	applianceControl@integerSpeed+1
  4260  0171  0826               	movf	?_atoi,w
  4261  0172  00B8               	movwf	applianceControl@integerSpeed
  4262                           
  4263                           ;application.h: 30: parentalLockBuffer[integerSwitchNumber] = charParentalControl;
  4264  0173  0832               	movf	applianceControl@charParentalControl,w
  4265  0174  00B4               	movwf	??_applianceControl
  4266  0175  0841               	movf	applianceControl@integerSwitchNumber,w
  4267  0176  3EC0               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  4268  0177  0086               	movwf	6
  4269  0178  3001               	movlw	1	; select bank3/4
  4270  0179  0087               	movwf	7
  4271  017A  0834               	movf	??_applianceControl,w
  4272  017B  0081               	movwf	1
  4273                           
  4274                           ;application.h: 33: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuffer[inte
      +                          gerSwitchNumber];
  4275  017C  0841               	movf	applianceControl@integerSwitchNumber,w
  4276  017D  3EC0               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  4277  017E  0086               	movwf	6
  4278  017F  3001               	movlw	1	; select bank3/4
  4279  0180  0087               	movwf	7
  4280  0181  0801               	movf	1,w
  4281  0182  00B4               	movwf	??_applianceControl
  4282  0183  0841               	movf	applianceControl@integerSwitchNumber,w
  4283  0184  3EA0               	addlw	(low (_copy_parentalLockBuffer| 0))& (0+255)
  4284  0185  0086               	movwf	6
  4285  0186  0187               	clrf	7
  4286  0187  0834               	movf	??_applianceControl,w
  4287  0188  0081               	movwf	1
  4288                           
  4289                           ;application.h: 38: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5);
  4290  0189  0842               	movf	applianceControl@integerSwitchNumber+1,w
  4291  018A  00B5               	movwf	??_applianceControl+1
  4292  018B  0841               	movf	applianceControl@integerSwitchNumber,w
  4293  018C  00B4               	movwf	??_applianceControl
  4294  018D  35B4               	lslf	??_applianceControl,f
  4295  018E  0DB5               	rlf	??_applianceControl+1,f
  4296  018F  35B4               	lslf	??_applianceControl,f
  4297  0190  0DB5               	rlf	??_applianceControl+1,f
  4298  0191  0834               	movf	??_applianceControl,w
  4299  0192  3EFC               	addlw	252
  4300  0193  00BF               	movwf	applianceControl@currentStateBufferPositions
  4301  0194  30FF               	movlw	255
  4302  0195  3D35               	addwfc	??_applianceControl+1,w
  4303  0196  00C0               	movwf	applianceControl@currentStateBufferPositions+1
  4304                           
  4305                           ;application.h: 39: currentStateBuffer[currentStateBufferPositions++] = 'G';
  4306  0197  306E               	movlw	110
  4307  0198  00B4               	movwf	??_applianceControl
  4308  0199  3022               	movlw	34
  4309  019A  00B5               	movwf	??_applianceControl+1
  4310  019B  083F               	movf	applianceControl@currentStateBufferPositions,w
  4311  019C  0734               	addwf	??_applianceControl,w
  4312  019D  00B6               	movwf	??_applianceControl+2
  4313  019E  0840               	movf	applianceControl@currentStateBufferPositions+1,w
  4314  019F  3D35               	addwfc	??_applianceControl+1,w
  4315  01A0  00B7               	movwf	??_applianceControl+3
  4316  01A1  0836               	movf	??_applianceControl+2,w
  4317  01A2  0086               	movwf	6
  4318  01A3  0837               	movf	??_applianceControl+3,w
  4319  01A4  0087               	movwf	7
  4320  01A5  3047               	movlw	71
  4321  01A6  0081               	movwf	1
  4322  01A7  3001               	movlw	1
  4323  01A8  07BF               	addwf	applianceControl@currentStateBufferPositions,f
  4324  01A9  3000               	movlw	0
  4325  01AA  3DC0               	addwfc	applianceControl@currentStateBufferPositions+1,f
  4326                           
  4327                           ;application.h: 40: currentStateBuffer[currentStateBufferPositions++] = charSwitchSTATE;
  4328  01AB  306E               	movlw	110
  4329  01AC  00B4               	movwf	??_applianceControl
  4330  01AD  3022               	movlw	34
  4331  01AE  00B5               	movwf	??_applianceControl+1
  4332  01AF  083F               	movf	applianceControl@currentStateBufferPositions,w
  4333  01B0  0734               	addwf	??_applianceControl,w
  4334  01B1  00B6               	movwf	??_applianceControl+2
  4335  01B2  0840               	movf	applianceControl@currentStateBufferPositions+1,w
  4336  01B3  3D35               	addwfc	??_applianceControl+1,w
  4337  01B4  00B7               	movwf	??_applianceControl+3
  4338  01B5  0836               	movf	??_applianceControl+2,w
  4339  01B6  0086               	movwf	6
  4340  01B7  0837               	movf	??_applianceControl+3,w
  4341  01B8  0087               	movwf	7
  4342  01B9  082F               	movf	applianceControl@charSwitchSTATE,w
  4343  01BA  0081               	movwf	1
  4344  01BB  3001               	movlw	1
  4345  01BC  07BF               	addwf	applianceControl@currentStateBufferPositions,f
  4346  01BD  3000               	movlw	0
  4347  01BE  3DC0               	addwfc	applianceControl@currentStateBufferPositions+1,f
  4348                           
  4349                           ;application.h: 41: currentStateBuffer[currentStateBufferPositions++] = charSwitchMSB;
  4350  01BF  306E               	movlw	110
  4351  01C0  00B4               	movwf	??_applianceControl
  4352  01C1  3022               	movlw	34
  4353  01C2  00B5               	movwf	??_applianceControl+1
  4354  01C3  083F               	movf	applianceControl@currentStateBufferPositions,w
  4355  01C4  0734               	addwf	??_applianceControl,w
  4356  01C5  00B6               	movwf	??_applianceControl+2
  4357  01C6  0840               	movf	applianceControl@currentStateBufferPositions+1,w
  4358  01C7  3D35               	addwfc	??_applianceControl+1,w
  4359  01C8  00B7               	movwf	??_applianceControl+3
  4360  01C9  0836               	movf	??_applianceControl+2,w
  4361  01CA  0086               	movwf	6
  4362  01CB  0837               	movf	??_applianceControl+3,w
  4363  01CC  0087               	movwf	7
  4364  01CD  083A               	movf	applianceControl@charSwitchMSB,w
  4365  01CE  0081               	movwf	1
  4366  01CF  3001               	movlw	1
  4367  01D0  07BF               	addwf	applianceControl@currentStateBufferPositions,f
  4368  01D1  3000               	movlw	0
  4369  01D2  3DC0               	addwfc	applianceControl@currentStateBufferPositions+1,f
  4370                           
  4371                           ;application.h: 42: currentStateBuffer[currentStateBufferPositions] = charSwitchLSB;
  4372  01D3  306E               	movlw	110
  4373  01D4  00B4               	movwf	??_applianceControl
  4374  01D5  3022               	movlw	34
  4375  01D6  00B5               	movwf	??_applianceControl+1
  4376  01D7  083F               	movf	applianceControl@currentStateBufferPositions,w
  4377  01D8  0734               	addwf	??_applianceControl,w
  4378  01D9  00B6               	movwf	??_applianceControl+2
  4379  01DA  0840               	movf	applianceControl@currentStateBufferPositions+1,w
  4380  01DB  3D35               	addwfc	??_applianceControl+1,w
  4381  01DC  00B7               	movwf	??_applianceControl+3
  4382  01DD  0836               	movf	??_applianceControl+2,w
  4383  01DE  0086               	movwf	6
  4384  01DF  0837               	movf	??_applianceControl+3,w
  4385  01E0  0087               	movwf	7
  4386  01E1  082E               	movf	applianceControl@charSwitchLSB,w
  4387  01E2  0081               	movwf	1
  4388                           
  4389                           ;application.h: 44: currentStateBufferPositions-=3;
  4390  01E3  30FD               	movlw	253
  4391  01E4  07BF               	addwf	applianceControl@currentStateBufferPositions,f
  4392  01E5  30FF               	movlw	255
  4393  01E6  3DC0               	addwfc	applianceControl@currentStateBufferPositions+1,f
  4394                           
  4395                           ;application.h: 45: if(charFinalFrameState=='1')
  4396  01E7  3031               	movlw	49
  4397  01E8  0633               	xorwf	applianceControl@charFinalFrameState,w
  4398  01E9  1D03               	btfss	3,2
  4399  01EA  2C93               	goto	l3288
  4400                           
  4401                           ;application.h: 46: {
  4402                           ;application.h: 47: sendAcknowledgment(currentStateBuffer+currentStateBufferPositions);
  4403  01EB  306E               	movlw	110
  4404  01EC  00B4               	movwf	??_applianceControl
  4405  01ED  3022               	movlw	34
  4406  01EE  00B5               	movwf	??_applianceControl+1
  4407  01EF  083F               	movf	applianceControl@currentStateBufferPositions,w
  4408  01F0  0734               	addwf	??_applianceControl,w
  4409  01F1  00A0               	movwf	sendAcknowledgment@currentStateBuffer
  4410  01F2  0840               	movf	applianceControl@currentStateBufferPositions+1,w
  4411  01F3  3D35               	addwfc	??_applianceControl+1,w
  4412  01F4  00A1               	movwf	sendAcknowledgment@currentStateBuffer+1
  4413  01F5  3196  2664  3181   	fcall	_sendAcknowledgment
  4414                           
  4415                           ;application.h: 48: if(integerSwitchNumber != 7){
  4416  01F8  3007               	movlw	7
  4417  01F9  0020               	movlb	0	; select bank0
  4418  01FA  0641               	xorwf	applianceControl@integerSwitchNumber,w
  4419  01FB  0442               	iorwf	applianceControl@integerSwitchNumber+1,w
  4420  01FC  1903               	btfsc	3,2
  4421  01FD  2A61               	goto	l3182
  4422                           
  4423                           ;application.h: 49: _delay((unsigned long)((5)*(16000000/4000.0)));
  4424  01FE  301A               	movlw	26
  4425  01FF  0020               	movlb	0	; select bank0
  4426  0200  00B4               	movwf	??_applianceControl
  4427  0201  30F8               	movlw	248
  4428  0202                     u5847:	
  4429  0202  0B89               	decfsz	9,f
  4430  0203  2A02               	goto	u5847
  4431  0204  0BB4               	decfsz	??_applianceControl,f
  4432  0205  2A02               	goto	u5847
  4433  0206  0000               	nop
  4434                           
  4435                           ;application.h: 50: TX2REG = '(' ;
  4436  0207  3028               	movlw	40
  4437  0208  0029               	movlb	9	; select bank9
  4438  0209  0092               	movwf	18	;volatile
  4439                           
  4440                           ;application.h: 51: _delay((unsigned long)((1)*(16000000/4000.0)));
  4441  020A  3006               	movlw	6
  4442  020B  0020               	movlb	0	; select bank0
  4443  020C  00B4               	movwf	??_applianceControl
  4444  020D  3030               	movlw	48
  4445  020E                     u5857:	
  4446  020E  0B89               	decfsz	9,f
  4447  020F  2A0E               	goto	u5857
  4448  0210  0BB4               	decfsz	??_applianceControl,f
  4449  0211  2A0E               	goto	u5857
  4450  0212  0000               	nop
  4451                           
  4452                           ;application.h: 52: TX2REG = 'f' ;
  4453  0213  3066               	movlw	102
  4454  0214  0029               	movlb	9	; select bank9
  4455  0215  0092               	movwf	18	;volatile
  4456                           
  4457                           ;application.h: 53: _delay((unsigned long)((1)*(16000000/4000.0)));
  4458  0216  3006               	movlw	6
  4459  0217  0020               	movlb	0	; select bank0
  4460  0218  00B4               	movwf	??_applianceControl
  4461  0219  3030               	movlw	48
  4462  021A                     u5867:	
  4463  021A  0B89               	decfsz	9,f
  4464  021B  2A1A               	goto	u5867
  4465  021C  0BB4               	decfsz	??_applianceControl,f
  4466  021D  2A1A               	goto	u5867
  4467  021E  0000               	nop
  4468                           
  4469                           ;application.h: 54: TX2REG =charSwitchLSB + 16 ;
  4470  021F  0020               	movlb	0	; select bank0
  4471  0220  082E               	movf	applianceControl@charSwitchLSB,w
  4472  0221  3E10               	addlw	16
  4473  0222  0029               	movlb	9	; select bank9
  4474  0223  0092               	movwf	18	;volatile
  4475                           
  4476                           ;application.h: 55: _delay((unsigned long)((1)*(16000000/4000.0)));
  4477  0224  3006               	movlw	6
  4478  0225  0020               	movlb	0	; select bank0
  4479  0226  00B4               	movwf	??_applianceControl
  4480  0227  3030               	movlw	48
  4481  0228                     u5877:	
  4482  0228  0B89               	decfsz	9,f
  4483  0229  2A28               	goto	u5877
  4484  022A  0BB4               	decfsz	??_applianceControl,f
  4485  022B  2A28               	goto	u5877
  4486  022C  0000               	nop
  4487                           
  4488                           ;application.h: 56: TX2REG=charSwitchSTATE;
  4489  022D  0020               	movlb	0	; select bank0
  4490  022E  082F               	movf	applianceControl@charSwitchSTATE,w
  4491  022F  0029               	movlb	9	; select bank9
  4492  0230  0092               	movwf	18	;volatile
  4493                           
  4494                           ;application.h: 57: _delay((unsigned long)((1)*(16000000/4000.0)));
  4495  0231  3006               	movlw	6
  4496  0232  0020               	movlb	0	; select bank0
  4497  0233  00B4               	movwf	??_applianceControl
  4498  0234  3030               	movlw	48
  4499  0235                     u5887:	
  4500  0235  0B89               	decfsz	9,f
  4501  0236  2A35               	goto	u5887
  4502  0237  0BB4               	decfsz	??_applianceControl,f
  4503  0238  2A35               	goto	u5887
  4504  0239  0000               	nop
  4505                           
  4506                           ;application.h: 58: TX2REG='0';
  4507  023A  3030               	movlw	48
  4508  023B  0029               	movlb	9	; select bank9
  4509  023C  0092               	movwf	18	;volatile
  4510                           
  4511                           ;application.h: 59: _delay((unsigned long)((1)*(16000000/4000.0)));
  4512  023D  3006               	movlw	6
  4513  023E  0020               	movlb	0	; select bank0
  4514  023F  00B4               	movwf	??_applianceControl
  4515  0240  3030               	movlw	48
  4516  0241                     u5897:	
  4517  0241  0B89               	decfsz	9,f
  4518  0242  2A41               	goto	u5897
  4519  0243  0BB4               	decfsz	??_applianceControl,f
  4520  0244  2A41               	goto	u5897
  4521  0245  0000               	nop
  4522                           
  4523                           ;application.h: 60: TX2REG='0';
  4524  0246  3030               	movlw	48
  4525  0247  0029               	movlb	9	; select bank9
  4526  0248  0092               	movwf	18	;volatile
  4527                           
  4528                           ;application.h: 61: _delay((unsigned long)((1)*(16000000/4000.0)));
  4529  0249  3006               	movlw	6
  4530  024A  0020               	movlb	0	; select bank0
  4531  024B  00B4               	movwf	??_applianceControl
  4532  024C  3030               	movlw	48
  4533  024D                     u5907:	
  4534  024D  0B89               	decfsz	9,f
  4535  024E  2A4D               	goto	u5907
  4536  024F  0BB4               	decfsz	??_applianceControl,f
  4537  0250  2A4D               	goto	u5907
  4538  0251  0000               	nop
  4539                           
  4540                           ;application.h: 62: TX2REG='0';
  4541  0252  3030               	movlw	48
  4542  0253  0029               	movlb	9	; select bank9
  4543  0254  0092               	movwf	18	;volatile
  4544                           
  4545                           ;application.h: 63: _delay((unsigned long)((1)*(16000000/4000.0)));
  4546  0255  3006               	movlw	6
  4547  0256  0020               	movlb	0	; select bank0
  4548  0257  00B4               	movwf	??_applianceControl
  4549  0258  3030               	movlw	48
  4550  0259                     u5917:	
  4551  0259  0B89               	decfsz	9,f
  4552  025A  2A59               	goto	u5917
  4553  025B  0BB4               	decfsz	??_applianceControl,f
  4554  025C  2A59               	goto	u5917
  4555  025D  0000               	nop
  4556                           
  4557                           ;application.h: 64: TX2REG=')';
  4558  025E  3029               	movlw	41
  4559  025F  0029               	movlb	9	; select bank9
  4560  0260  0092               	movwf	18	;volatile
  4561  0261                     l3182:	
  4562                           
  4563                           ;application.h: 65: }
  4564                           ;application.h: 66: if(integerSwitchNumber == 7) {
  4565  0261  3007               	movlw	7
  4566  0262  0020               	movlb	0	; select bank0
  4567  0263  0641               	xorwf	applianceControl@integerSwitchNumber,w
  4568  0264  0442               	iorwf	applianceControl@integerSwitchNumber+1,w
  4569  0265  1903               	btfsc	3,2
  4570  0266  2ACB               	goto	l3210
  4571  0267  2C93               	goto	l3288
  4572  0268                     l3186:	
  4573                           ;application.h: 69: case 0:
  4574                           
  4575                           ;application.h: 68: switch(integerSwitchState){
  4576                           
  4577                           
  4578                           ;application.h: 70: {
  4579                           ;application.h: 71: send_Response_To_Touch('P','0','0');
  4580  0268  3030               	movlw	48
  4581  0269  00B4               	movwf	??_applianceControl
  4582  026A  0834               	movf	??_applianceControl,w
  4583  026B  00A0               	movwf	send_Response_To_Touch@switch_status
  4584  026C  3030               	movlw	48
  4585  026D  00B5               	movwf	??_applianceControl+1
  4586  026E  0835               	movf	??_applianceControl+1,w
  4587  026F  00A1               	movwf	send_Response_To_Touch@fan_speed
  4588  0270  3050               	movlw	80
  4589  0271  3197  279A  3181   	fcall	_send_Response_To_Touch
  4590                           
  4591                           ;application.h: 72: }
  4592                           ;application.h: 73: break;
  4593  0274  2C93               	goto	l3288
  4594  0275                     l3188:	
  4595                           ;application.h: 74: case 1: {
  4596                           
  4597                           
  4598                           ;application.h: 75: if(chDimmerSpeedMSB == '0'){
  4599  0275  3030               	movlw	48
  4600  0276  0020               	movlb	0	; select bank0
  4601  0277  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4602  0278  1D03               	btfss	3,2
  4603  0279  2A86               	goto	l3192
  4604                           
  4605                           ;application.h: 77: send_Response_To_Touch('P','1','1');
  4606  027A  3031               	movlw	49
  4607  027B  00B4               	movwf	??_applianceControl
  4608  027C  0834               	movf	??_applianceControl,w
  4609  027D  00A0               	movwf	send_Response_To_Touch@switch_status
  4610  027E  3031               	movlw	49
  4611  027F  00B5               	movwf	??_applianceControl+1
  4612  0280  0835               	movf	??_applianceControl+1,w
  4613  0281  00A1               	movwf	send_Response_To_Touch@fan_speed
  4614  0282  3050               	movlw	80
  4615  0283  3197  279A  3181   	fcall	_send_Response_To_Touch
  4616  0286                     l3192:	
  4617                           
  4618                           ;application.h: 78: }
  4619                           ;application.h: 80: if(chDimmerSpeedMSB == '2')
  4620  0286  3032               	movlw	50
  4621  0287  0020               	movlb	0	; select bank0
  4622  0288  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4623  0289  1D03               	btfss	3,2
  4624  028A  2A97               	goto	l3196
  4625                           
  4626                           ;application.h: 81: {
  4627                           ;application.h: 82: send_Response_To_Touch('P','1','1');
  4628  028B  3031               	movlw	49
  4629  028C  00B4               	movwf	??_applianceControl
  4630  028D  0834               	movf	??_applianceControl,w
  4631  028E  00A0               	movwf	send_Response_To_Touch@switch_status
  4632  028F  3031               	movlw	49
  4633  0290  00B5               	movwf	??_applianceControl+1
  4634  0291  0835               	movf	??_applianceControl+1,w
  4635  0292  00A1               	movwf	send_Response_To_Touch@fan_speed
  4636  0293  3050               	movlw	80
  4637  0294  3197  279A  3181   	fcall	_send_Response_To_Touch
  4638  0297                     l3196:	
  4639                           
  4640                           ;application.h: 83: }
  4641                           ;application.h: 85: if(chDimmerSpeedMSB == '5')
  4642  0297  3035               	movlw	53
  4643  0298  0020               	movlb	0	; select bank0
  4644  0299  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4645  029A  1D03               	btfss	3,2
  4646  029B  2AA8               	goto	l3200
  4647                           
  4648                           ;application.h: 86: {
  4649                           ;application.h: 87: send_Response_To_Touch('P','1','2');
  4650  029C  3031               	movlw	49
  4651  029D  00B4               	movwf	??_applianceControl
  4652  029E  0834               	movf	??_applianceControl,w
  4653  029F  00A0               	movwf	send_Response_To_Touch@switch_status
  4654  02A0  3032               	movlw	50
  4655  02A1  00B5               	movwf	??_applianceControl+1
  4656  02A2  0835               	movf	??_applianceControl+1,w
  4657  02A3  00A1               	movwf	send_Response_To_Touch@fan_speed
  4658  02A4  3050               	movlw	80
  4659  02A5  3197  279A  3181   	fcall	_send_Response_To_Touch
  4660  02A8                     l3200:	
  4661                           
  4662                           ;application.h: 88: }
  4663                           ;application.h: 89: if(chDimmerSpeedMSB == '7')
  4664  02A8  3037               	movlw	55
  4665  02A9  0020               	movlb	0	; select bank0
  4666  02AA  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4667  02AB  1D03               	btfss	3,2
  4668  02AC  2AB9               	goto	l3204
  4669                           
  4670                           ;application.h: 90: {
  4671                           ;application.h: 91: send_Response_To_Touch('P','1','3');
  4672  02AD  3031               	movlw	49
  4673  02AE  00B4               	movwf	??_applianceControl
  4674  02AF  0834               	movf	??_applianceControl,w
  4675  02B0  00A0               	movwf	send_Response_To_Touch@switch_status
  4676  02B1  3033               	movlw	51
  4677  02B2  00B5               	movwf	??_applianceControl+1
  4678  02B3  0835               	movf	??_applianceControl+1,w
  4679  02B4  00A1               	movwf	send_Response_To_Touch@fan_speed
  4680  02B5  3050               	movlw	80
  4681  02B6  3197  279A  3181   	fcall	_send_Response_To_Touch
  4682  02B9                     l3204:	
  4683                           
  4684                           ;application.h: 92: }
  4685                           ;application.h: 93: if(chDimmerSpeedMSB == '9')
  4686  02B9  3039               	movlw	57
  4687  02BA  0020               	movlb	0	; select bank0
  4688  02BB  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4689  02BC  1D03               	btfss	3,2
  4690  02BD  2C93               	goto	l3288
  4691                           
  4692                           ;application.h: 94: {
  4693                           ;application.h: 95: send_Response_To_Touch('P','1','4');
  4694  02BE  3031               	movlw	49
  4695  02BF  00B4               	movwf	??_applianceControl
  4696  02C0  0834               	movf	??_applianceControl,w
  4697  02C1  00A0               	movwf	send_Response_To_Touch@switch_status
  4698  02C2  3034               	movlw	52
  4699  02C3  00B5               	movwf	??_applianceControl+1
  4700  02C4  0835               	movf	??_applianceControl+1,w
  4701  02C5  00A1               	movwf	send_Response_To_Touch@fan_speed
  4702  02C6  3050               	movlw	80
  4703  02C7  3197  279A  3181   	fcall	_send_Response_To_Touch
  4704                           
  4705                           ;application.h: 101: }
  4706                           
  4707                           ;application.h: 100: break;
  4708                           
  4709                           ;application.h: 99: default:
  4710                           
  4711                           ;application.h: 96: }
  4712                           ;application.h: 97: }
  4713                           ;application.h: 98: break;
  4714  02CA  2C93               	goto	l3288
  4715  02CB                     l3210:	
  4716                           
  4717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4718                           ; Switch size 1, requested type "space"
  4719                           ; Number of cases is 1, Range of values is 0 to 0
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte            4     3 (average)
  4723                           ; direct_byte            8     6 (fixed)
  4724                           ; jumptable            260     6 (fixed)
  4725                           ;	Chosen strategy is simple_byte
  4726  02CB  0020               	movlb	0	; select bank0
  4727  02CC  0844               	movf	applianceControl@integerSwitchState+1,w
  4728  02CD  3A00               	xorlw	0	; case 0
  4729  02CE  1903               	skipnz
  4730  02CF  2AD1               	goto	l4018
  4731  02D0  2C93               	goto	l3288
  4732  02D1                     l4018:	
  4733                           
  4734                           ; Switch size 1, requested type "space"
  4735                           ; Number of cases is 2, Range of values is 0 to 1
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte            7     4 (average)
  4739                           ; direct_byte           10     6 (fixed)
  4740                           ; jumptable            260     6 (fixed)
  4741                           ;	Chosen strategy is simple_byte
  4742  02D1  0843               	movf	applianceControl@integerSwitchState,w
  4743  02D2  3A00               	xorlw	0	; case 0
  4744  02D3  1903               	skipnz
  4745  02D4  2A68               	goto	l3186
  4746  02D5  3A01               	xorlw	1	; case 1
  4747  02D6  1903               	skipnz
  4748  02D7  2A75               	goto	l3188
  4749  02D8  2C93               	goto	l3288
  4750                           
  4751                           ;application.h: 103: }
  4752                           ;application.h: 105: }
  4753                           ;application.h: 110: switch(integerSwitchNumber){
  4754  02D9  2C93               	goto	l3288
  4755  02DA                     l237:	
  4756                           ;application.h: 111: case 1:
  4757                           
  4758                           
  4759                           ;application.h: 112: {
  4760                           ;application.h: 115: RB1 = integerSwitchState;
  4761  02DA  1C43               	btfss	applianceControl@integerSwitchState,0
  4762  02DB  2ADF               	goto	u3650
  4763  02DC  0020               	movlb	0	; select bank0
  4764  02DD  148D               	bsf	13,1	;volatile
  4765  02DE  0008               	return
  4766  02DF                     u3650:	
  4767  02DF  0020               	movlb	0	; select bank0
  4768  02E0  108D               	bcf	13,1	;volatile
  4769                           
  4770                           ;application.h: 118: }
  4771                           ;application.h: 119: break;
  4772  02E1  0008               	return
  4773  02E2                     l239:	
  4774                           ;application.h: 120: case 2:
  4775                           
  4776                           
  4777                           ;application.h: 121: {
  4778                           ;application.h: 125: RC1 = integerSwitchState;
  4779  02E2  1C43               	btfss	applianceControl@integerSwitchState,0
  4780  02E3  2AE7               	goto	u3670
  4781  02E4  0020               	movlb	0	; select bank0
  4782  02E5  148E               	bsf	14,1	;volatile
  4783  02E6  0008               	return
  4784  02E7                     u3670:	
  4785  02E7  0020               	movlb	0	; select bank0
  4786  02E8  108E               	bcf	14,1	;volatile
  4787                           
  4788                           ;application.h: 127: break;
  4789  02E9  0008               	return
  4790  02EA                     l240:	
  4791                           ;application.h: 128: }
  4792                           ;application.h: 129: case 3:
  4793                           
  4794                           
  4795                           ;application.h: 130: {
  4796                           ;application.h: 134: RA0 = integerSwitchState;
  4797  02EA  1C43               	btfss	applianceControl@integerSwitchState,0
  4798  02EB  2AEF               	goto	u3690
  4799  02EC  0020               	movlb	0	; select bank0
  4800  02ED  140C               	bsf	12,0	;volatile
  4801  02EE  0008               	return
  4802  02EF                     u3690:	
  4803  02EF  0020               	movlb	0	; select bank0
  4804  02F0  100C               	bcf	12,0	;volatile
  4805                           
  4806                           ;application.h: 137: }
  4807                           ;application.h: 138: break;
  4808  02F1  0008               	return
  4809  02F2                     l241:	
  4810                           ;application.h: 139: case 4:
  4811                           
  4812                           
  4813                           ;application.h: 140: {
  4814                           ;application.h: 143: RF1 = integerSwitchState;
  4815  02F2  1C43               	btfss	applianceControl@integerSwitchState,0
  4816  02F3  2AF7               	goto	u3710
  4817  02F4  0025               	movlb	5	; select bank5
  4818  02F5  148C               	bsf	12,1	;volatile
  4819  02F6  0008               	return
  4820  02F7                     u3710:	
  4821  02F7  0025               	movlb	5	; select bank5
  4822  02F8  108C               	bcf	12,1	;volatile
  4823                           
  4824                           ;application.h: 145: }
  4825                           ;application.h: 146: break;
  4826  02F9  0008               	return
  4827  02FA                     l242:	
  4828                           ;application.h: 147: case 5:
  4829                           
  4830                           
  4831                           ;application.h: 148: {
  4832                           ;application.h: 150: RA3 = integerSwitchState;
  4833  02FA  1C43               	btfss	applianceControl@integerSwitchState,0
  4834  02FB  2AFF               	goto	u3730
  4835  02FC  0020               	movlb	0	; select bank0
  4836  02FD  158C               	bsf	12,3	;volatile
  4837  02FE  0008               	return
  4838  02FF                     u3730:	
  4839  02FF  0020               	movlb	0	; select bank0
  4840  0300  118C               	bcf	12,3	;volatile
  4841                           
  4842                           ;application.h: 151: }
  4843                           ;application.h: 152: break;
  4844  0301  0008               	return
  4845  0302                     l243:	
  4846                           ;application.h: 154: case 6:
  4847                           
  4848                           
  4849                           ;application.h: 155: {
  4850                           ;application.h: 156: RA1 = integerSwitchState;
  4851  0302  1C43               	btfss	applianceControl@integerSwitchState,0
  4852  0303  2B07               	goto	u3750
  4853  0304  0020               	movlb	0	; select bank0
  4854  0305  148C               	bsf	12,1	;volatile
  4855  0306  0008               	return
  4856  0307                     u3750:	
  4857  0307  0020               	movlb	0	; select bank0
  4858  0308  108C               	bcf	12,1	;volatile
  4859                           
  4860                           ;application.h: 157: }
  4861                           ;application.h: 158: break;
  4862  0309  0008               	return
  4863  030A                     l3212:	
  4864                           ;application.h: 159: case 7:
  4865                           
  4866                           
  4867                           ;application.h: 160: {
  4868                           ;application.h: 161: if(integerSwitchState == 0)
  4869  030A  0843               	movf	applianceControl@integerSwitchState,w
  4870  030B  0444               	iorwf	applianceControl@integerSwitchState+1,w
  4871  030C  1D03               	btfss	3,2
  4872  030D  2B4A               	goto	l3224
  4873                           
  4874                           ;application.h: 162: {
  4875                           ;application.h: 164: RB4=0;
  4876  030E  120D               	bcf	13,4	;volatile
  4877                           
  4878                           ;application.h: 165: _delay((unsigned long)((500)*(16000000/4000.0)));
  4879  030F  300B               	movlw	11
  4880  0310  0020               	movlb	0	; select bank0
  4881  0311  00B5               	movwf	??_applianceControl+1
  4882  0312  3026               	movlw	38
  4883  0313  00B4               	movwf	??_applianceControl
  4884  0314  305D               	movlw	93
  4885  0315                     u5927:	
  4886  0315  0B89               	decfsz	9,f
  4887  0316  2B15               	goto	u5927
  4888  0317  0BB4               	decfsz	??_applianceControl,f
  4889  0318  2B15               	goto	u5927
  4890  0319  0BB5               	decfsz	??_applianceControl+1,f
  4891  031A  2B15               	goto	u5927
  4892  031B  3200               	nop2
  4893                           
  4894                           ;application.h: 166: RB2=0;
  4895  031C  0020               	movlb	0	; select bank0
  4896  031D  110D               	bcf	13,2	;volatile
  4897                           
  4898                           ;application.h: 167: _delay((unsigned long)((500)*(16000000/4000.0)));
  4899  031E  300B               	movlw	11
  4900  031F  0020               	movlb	0	; select bank0
  4901  0320  00B5               	movwf	??_applianceControl+1
  4902  0321  3026               	movlw	38
  4903  0322  00B4               	movwf	??_applianceControl
  4904  0323  305D               	movlw	93
  4905  0324                     u5937:	
  4906  0324  0B89               	decfsz	9,f
  4907  0325  2B24               	goto	u5937
  4908  0326  0BB4               	decfsz	??_applianceControl,f
  4909  0327  2B24               	goto	u5937
  4910  0328  0BB5               	decfsz	??_applianceControl+1,f
  4911  0329  2B24               	goto	u5937
  4912  032A  3200               	nop2
  4913                           
  4914                           ;application.h: 168: RB0=0;
  4915  032B  0020               	movlb	0	; select bank0
  4916  032C  100D               	bcf	13,0	;volatile
  4917                           
  4918                           ;application.h: 169: _delay((unsigned long)((500)*(16000000/4000.0)));
  4919  032D  300B               	movlw	11
  4920  032E  0020               	movlb	0	; select bank0
  4921  032F  00B5               	movwf	??_applianceControl+1
  4922  0330  3026               	movlw	38
  4923  0331  00B4               	movwf	??_applianceControl
  4924  0332  305D               	movlw	93
  4925  0333                     u5947:	
  4926  0333  0B89               	decfsz	9,f
  4927  0334  2B33               	goto	u5947
  4928  0335  0BB4               	decfsz	??_applianceControl,f
  4929  0336  2B33               	goto	u5947
  4930  0337  0BB5               	decfsz	??_applianceControl+1,f
  4931  0338  2B33               	goto	u5947
  4932  0339  3200               	nop2
  4933                           
  4934                           ;application.h: 170: RA4 = 1;
  4935  033A  0020               	movlb	0	; select bank0
  4936  033B  160C               	bsf	12,4	;volatile
  4937                           
  4938                           ;application.h: 171: _delay((unsigned long)((500)*(16000000/4000.0)));
  4939  033C  300B               	movlw	11
  4940  033D  0020               	movlb	0	; select bank0
  4941  033E  00B5               	movwf	??_applianceControl+1
  4942  033F  3026               	movlw	38
  4943  0340  00B4               	movwf	??_applianceControl
  4944  0341  305D               	movlw	93
  4945  0342                     u5957:	
  4946  0342  0B89               	decfsz	9,f
  4947  0343  2B42               	goto	u5957
  4948  0344  0BB4               	decfsz	??_applianceControl,f
  4949  0345  2B42               	goto	u5957
  4950  0346  0BB5               	decfsz	??_applianceControl+1,f
  4951  0347  2B42               	goto	u5957
  4952  0348  3200               	nop2
  4953                           
  4954                           ;application.h: 172: }
  4955  0349  0008               	return
  4956  034A                     l3224:	
  4957                           
  4958                           ;application.h: 173: else if(integerSwitchState == 1)
  4959  034A  0020               	movlb	0	; select bank0
  4960  034B  0343               	decf	applianceControl@integerSwitchState,w
  4961  034C  0444               	iorwf	applianceControl@integerSwitchState+1,w
  4962  034D  1D03               	btfss	3,2
  4963  034E  0008               	return
  4964                           
  4965                           ;application.h: 174: {
  4966                           ;application.h: 175: if(chDimmerSpeedMSB == '0')
  4967  034F  3030               	movlw	48
  4968  0350  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  4969  0351  1D03               	btfss	3,2
  4970  0352  2B8F               	goto	l3238
  4971                           
  4972                           ;application.h: 176: {
  4973                           ;application.h: 178: RB4=0;
  4974  0353  120D               	bcf	13,4	;volatile
  4975                           
  4976                           ;application.h: 179: _delay((unsigned long)((500)*(16000000/4000.0)));
  4977  0354  300B               	movlw	11
  4978  0355  0020               	movlb	0	; select bank0
  4979  0356  00B5               	movwf	??_applianceControl+1
  4980  0357  3026               	movlw	38
  4981  0358  00B4               	movwf	??_applianceControl
  4982  0359  305D               	movlw	93
  4983  035A                     u5967:	
  4984  035A  0B89               	decfsz	9,f
  4985  035B  2B5A               	goto	u5967
  4986  035C  0BB4               	decfsz	??_applianceControl,f
  4987  035D  2B5A               	goto	u5967
  4988  035E  0BB5               	decfsz	??_applianceControl+1,f
  4989  035F  2B5A               	goto	u5967
  4990  0360  3200               	nop2
  4991                           
  4992                           ;application.h: 180: RB2=0;
  4993  0361  0020               	movlb	0	; select bank0
  4994  0362  110D               	bcf	13,2	;volatile
  4995                           
  4996                           ;application.h: 181: _delay((unsigned long)((500)*(16000000/4000.0)));
  4997  0363  300B               	movlw	11
  4998  0364  0020               	movlb	0	; select bank0
  4999  0365  00B5               	movwf	??_applianceControl+1
  5000  0366  3026               	movlw	38
  5001  0367  00B4               	movwf	??_applianceControl
  5002  0368  305D               	movlw	93
  5003  0369                     u5977:	
  5004  0369  0B89               	decfsz	9,f
  5005  036A  2B69               	goto	u5977
  5006  036B  0BB4               	decfsz	??_applianceControl,f
  5007  036C  2B69               	goto	u5977
  5008  036D  0BB5               	decfsz	??_applianceControl+1,f
  5009  036E  2B69               	goto	u5977
  5010  036F  3200               	nop2
  5011                           
  5012                           ;application.h: 182: RB0=0;
  5013  0370  0020               	movlb	0	; select bank0
  5014  0371  100D               	bcf	13,0	;volatile
  5015                           
  5016                           ;application.h: 183: _delay((unsigned long)((500)*(16000000/4000.0)));
  5017  0372  300B               	movlw	11
  5018  0373  0020               	movlb	0	; select bank0
  5019  0374  00B5               	movwf	??_applianceControl+1
  5020  0375  3026               	movlw	38
  5021  0376  00B4               	movwf	??_applianceControl
  5022  0377  305D               	movlw	93
  5023  0378                     u5987:	
  5024  0378  0B89               	decfsz	9,f
  5025  0379  2B78               	goto	u5987
  5026  037A  0BB4               	decfsz	??_applianceControl,f
  5027  037B  2B78               	goto	u5987
  5028  037C  0BB5               	decfsz	??_applianceControl+1,f
  5029  037D  2B78               	goto	u5987
  5030  037E  3200               	nop2
  5031                           
  5032                           ;application.h: 184: RA4 = 1;
  5033  037F  0020               	movlb	0	; select bank0
  5034  0380  160C               	bsf	12,4	;volatile
  5035                           
  5036                           ;application.h: 185: _delay((unsigned long)((500)*(16000000/4000.0)));
  5037  0381  300B               	movlw	11
  5038  0382  0020               	movlb	0	; select bank0
  5039  0383  00B5               	movwf	??_applianceControl+1
  5040  0384  3026               	movlw	38
  5041  0385  00B4               	movwf	??_applianceControl
  5042  0386  305D               	movlw	93
  5043  0387                     u5997:	
  5044  0387  0B89               	decfsz	9,f
  5045  0388  2B87               	goto	u5997
  5046  0389  0BB4               	decfsz	??_applianceControl,f
  5047  038A  2B87               	goto	u5997
  5048  038B  0BB5               	decfsz	??_applianceControl+1,f
  5049  038C  2B87               	goto	u5997
  5050  038D  3200               	nop2
  5051                           
  5052                           ;application.h: 186: }
  5053  038E  0008               	return
  5054  038F                     l3238:	
  5055                           
  5056                           ;application.h: 187: else if(chDimmerSpeedMSB == '2')
  5057  038F  3032               	movlw	50
  5058  0390  0020               	movlb	0	; select bank0
  5059  0391  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  5060  0392  1D03               	btfss	3,2
  5061  0393  2BD0               	goto	l3250
  5062                           
  5063                           ;application.h: 188: {
  5064                           ;application.h: 189: RB2=0;
  5065  0394  110D               	bcf	13,2	;volatile
  5066                           
  5067                           ;application.h: 190: _delay((unsigned long)((500)*(16000000/4000.0)));
  5068  0395  300B               	movlw	11
  5069  0396  0020               	movlb	0	; select bank0
  5070  0397  00B5               	movwf	??_applianceControl+1
  5071  0398  3026               	movlw	38
  5072  0399  00B4               	movwf	??_applianceControl
  5073  039A  305D               	movlw	93
  5074  039B                     u6007:	
  5075  039B  0B89               	decfsz	9,f
  5076  039C  2B9B               	goto	u6007
  5077  039D  0BB4               	decfsz	??_applianceControl,f
  5078  039E  2B9B               	goto	u6007
  5079  039F  0BB5               	decfsz	??_applianceControl+1,f
  5080  03A0  2B9B               	goto	u6007
  5081  03A1  3200               	nop2
  5082                           
  5083                           ;application.h: 191: RB0=0;
  5084  03A2  0020               	movlb	0	; select bank0
  5085  03A3  100D               	bcf	13,0	;volatile
  5086                           
  5087                           ;application.h: 192: _delay((unsigned long)((500)*(16000000/4000.0)));
  5088  03A4  300B               	movlw	11
  5089  03A5  0020               	movlb	0	; select bank0
  5090  03A6  00B5               	movwf	??_applianceControl+1
  5091  03A7  3026               	movlw	38
  5092  03A8  00B4               	movwf	??_applianceControl
  5093  03A9  305D               	movlw	93
  5094  03AA                     u6017:	
  5095  03AA  0B89               	decfsz	9,f
  5096  03AB  2BAA               	goto	u6017
  5097  03AC  0BB4               	decfsz	??_applianceControl,f
  5098  03AD  2BAA               	goto	u6017
  5099  03AE  0BB5               	decfsz	??_applianceControl+1,f
  5100  03AF  2BAA               	goto	u6017
  5101  03B0  3200               	nop2
  5102                           
  5103                           ;application.h: 193: RA4 = 1;
  5104  03B1  0020               	movlb	0	; select bank0
  5105  03B2  160C               	bsf	12,4	;volatile
  5106                           
  5107                           ;application.h: 194: _delay((unsigned long)((500)*(16000000/4000.0)));
  5108  03B3  300B               	movlw	11
  5109  03B4  0020               	movlb	0	; select bank0
  5110  03B5  00B5               	movwf	??_applianceControl+1
  5111  03B6  3026               	movlw	38
  5112  03B7  00B4               	movwf	??_applianceControl
  5113  03B8  305D               	movlw	93
  5114  03B9                     u6027:	
  5115  03B9  0B89               	decfsz	9,f
  5116  03BA  2BB9               	goto	u6027
  5117  03BB  0BB4               	decfsz	??_applianceControl,f
  5118  03BC  2BB9               	goto	u6027
  5119  03BD  0BB5               	decfsz	??_applianceControl+1,f
  5120  03BE  2BB9               	goto	u6027
  5121  03BF  3200               	nop2
  5122                           
  5123                           ;application.h: 195: RB4=1;
  5124  03C0  0020               	movlb	0	; select bank0
  5125  03C1  160D               	bsf	13,4	;volatile
  5126                           
  5127                           ;application.h: 196: _delay((unsigned long)((500)*(16000000/4000.0)));
  5128  03C2  300B               	movlw	11
  5129  03C3  0020               	movlb	0	; select bank0
  5130  03C4  00B5               	movwf	??_applianceControl+1
  5131  03C5  3026               	movlw	38
  5132  03C6  00B4               	movwf	??_applianceControl
  5133  03C7  305D               	movlw	93
  5134  03C8                     u6037:	
  5135  03C8  0B89               	decfsz	9,f
  5136  03C9  2BC8               	goto	u6037
  5137  03CA  0BB4               	decfsz	??_applianceControl,f
  5138  03CB  2BC8               	goto	u6037
  5139  03CC  0BB5               	decfsz	??_applianceControl+1,f
  5140  03CD  2BC8               	goto	u6037
  5141  03CE  3200               	nop2
  5142                           
  5143                           ;application.h: 197: }
  5144  03CF  0008               	return
  5145  03D0                     l3250:	
  5146                           
  5147                           ;application.h: 198: else if(chDimmerSpeedMSB == '5')
  5148  03D0  3035               	movlw	53
  5149  03D1  0020               	movlb	0	; select bank0
  5150  03D2  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  5151  03D3  1D03               	btfss	3,2
  5152  03D4  2C11               	goto	l3262
  5153                           
  5154                           ;application.h: 199: {
  5155                           ;application.h: 200: RB4=0;
  5156  03D5  120D               	bcf	13,4	;volatile
  5157                           
  5158                           ;application.h: 201: _delay((unsigned long)((500)*(16000000/4000.0)));
  5159  03D6  300B               	movlw	11
  5160  03D7  0020               	movlb	0	; select bank0
  5161  03D8  00B5               	movwf	??_applianceControl+1
  5162  03D9  3026               	movlw	38
  5163  03DA  00B4               	movwf	??_applianceControl
  5164  03DB  305D               	movlw	93
  5165  03DC                     u6047:	
  5166  03DC  0B89               	decfsz	9,f
  5167  03DD  2BDC               	goto	u6047
  5168  03DE  0BB4               	decfsz	??_applianceControl,f
  5169  03DF  2BDC               	goto	u6047
  5170  03E0  0BB5               	decfsz	??_applianceControl+1,f
  5171  03E1  2BDC               	goto	u6047
  5172  03E2  3200               	nop2
  5173                           
  5174                           ;application.h: 202: RB0=0;
  5175  03E3  0020               	movlb	0	; select bank0
  5176  03E4  100D               	bcf	13,0	;volatile
  5177                           
  5178                           ;application.h: 203: _delay((unsigned long)((500)*(16000000/4000.0)));
  5179  03E5  300B               	movlw	11
  5180  03E6  0020               	movlb	0	; select bank0
  5181  03E7  00B5               	movwf	??_applianceControl+1
  5182  03E8  3026               	movlw	38
  5183  03E9  00B4               	movwf	??_applianceControl
  5184  03EA  305D               	movlw	93
  5185  03EB                     u6057:	
  5186  03EB  0B89               	decfsz	9,f
  5187  03EC  2BEB               	goto	u6057
  5188  03ED  0BB4               	decfsz	??_applianceControl,f
  5189  03EE  2BEB               	goto	u6057
  5190  03EF  0BB5               	decfsz	??_applianceControl+1,f
  5191  03F0  2BEB               	goto	u6057
  5192  03F1  3200               	nop2
  5193                           
  5194                           ;application.h: 204: RB2=1;
  5195  03F2  0020               	movlb	0	; select bank0
  5196  03F3  150D               	bsf	13,2	;volatile
  5197                           
  5198                           ;application.h: 205: _delay((unsigned long)((500)*(16000000/4000.0)));
  5199  03F4  300B               	movlw	11
  5200  03F5  0020               	movlb	0	; select bank0
  5201  03F6  00B5               	movwf	??_applianceControl+1
  5202  03F7  3026               	movlw	38
  5203  03F8  00B4               	movwf	??_applianceControl
  5204  03F9  305D               	movlw	93
  5205  03FA                     u6067:	
  5206  03FA  0B89               	decfsz	9,f
  5207  03FB  2BFA               	goto	u6067
  5208  03FC  0BB4               	decfsz	??_applianceControl,f
  5209  03FD  2BFA               	goto	u6067
  5210  03FE  0BB5               	decfsz	??_applianceControl+1,f
  5211  03FF  2BFA               	goto	u6067
  5212  0400  3200               	nop2
  5213                           
  5214                           ;application.h: 206: RA4 = 1;
  5215  0401  0020               	movlb	0	; select bank0
  5216  0402  160C               	bsf	12,4	;volatile
  5217                           
  5218                           ;application.h: 207: _delay((unsigned long)((500)*(16000000/4000.0)));
  5219  0403  300B               	movlw	11
  5220  0404  0020               	movlb	0	; select bank0
  5221  0405  00B5               	movwf	??_applianceControl+1
  5222  0406  3026               	movlw	38
  5223  0407  00B4               	movwf	??_applianceControl
  5224  0408  305D               	movlw	93
  5225  0409                     u6077:	
  5226  0409  0B89               	decfsz	9,f
  5227  040A  2C09               	goto	u6077
  5228  040B  0BB4               	decfsz	??_applianceControl,f
  5229  040C  2C09               	goto	u6077
  5230  040D  0BB5               	decfsz	??_applianceControl+1,f
  5231  040E  2C09               	goto	u6077
  5232  040F  3200               	nop2
  5233                           
  5234                           ;application.h: 209: }
  5235  0410  0008               	return
  5236  0411                     l3262:	
  5237                           
  5238                           ;application.h: 210: else if(chDimmerSpeedMSB == '7')
  5239  0411  3037               	movlw	55
  5240  0412  0020               	movlb	0	; select bank0
  5241  0413  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  5242  0414  1D03               	btfss	3,2
  5243  0415  2C52               	goto	l3274
  5244                           
  5245                           ;application.h: 211: {
  5246                           ;application.h: 212: RB0=0;
  5247  0416  100D               	bcf	13,0	;volatile
  5248                           
  5249                           ;application.h: 213: _delay((unsigned long)((500)*(16000000/4000.0)));
  5250  0417  300B               	movlw	11
  5251  0418  0020               	movlb	0	; select bank0
  5252  0419  00B5               	movwf	??_applianceControl+1
  5253  041A  3026               	movlw	38
  5254  041B  00B4               	movwf	??_applianceControl
  5255  041C  305D               	movlw	93
  5256  041D                     u6087:	
  5257  041D  0B89               	decfsz	9,f
  5258  041E  2C1D               	goto	u6087
  5259  041F  0BB4               	decfsz	??_applianceControl,f
  5260  0420  2C1D               	goto	u6087
  5261  0421  0BB5               	decfsz	??_applianceControl+1,f
  5262  0422  2C1D               	goto	u6087
  5263  0423  3200               	nop2
  5264                           
  5265                           ;application.h: 214: RB4=1;
  5266  0424  0020               	movlb	0	; select bank0
  5267  0425  160D               	bsf	13,4	;volatile
  5268                           
  5269                           ;application.h: 215: _delay((unsigned long)((500)*(16000000/4000.0)));
  5270  0426  300B               	movlw	11
  5271  0427  0020               	movlb	0	; select bank0
  5272  0428  00B5               	movwf	??_applianceControl+1
  5273  0429  3026               	movlw	38
  5274  042A  00B4               	movwf	??_applianceControl
  5275  042B  305D               	movlw	93
  5276  042C                     u6097:	
  5277  042C  0B89               	decfsz	9,f
  5278  042D  2C2C               	goto	u6097
  5279  042E  0BB4               	decfsz	??_applianceControl,f
  5280  042F  2C2C               	goto	u6097
  5281  0430  0BB5               	decfsz	??_applianceControl+1,f
  5282  0431  2C2C               	goto	u6097
  5283  0432  3200               	nop2
  5284                           
  5285                           ;application.h: 216: RB2=1;
  5286  0433  0020               	movlb	0	; select bank0
  5287  0434  150D               	bsf	13,2	;volatile
  5288                           
  5289                           ;application.h: 217: _delay((unsigned long)((500)*(16000000/4000.0)));
  5290  0435  300B               	movlw	11
  5291  0436  0020               	movlb	0	; select bank0
  5292  0437  00B5               	movwf	??_applianceControl+1
  5293  0438  3026               	movlw	38
  5294  0439  00B4               	movwf	??_applianceControl
  5295  043A  305D               	movlw	93
  5296  043B                     u6107:	
  5297  043B  0B89               	decfsz	9,f
  5298  043C  2C3B               	goto	u6107
  5299  043D  0BB4               	decfsz	??_applianceControl,f
  5300  043E  2C3B               	goto	u6107
  5301  043F  0BB5               	decfsz	??_applianceControl+1,f
  5302  0440  2C3B               	goto	u6107
  5303  0441  3200               	nop2
  5304                           
  5305                           ;application.h: 218: RA4 = 1;
  5306  0442  0020               	movlb	0	; select bank0
  5307  0443  160C               	bsf	12,4	;volatile
  5308                           
  5309                           ;application.h: 219: _delay((unsigned long)((500)*(16000000/4000.0)));
  5310  0444  300B               	movlw	11
  5311  0445  0020               	movlb	0	; select bank0
  5312  0446  00B5               	movwf	??_applianceControl+1
  5313  0447  3026               	movlw	38
  5314  0448  00B4               	movwf	??_applianceControl
  5315  0449  305D               	movlw	93
  5316  044A                     u6117:	
  5317  044A  0B89               	decfsz	9,f
  5318  044B  2C4A               	goto	u6117
  5319  044C  0BB4               	decfsz	??_applianceControl,f
  5320  044D  2C4A               	goto	u6117
  5321  044E  0BB5               	decfsz	??_applianceControl+1,f
  5322  044F  2C4A               	goto	u6117
  5323  0450  3200               	nop2
  5324                           
  5325                           ;application.h: 221: }
  5326  0451  0008               	return
  5327  0452                     l3274:	
  5328                           
  5329                           ;application.h: 222: else if(chDimmerSpeedMSB == '9')
  5330  0452  3039               	movlw	57
  5331  0453  0020               	movlb	0	; select bank0
  5332  0454  0630               	xorwf	applianceControl@chDimmerSpeedMSB,w
  5333  0455  1D03               	btfss	3,2
  5334  0456  0008               	return
  5335                           
  5336                           ;application.h: 223: {
  5337                           ;application.h: 224: RB4=0;
  5338  0457  120D               	bcf	13,4	;volatile
  5339                           
  5340                           ;application.h: 225: _delay((unsigned long)((500)*(16000000/4000.0)));
  5341  0458  300B               	movlw	11
  5342  0459  0020               	movlb	0	; select bank0
  5343  045A  00B5               	movwf	??_applianceControl+1
  5344  045B  3026               	movlw	38
  5345  045C  00B4               	movwf	??_applianceControl
  5346  045D  305D               	movlw	93
  5347  045E                     u6127:	
  5348  045E  0B89               	decfsz	9,f
  5349  045F  2C5E               	goto	u6127
  5350  0460  0BB4               	decfsz	??_applianceControl,f
  5351  0461  2C5E               	goto	u6127
  5352  0462  0BB5               	decfsz	??_applianceControl+1,f
  5353  0463  2C5E               	goto	u6127
  5354  0464  3200               	nop2
  5355                           
  5356                           ;application.h: 226: RB2=0;
  5357  0465  0020               	movlb	0	; select bank0
  5358  0466  110D               	bcf	13,2	;volatile
  5359                           
  5360                           ;application.h: 227: _delay((unsigned long)((500)*(16000000/4000.0)));
  5361  0467  300B               	movlw	11
  5362  0468  0020               	movlb	0	; select bank0
  5363  0469  00B5               	movwf	??_applianceControl+1
  5364  046A  3026               	movlw	38
  5365  046B  00B4               	movwf	??_applianceControl
  5366  046C  305D               	movlw	93
  5367  046D                     u6137:	
  5368  046D  0B89               	decfsz	9,f
  5369  046E  2C6D               	goto	u6137
  5370  046F  0BB4               	decfsz	??_applianceControl,f
  5371  0470  2C6D               	goto	u6137
  5372  0471  0BB5               	decfsz	??_applianceControl+1,f
  5373  0472  2C6D               	goto	u6137
  5374  0473  3200               	nop2
  5375                           
  5376                           ;application.h: 228: RB0=1;
  5377  0474  0020               	movlb	0	; select bank0
  5378  0475  140D               	bsf	13,0	;volatile
  5379                           
  5380                           ;application.h: 229: _delay((unsigned long)((500)*(16000000/4000.0)));
  5381  0476  300B               	movlw	11
  5382  0477  0020               	movlb	0	; select bank0
  5383  0478  00B5               	movwf	??_applianceControl+1
  5384  0479  3026               	movlw	38
  5385  047A  00B4               	movwf	??_applianceControl
  5386  047B  305D               	movlw	93
  5387  047C                     u6147:	
  5388  047C  0B89               	decfsz	9,f
  5389  047D  2C7C               	goto	u6147
  5390  047E  0BB4               	decfsz	??_applianceControl,f
  5391  047F  2C7C               	goto	u6147
  5392  0480  0BB5               	decfsz	??_applianceControl+1,f
  5393  0481  2C7C               	goto	u6147
  5394  0482  3200               	nop2
  5395                           
  5396                           ;application.h: 230: RA4 = 1;
  5397  0483  0020               	movlb	0	; select bank0
  5398  0484  160C               	bsf	12,4	;volatile
  5399                           
  5400                           ;application.h: 231: _delay((unsigned long)((500)*(16000000/4000.0)));
  5401  0485  300B               	movlw	11
  5402  0486  0020               	movlb	0	; select bank0
  5403  0487  00B5               	movwf	??_applianceControl+1
  5404  0488  3026               	movlw	38
  5405  0489  00B4               	movwf	??_applianceControl
  5406  048A  305D               	movlw	93
  5407  048B                     u6157:	
  5408  048B  0B89               	decfsz	9,f
  5409  048C  2C8B               	goto	u6157
  5410  048D  0BB4               	decfsz	??_applianceControl,f
  5411  048E  2C8B               	goto	u6157
  5412  048F  0BB5               	decfsz	??_applianceControl+1,f
  5413  0490  2C8B               	goto	u6157
  5414  0491  3200               	nop2
  5415                           
  5416                           ;application.h: 245: }
  5417                           
  5418                           ;application.h: 244: break;
  5419                           
  5420                           ;application.h: 243: default:
  5421                           
  5422                           ;application.h: 237: {
  5423                           ;application.h: 241: }
  5424                           ;application.h: 242: break;
  5425                           
  5426                           ;application.h: 236: case 8:
  5427                           
  5428                           ;application.h: 232: }
  5429                           ;application.h: 233: }
  5430                           ;application.h: 234: }
  5431                           ;application.h: 235: break;
  5432  0492  0008               	return
  5433  0493                     l3288:	
  5434                           
  5435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5436                           ; Switch size 1, requested type "space"
  5437                           ; Number of cases is 1, Range of values is 0 to 0
  5438                           ; switch strategies available:
  5439                           ; Name         Instructions Cycles
  5440                           ; simple_byte            4     3 (average)
  5441                           ; direct_byte            8     6 (fixed)
  5442                           ; jumptable            260     6 (fixed)
  5443                           ;	Chosen strategy is simple_byte
  5444  0493  0020               	movlb	0	; select bank0
  5445  0494  0842               	movf	applianceControl@integerSwitchNumber+1,w
  5446  0495  3A00               	xorlw	0	; case 0
  5447  0496  1903               	skipnz
  5448  0497  2C99               	goto	l4020
  5449  0498  2CA6               	goto	l259
  5450  0499                     l4020:	
  5451                           
  5452                           ; Switch size 1, requested type "space"
  5453                           ; Number of cases is 8, Range of values is 1 to 8
  5454                           ; switch strategies available:
  5455                           ; Name         Instructions Cycles
  5456                           ; direct_byte           25     9 (fixed)
  5457                           ; simple_byte           25    13 (average)
  5458                           ; jumptable            263     9 (fixed)
  5459                           ;	Chosen strategy is direct_byte
  5460  0499  0841               	movf	applianceControl@integerSwitchNumber,w
  5461  049A  3EFF               	addlw	-1
  5462  049B  1C03               	skipc
  5463  049C  0008               	return
  5464  049D  0084               	movwf	4
  5465  049E  3008               	movlw	8
  5466  049F  0204               	subwf	4,w
  5467  04A0  1803               	skipnc
  5468  04A1  0008               	return
  5469  04A2  3190               	movlp	high S4022
  5470  04A3  3504               	lslf	4,w
  5471  04A4  3E00               	addlw	low S4022
  5472  04A5  0082               	movwf	2
  5473  04A6                     l259:	
  5474  04A6  0008               	return
  5475  04A7                     __end_of_applianceControl:	
  5476                           
  5477                           	psect	swtext1
  5478  1000                     __pswtext1:	
  5479  1000                     S4022:	
  5480  1000  3182  2ADA         	ljmp	l237
  5481  1002  3182  2AE2         	ljmp	l239
  5482  1004  3182  2AEA         	ljmp	l240
  5483  1006  3182  2AF2         	ljmp	l241
  5484  1008  3182  2AFA         	ljmp	l242
  5485  100A  3183  2B02         	ljmp	l243
  5486  100C  3183  2B0A         	ljmp	l3212
  5487  100E  3184  2CA6         	ljmp	l259
  5488                           
  5489                           	psect	text5
  5490  179A                     __ptext5:	
  5491 ;; *************** function _send_Response_To_Touch *****************
  5492 ;; Defined at:
  5493 ;;		line 805 in file "../master_eight.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  switch_no       1    wreg     unsigned char 
  5496 ;;  switch_statu    1    0[BANK0 ] unsigned char 
  5497 ;;  fan_speed       1    1[BANK0 ] unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  switch_no       1    3[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  5510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5512 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    2
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_applianceControl
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function _send_Response_To_Touch
  5526  179A                     _send_Response_To_Touch:	
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in _send_Response_To_Touch: [wreg]
  5530                           ;send_Response_To_Touch@switch_no stored from wreg
  5531  179A  0020               	movlb	0	; select bank0
  5532  179B  00A3               	movwf	send_Response_To_Touch@switch_no
  5533                           
  5534                           ;master_eight.c: 807: _delay((unsigned long)((5)*(16000000/4000.0)));
  5535  179C  301A               	movlw	26
  5536  179D  0020               	movlb	0	; select bank0
  5537  179E  00A2               	movwf	??_send_Response_To_Touch
  5538  179F  30F8               	movlw	248
  5539  17A0                     u6167:	
  5540  17A0  0B89               	decfsz	9,f
  5541  17A1  2FA0               	goto	u6167
  5542  17A2  0BA2               	decfsz	??_send_Response_To_Touch,f
  5543  17A3  2FA0               	goto	u6167
  5544  17A4  0000               	nop
  5545                           
  5546                           ;master_eight.c: 808: TX2REG = '(' ;
  5547  17A5  3028               	movlw	40
  5548  17A6  0029               	movlb	9	; select bank9
  5549  17A7  0092               	movwf	18	;volatile
  5550                           
  5551                           ;master_eight.c: 809: _delay((unsigned long)((1)*(16000000/4000.0)));
  5552  17A8  3006               	movlw	6
  5553  17A9  0020               	movlb	0	; select bank0
  5554  17AA  00A2               	movwf	??_send_Response_To_Touch
  5555  17AB  3030               	movlw	48
  5556  17AC                     u6177:	
  5557  17AC  0B89               	decfsz	9,f
  5558  17AD  2FAC               	goto	u6177
  5559  17AE  0BA2               	decfsz	??_send_Response_To_Touch,f
  5560  17AF  2FAC               	goto	u6177
  5561  17B0  0000               	nop
  5562                           
  5563                           ;master_eight.c: 810: TX2REG = 'f' ;
  5564  17B1  3066               	movlw	102
  5565  17B2  0029               	movlb	9	; select bank9
  5566  17B3  0092               	movwf	18	;volatile
  5567                           
  5568                           ;master_eight.c: 811: _delay((unsigned long)((1)*(16000000/4000.0)));
  5569  17B4  3006               	movlw	6
  5570  17B5  0020               	movlb	0	; select bank0
  5571  17B6  00A2               	movwf	??_send_Response_To_Touch
  5572  17B7  3030               	movlw	48
  5573  17B8                     u6187:	
  5574  17B8  0B89               	decfsz	9,f
  5575  17B9  2FB8               	goto	u6187
  5576  17BA  0BA2               	decfsz	??_send_Response_To_Touch,f
  5577  17BB  2FB8               	goto	u6187
  5578  17BC  0000               	nop
  5579                           
  5580                           ;master_eight.c: 812: TX2REG =switch_no ;
  5581  17BD  0020               	movlb	0	; select bank0
  5582  17BE  0823               	movf	send_Response_To_Touch@switch_no,w
  5583  17BF  0029               	movlb	9	; select bank9
  5584  17C0  0092               	movwf	18	;volatile
  5585                           
  5586                           ;master_eight.c: 813: _delay((unsigned long)((1)*(16000000/4000.0)));
  5587  17C1  3006               	movlw	6
  5588  17C2  0020               	movlb	0	; select bank0
  5589  17C3  00A2               	movwf	??_send_Response_To_Touch
  5590  17C4  3030               	movlw	48
  5591  17C5                     u6197:	
  5592  17C5  0B89               	decfsz	9,f
  5593  17C6  2FC5               	goto	u6197
  5594  17C7  0BA2               	decfsz	??_send_Response_To_Touch,f
  5595  17C8  2FC5               	goto	u6197
  5596  17C9  0000               	nop
  5597                           
  5598                           ;master_eight.c: 814: TX2REG=switch_status;
  5599  17CA  0020               	movlb	0	; select bank0
  5600  17CB  0820               	movf	send_Response_To_Touch@switch_status,w
  5601  17CC  0029               	movlb	9	; select bank9
  5602  17CD  0092               	movwf	18	;volatile
  5603                           
  5604                           ;master_eight.c: 815: _delay((unsigned long)((1)*(16000000/4000.0)));
  5605  17CE  3006               	movlw	6
  5606  17CF  0020               	movlb	0	; select bank0
  5607  17D0  00A2               	movwf	??_send_Response_To_Touch
  5608  17D1  3030               	movlw	48
  5609  17D2                     u6207:	
  5610  17D2  0B89               	decfsz	9,f
  5611  17D3  2FD2               	goto	u6207
  5612  17D4  0BA2               	decfsz	??_send_Response_To_Touch,f
  5613  17D5  2FD2               	goto	u6207
  5614  17D6  0000               	nop
  5615                           
  5616                           ;master_eight.c: 816: TX2REG=fan_speed;
  5617  17D7  0020               	movlb	0	; select bank0
  5618  17D8  0821               	movf	send_Response_To_Touch@fan_speed,w
  5619  17D9  0029               	movlb	9	; select bank9
  5620  17DA  0092               	movwf	18	;volatile
  5621                           
  5622                           ;master_eight.c: 817: _delay((unsigned long)((1)*(16000000/4000.0)));
  5623  17DB  3006               	movlw	6
  5624  17DC  0020               	movlb	0	; select bank0
  5625  17DD  00A2               	movwf	??_send_Response_To_Touch
  5626  17DE  3030               	movlw	48
  5627  17DF                     u6217:	
  5628  17DF  0B89               	decfsz	9,f
  5629  17E0  2FDF               	goto	u6217
  5630  17E1  0BA2               	decfsz	??_send_Response_To_Touch,f
  5631  17E2  2FDF               	goto	u6217
  5632  17E3  0000               	nop
  5633                           
  5634                           ;master_eight.c: 818: TX2REG='0';
  5635  17E4  3030               	movlw	48
  5636  17E5  0029               	movlb	9	; select bank9
  5637  17E6  0092               	movwf	18	;volatile
  5638                           
  5639                           ;master_eight.c: 819: _delay((unsigned long)((1)*(16000000/4000.0)));
  5640  17E7  3006               	movlw	6
  5641  17E8  0020               	movlb	0	; select bank0
  5642  17E9  00A2               	movwf	??_send_Response_To_Touch
  5643  17EA  3030               	movlw	48
  5644  17EB                     u6227:	
  5645  17EB  0B89               	decfsz	9,f
  5646  17EC  2FEB               	goto	u6227
  5647  17ED  0BA2               	decfsz	??_send_Response_To_Touch,f
  5648  17EE  2FEB               	goto	u6227
  5649  17EF  0000               	nop
  5650                           
  5651                           ;master_eight.c: 820: TX2REG='0';
  5652  17F0  3030               	movlw	48
  5653  17F1  0029               	movlb	9	; select bank9
  5654  17F2  0092               	movwf	18	;volatile
  5655                           
  5656                           ;master_eight.c: 821: _delay((unsigned long)((1)*(16000000/4000.0)));
  5657  17F3  3006               	movlw	6
  5658  17F4  0020               	movlb	0	; select bank0
  5659  17F5  00A2               	movwf	??_send_Response_To_Touch
  5660  17F6  3030               	movlw	48
  5661  17F7                     u6237:	
  5662  17F7  0B89               	decfsz	9,f
  5663  17F8  2FF7               	goto	u6237
  5664  17F9  0BA2               	decfsz	??_send_Response_To_Touch,f
  5665  17FA  2FF7               	goto	u6237
  5666  17FB  0000               	nop
  5667                           
  5668                           ;master_eight.c: 822: TX2REG=')';
  5669  17FC  3029               	movlw	41
  5670  17FD  0029               	movlb	9	; select bank9
  5671  17FE  0092               	movwf	18	;volatile
  5672  17FF  0008               	return
  5673  1800                     __end_of_send_Response_To_Touch:	
  5674                           
  5675                           	psect	text6
  5676  1664                     __ptext6:	
  5677 ;; *************** function _sendAcknowledgment *****************
  5678 ;; Defined at:
  5679 ;;		line 856 in file "../master_eight.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  currentState    2    0[BANK0 ] PTR unsigned char 
  5682 ;;		 -> currentStateBuffer(130), 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  Tx_count        2    2[BANK0 ] int 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  5695 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  5698 ;;Total ram usage:        4 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    2
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_applianceControl
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _sendAcknowledgment
  5710  1664                     _sendAcknowledgment:	
  5711                           
  5712                           ;master_eight.c: 857: int Tx_count=0;
  5713                           
  5714                           ;incstack = 0
  5715                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  5716  1664  0020               	movlb	0	; select bank0
  5717  1665  01A2               	clrf	sendAcknowledgment@Tx_count
  5718  1666  01A3               	clrf	sendAcknowledgment@Tx_count+1
  5719  1667                     l3072:	
  5720                           ;master_eight.c: 858: while(Tx_count!=4)
  5721                           
  5722  1667  3004               	movlw	4
  5723  1668  0622               	xorwf	sendAcknowledgment@Tx_count,w
  5724  1669  0423               	iorwf	sendAcknowledgment@Tx_count+1,w
  5725  166A  1903               	btfsc	3,2
  5726  166B  0008               	return
  5727  166C                     l395:	
  5728                           ;master_eight.c: 859: {
  5729                           ;master_eight.c: 860: while (!TX1STAbits.TRMT);
  5730                           
  5731  166C  0023               	movlb	3	; select bank3
  5732  166D  1C9E               	btfss	30,1	;volatile
  5733  166E  2E6C               	goto	l395
  5734                           
  5735                           ;master_eight.c: 862: TX1REG = *currentStateBuffer;
  5736  166F  0020               	movlb	0	; select bank0
  5737  1670  0820               	movf	sendAcknowledgment@currentStateBuffer,w
  5738  1671  0086               	movwf	6
  5739  1672  0821               	movf	sendAcknowledgment@currentStateBuffer+1,w
  5740  1673  0087               	movwf	7
  5741  1674  0801               	movf	1,w
  5742  1675  0023               	movlb	3	; select bank3
  5743  1676  009A               	movwf	26	;volatile
  5744                           
  5745                           ;master_eight.c: 863: *currentStateBuffer++;
  5746  1677  3001               	movlw	1
  5747  1678  0020               	movlb	0	; select bank0
  5748  1679  07A0               	addwf	sendAcknowledgment@currentStateBuffer,f
  5749  167A  3000               	movlw	0
  5750  167B  3DA1               	addwfc	sendAcknowledgment@currentStateBuffer+1,f
  5751                           
  5752                           ;master_eight.c: 864: Tx_count++;
  5753  167C  3001               	movlw	1
  5754  167D  07A2               	addwf	sendAcknowledgment@Tx_count,f
  5755  167E  3000               	movlw	0
  5756  167F  3DA3               	addwfc	sendAcknowledgment@Tx_count+1,f
  5757  1680  2E67               	goto	l3072
  5758  1681                     __end_of_sendAcknowledgment:	
  5759                           
  5760                           	psect	text7
  5761  0840                     __ptext7:	
  5762 ;; *************** function _atoi *****************
  5763 ;; Defined at:
  5764 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  s               1    wreg     PTR const unsigned char 
  5767 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  5770 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  5771 ;;  a               2   11[BANK0 ] int 
  5772 ;;  sign            1   10[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2    6[BANK0 ] int 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  5783 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  5784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  5785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  5786 ;;Total ram usage:        8 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    3
  5789 ;; This function calls:
  5790 ;;		___wmul
  5791 ;;		_isdigit
  5792 ;; This function is called by:
  5793 ;;		_applianceControl
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function _atoi
  5799  0840                     _atoi:	
  5800                           
  5801                           ;incstack = 0
  5802                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5803                           ;atoi@s stored from wreg
  5804  0840  0020               	movlb	0	; select bank0
  5805  0841  00AD               	movwf	atoi@s
  5806  0842                     l3034:	
  5807  0842  082D               	movf	atoi@s,w
  5808  0843  0086               	movwf	6
  5809  0844  0187               	clrf	7
  5810  0845  3020               	movlw	32
  5811  0846  0601               	xorwf	1,w
  5812  0847  1D03               	btfss	3,2
  5813  0848  284E               	goto	l3036
  5814  0849                     l3032:	
  5815  0849  3001               	movlw	1
  5816  084A  00A8               	movwf	??_atoi
  5817  084B  0828               	movf	??_atoi,w
  5818  084C  07AD               	addwf	atoi@s,f
  5819  084D  2842               	goto	l3034
  5820  084E                     l3036:	
  5821  084E  082D               	movf	atoi@s,w
  5822  084F  0086               	movwf	6
  5823  0850  0187               	clrf	7
  5824  0851  3009               	movlw	9
  5825  0852  0601               	xorwf	1,w
  5826  0853  1903               	btfsc	3,2
  5827  0854  2849               	goto	l3032
  5828  0855  01AB               	clrf	atoi@a
  5829  0856  01AC               	clrf	atoi@a+1
  5830  0857  01AA               	clrf	atoi@sign
  5831  0858  082D               	movf	atoi@s,w
  5832  0859  0086               	movwf	6
  5833  085A  0187               	clrf	7
  5834  085B  302D               	movlw	45
  5835  085C  0601               	xorwf	1,w
  5836  085D  1D03               	btfss	3,2
  5837  085E  2864               	goto	l3044
  5838  085F  3001               	movlw	1
  5839  0860  00A8               	movwf	??_atoi
  5840  0861  0828               	movf	??_atoi,w
  5841  0862  07AA               	addwf	atoi@sign,f
  5842  0863  286B               	goto	l3050
  5843  0864                     l3044:	
  5844  0864  082D               	movf	atoi@s,w
  5845  0865  0086               	movwf	6
  5846  0866  0187               	clrf	7
  5847  0867  302B               	movlw	43
  5848  0868  0601               	xorwf	1,w
  5849  0869  1D03               	btfss	3,2
  5850  086A  286F               	goto	l3052
  5851  086B                     l3050:	
  5852  086B  3001               	movlw	1
  5853  086C  00A8               	movwf	??_atoi
  5854  086D  0828               	movf	??_atoi,w
  5855  086E  07AD               	addwf	atoi@s,f
  5856  086F                     l3052:	
  5857  086F  082D               	movf	atoi@s,w
  5858  0870  0086               	movwf	6
  5859  0871  0187               	clrf	7
  5860  0872  0801               	movf	1,w
  5861  0873  3195  25DF  3188   	fcall	_isdigit
  5862  0876  1C03               	btfss	3,0
  5863  0877  2896               	goto	l3054
  5864  0878  0020               	movlb	0	; select bank0
  5865  0879  082C               	movf	atoi@a+1,w
  5866  087A  00A1               	movwf	___wmul@multiplier+1
  5867  087B  082B               	movf	atoi@a,w
  5868  087C  00A0               	movwf	___wmul@multiplier
  5869  087D  300A               	movlw	10
  5870  087E  00A2               	movwf	___wmul@multiplicand
  5871  087F  3000               	movlw	0
  5872  0880  00A3               	movwf	___wmul@multiplicand+1
  5873  0881  3196  2648  3188   	fcall	___wmul
  5874  0884  0020               	movlb	0	; select bank0
  5875  0885  082D               	movf	atoi@s,w
  5876  0886  0086               	movwf	6
  5877  0887  0187               	clrf	7
  5878  0888  0801               	movf	1,w
  5879  0889  0720               	addwf	?___wmul,w
  5880  088A  00A8               	movwf	??_atoi
  5881  088B  0821               	movf	?___wmul+1,w
  5882  088C  1803               	skipnc
  5883  088D  0A21               	incf	?___wmul+1,w
  5884  088E  00A9               	movwf	??_atoi+1
  5885  088F  0828               	movf	??_atoi,w
  5886  0890  3ED0               	addlw	208
  5887  0891  00AB               	movwf	atoi@a
  5888  0892  30FF               	movlw	255
  5889  0893  3D29               	addwfc	??_atoi+1,w
  5890  0894  00AC               	movwf	atoi@a+1
  5891  0895  286B               	goto	l3050
  5892  0896                     l3054:	
  5893  0896  0020               	movlb	0	; select bank0
  5894  0897  082A               	movf	atoi@sign,w
  5895  0898  1903               	btfsc	3,2
  5896  0899  28A6               	goto	l3060
  5897  089A  092B               	comf	atoi@a,w
  5898  089B  00A8               	movwf	??_atoi
  5899  089C  092C               	comf	atoi@a+1,w
  5900  089D  00A9               	movwf	??_atoi+1
  5901  089E  0AA8               	incf	??_atoi,f
  5902  089F  1903               	skipnz
  5903  08A0  0AA9               	incf	??_atoi+1,f
  5904  08A1  0828               	movf	??_atoi,w
  5905  08A2  00A6               	movwf	?_atoi
  5906  08A3  0829               	movf	??_atoi+1,w
  5907  08A4  00A7               	movwf	?_atoi+1
  5908  08A5  0008               	return
  5909  08A6                     l3060:	
  5910  08A6  082C               	movf	atoi@a+1,w
  5911  08A7  00A7               	movwf	?_atoi+1
  5912  08A8  082B               	movf	atoi@a,w
  5913  08A9  00A6               	movwf	?_atoi
  5914  08AA  0008               	return
  5915  08AB                     __end_of_atoi:	
  5916                           
  5917                           	psect	text8
  5918  15DF                     __ptext8:	
  5919 ;; *************** function _isdigit *****************
  5920 ;; Defined at:
  5921 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  c               1    wreg     unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  c               1    1[BANK0 ] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        2 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_atoi
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function _isdigit
  5951  15DF                     _isdigit:	
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5955                           ;isdigit@c stored from wreg
  5956  15DF  0020               	movlb	0	; select bank0
  5957  15E0  00A1               	movwf	isdigit@c
  5958  15E1  01A0               	clrf	_isdigit$731
  5959  15E2  303A               	movlw	58
  5960  15E3  0221               	subwf	isdigit@c,w
  5961  15E4  1803               	skipnc
  5962  15E5  2DEC               	goto	l3026
  5963  15E6  3030               	movlw	48
  5964  15E7  0221               	subwf	isdigit@c,w
  5965  15E8  1C03               	skipc
  5966  15E9  2DEC               	goto	l3026
  5967  15EA  01A0               	clrf	_isdigit$731
  5968  15EB  0AA0               	incf	_isdigit$731,f
  5969  15EC                     l3026:	
  5970  15EC  0C20               	rrf	_isdigit$731,w
  5971  15ED  0008               	return
  5972  15EE                     __end_of_isdigit:	
  5973                           
  5974                           	psect	text9
  5975  1648                     __ptext9:	
  5976 ;; *************** function ___wmul *****************
  5977 ;; Defined at:
  5978 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5981 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  product         2    4[BANK0 ] unsigned int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2    0[BANK0 ] unsigned int 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  5994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  5997 ;;Total ram usage:        6 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    2
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_atoi
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function ___wmul
  6009  1648                     ___wmul:	
  6010                           
  6011                           ;incstack = 0
  6012                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6013  1648  0020               	movlb	0	; select bank0
  6014  1649  01A4               	clrf	___wmul@product
  6015  164A  01A5               	clrf	___wmul@product+1
  6016  164B                     l3006:	
  6017  164B  1C20               	btfss	___wmul@multiplier,0
  6018  164C  2E51               	goto	l422
  6019  164D  0822               	movf	___wmul@multiplicand,w
  6020  164E  07A4               	addwf	___wmul@product,f
  6021  164F  0823               	movf	___wmul@multiplicand+1,w
  6022  1650  3DA5               	addwfc	___wmul@product+1,f
  6023  1651                     l422:	
  6024  1651  3001               	movlw	1
  6025  1652                     u3445:	
  6026  1652  35A2               	lslf	___wmul@multiplicand,f
  6027  1653  0DA3               	rlf	___wmul@multiplicand+1,f
  6028  1654  0B89               	decfsz	9,f
  6029  1655  2E52               	goto	u3445
  6030  1656  3001               	movlw	1
  6031  1657                     u3455:	
  6032  1657  36A1               	lsrf	___wmul@multiplier+1,f
  6033  1658  0CA0               	rrf	___wmul@multiplier,f
  6034  1659  0B89               	decfsz	9,f
  6035  165A  2E57               	goto	u3455
  6036  165B  0820               	movf	___wmul@multiplier,w
  6037  165C  0421               	iorwf	___wmul@multiplier+1,w
  6038  165D  1D03               	btfss	3,2
  6039  165E  2E4B               	goto	l3006
  6040  165F  0825               	movf	___wmul@product+1,w
  6041  1660  00A1               	movwf	?___wmul+1
  6042  1661  0824               	movf	___wmul@product,w
  6043  1662  00A0               	movwf	?___wmul
  6044  1663  0008               	return
  6045  1664                     __end_of___wmul:	
  6046                           
  6047                           	psect	text10
  6048  0805                     __ptext10:	
  6049 ;; *************** function _allPeripheralInit *****************
  6050 ;; Defined at:
  6051 ;;		line 723 in file "../master_eight.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, pclath, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    3
  6072 ;; This function calls:
  6073 ;;		_EUSART2_Initialize
  6074 ;;		_EUSART_Initialize
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function _allPeripheralInit
  6082  0805                     _allPeripheralInit:	
  6083                           
  6084                           ;master_eight.c: 724: EUSART_Initialize();
  6085                           
  6086                           ;incstack = 0
  6087                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  6088  0805  3196  2619  3188   	fcall	_EUSART_Initialize
  6089                           
  6090                           ;master_eight.c: 725: EUSART2_Initialize();
  6091  0808  3196  2603         	fcall	_EUSART2_Initialize
  6092  080A  0008               	return
  6093  080B                     __end_of_allPeripheralInit:	
  6094                           
  6095                           	psect	text11
  6096  1619                     __ptext11:	
  6097 ;; *************** function _EUSART_Initialize *****************
  6098 ;; Defined at:
  6099 ;;		line 732 in file "../master_eight.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;		None
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      void 
  6106 ;; Registers used:
  6107 ;;		wreg
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6117 ;;Total ram usage:        0 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    2
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_allPeripheralInit
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _EUSART_Initialize
  6129  1619                     _EUSART_Initialize:	
  6130                           
  6131                           ;master_eight.c: 733: PIE1bits.RC1IE = 0;
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _EUSART_Initialize: [wreg]
  6135  1619  0021               	movlb	1	; select bank1
  6136  161A  1291               	bcf	17,5	;volatile
  6137                           
  6138                           ;master_eight.c: 734: PIE1bits.TX1IE = 0;
  6139  161B  1211               	bcf	17,4	;volatile
  6140                           
  6141                           ;master_eight.c: 739: BAUD1CON = 0x0A;
  6142  161C  300A               	movlw	10
  6143  161D  0023               	movlb	3	; select bank3
  6144  161E  009F               	movwf	31	;volatile
  6145                           
  6146                           ;master_eight.c: 742: RC1STA = 0x90;
  6147  161F  3090               	movlw	144
  6148  1620  009D               	movwf	29	;volatile
  6149                           
  6150                           ;master_eight.c: 745: TX1STA = 0x24;
  6151  1621  3024               	movlw	36
  6152  1622  009E               	movwf	30	;volatile
  6153                           
  6154                           ;master_eight.c: 750: SP1BRGL = 0xA0;
  6155  1623  30A0               	movlw	160
  6156  1624  009B               	movwf	27	;volatile
  6157                           
  6158                           ;master_eight.c: 752: SP1BRGH = 0x01;
  6159  1625  3001               	movlw	1
  6160  1626  009C               	movwf	28	;volatile
  6161                           
  6162                           ;master_eight.c: 755: GIE = 1;
  6163  1627  178B               	bsf	11,7	;volatile
  6164                           
  6165                           ;master_eight.c: 758: PEIE = 1;
  6166  1628  170B               	bsf	11,6	;volatile
  6167                           
  6168                           ;master_eight.c: 761: PIE1bits.RC1IE = 1;
  6169  1629  0021               	movlb	1	; select bank1
  6170  162A  1691               	bsf	17,5	;volatile
  6171                           
  6172                           ;master_eight.c: 764: TX1STAbits.TXEN = 1;
  6173  162B  0023               	movlb	3	; select bank3
  6174  162C  169E               	bsf	30,5	;volatile
  6175                           
  6176                           ;master_eight.c: 767: RC1STAbits.SPEN = 1;
  6177  162D  179D               	bsf	29,7	;volatile
  6178  162E  0008               	return
  6179  162F                     __end_of_EUSART_Initialize:	
  6180                           
  6181                           	psect	text12
  6182  1603                     __ptext12:	
  6183 ;; *************** function _EUSART2_Initialize *****************
  6184 ;; Defined at:
  6185 ;;		line 769 in file "../master_eight.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    2
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_allPeripheralInit
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function _EUSART2_Initialize
  6215  1603                     _EUSART2_Initialize:	
  6216                           
  6217                           ;master_eight.c: 771: PIE4bits.RC2IE = 0;
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in _EUSART2_Initialize: [wreg]
  6221  1603  0021               	movlb	1	; select bank1
  6222  1604  1294               	bcf	20,5	;volatile
  6223                           
  6224                           ;master_eight.c: 772: PIE4bits.TX2IE = 0;
  6225  1605  1214               	bcf	20,4	;volatile
  6226                           
  6227                           ;master_eight.c: 777: BAUD2CON = 0x0A;
  6228  1606  300A               	movlw	10
  6229  1607  0029               	movlb	9	; select bank9
  6230  1608  0097               	movwf	23	;volatile
  6231                           
  6232                           ;master_eight.c: 780: RC2STA = 0x90;
  6233  1609  3090               	movlw	144
  6234  160A  0095               	movwf	21	;volatile
  6235                           
  6236                           ;master_eight.c: 783: TX2STA = 0x24;
  6237  160B  3024               	movlw	36
  6238  160C  0096               	movwf	22	;volatile
  6239                           
  6240                           ;master_eight.c: 786: SP2BRGL = 0xA0;
  6241  160D  30A0               	movlw	160
  6242  160E  0093               	movwf	19	;volatile
  6243                           
  6244                           ;master_eight.c: 788: SP2BRGH = 0x01;
  6245  160F  3001               	movlw	1
  6246  1610  0094               	movwf	20	;volatile
  6247                           
  6248                           ;master_eight.c: 791: GIE = 1;
  6249  1611  178B               	bsf	11,7	;volatile
  6250                           
  6251                           ;master_eight.c: 794: PEIE = 1;
  6252  1612  170B               	bsf	11,6	;volatile
  6253                           
  6254                           ;master_eight.c: 797: PIE4bits.RC2IE = 1;
  6255  1613  0021               	movlb	1	; select bank1
  6256  1614  1694               	bsf	20,5	;volatile
  6257                           
  6258                           ;master_eight.c: 799: TX2STAbits.TXEN = 1;
  6259  1615  0029               	movlb	9	; select bank9
  6260  1616  1696               	bsf	22,5	;volatile
  6261                           
  6262                           ;master_eight.c: 802: RC2STAbits.SPEN = 1;
  6263  1617  1795               	bsf	21,7	;volatile
  6264  1618  0008               	return
  6265  1619                     __end_of_EUSART2_Initialize:	
  6266                           
  6267                           	psect	text13
  6268  04A7                     __ptext13:	
  6269 ;; *************** function _actiontouchPanel *****************
  6270 ;; Defined at:
  6271 ;;		line 1 in file "../actiontouchpanel.h"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  Switch_Num      1    wreg     unsigned char 
  6274 ;;  sw_status       1    3[BANK0 ] unsigned char 
  6275 ;;  speeds          1    4[BANK0 ] unsigned char 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  Switch_Num      1   12[BANK0 ] unsigned char 
  6278 ;;  switch_statu    2   15[BANK0 ] int 
  6279 ;;  integer_swit    2   13[BANK0 ] int 
  6280 ;;  preventFlag     2   10[BANK0 ] int 
  6281 ;;  SwNum           2    8[BANK0 ] int 
  6282 ;;  ch_sw_num       1    7[BANK0 ] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6293 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0
  6294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6295 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0
  6296 ;;Total ram usage:       14 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    3
  6299 ;; This function calls:
  6300 ;;		_sendFeedback_TO_Gateway
  6301 ;; This function is called by:
  6302 ;;		_main
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           
  6307                           ;psect for function _actiontouchPanel
  6308  04A7                     _actiontouchPanel:	
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in _actiontouchPanel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6312                           ;actiontouchPanel@Switch_Num stored from wreg
  6313  04A7  0020               	movlb	0	; select bank0
  6314  04A8  00AC               	movwf	actiontouchPanel@Switch_Num
  6315                           
  6316                           ;actiontouchpanel.h: 5: M1=1; M2=1; M3=1; M4=1; M5=1; M6=1; M7=1; M8=1;
  6317  04A9  3001               	movlw	1
  6318  04AA  00DD               	movwf	_M1
  6319  04AB  3000               	movlw	0
  6320  04AC  00DE               	movwf	_M1+1
  6321  04AD  3001               	movlw	1
  6322  04AE  0021               	movlb	1	; select bank1
  6323  04AF  00D8               	movwf	_M2^(0+128)
  6324  04B0  3000               	movlw	0
  6325  04B1  00D9               	movwf	(_M2^(0+128)+1)
  6326  04B2  3001               	movlw	1
  6327  04B3  00D6               	movwf	_M3^(0+128)
  6328  04B4  3000               	movlw	0
  6329  04B5  00D7               	movwf	(_M3^(0+128)+1)
  6330  04B6  3001               	movlw	1
  6331  04B7  00D4               	movwf	_M4^(0+128)
  6332  04B8  3000               	movlw	0
  6333  04B9  00D5               	movwf	(_M4^(0+128)+1)
  6334  04BA  3001               	movlw	1
  6335  04BB  00D2               	movwf	_M5^(0+128)
  6336  04BC  3000               	movlw	0
  6337  04BD  00D3               	movwf	(_M5^(0+128)+1)
  6338  04BE  3001               	movlw	1
  6339  04BF  00D0               	movwf	_M6^(0+128)
  6340  04C0  3000               	movlw	0
  6341  04C1  00D1               	movwf	(_M6^(0+128)+1)
  6342  04C2  3001               	movlw	1
  6343  04C3  00CE               	movwf	_M7^(0+128)
  6344  04C4  3000               	movlw	0
  6345  04C5  00CF               	movwf	(_M7^(0+128)+1)
  6346  04C6  3001               	movlw	1
  6347  04C7  00CC               	movwf	_M8^(0+128)
  6348  04C8  3000               	movlw	0
  6349  04C9  00CD               	movwf	(_M8^(0+128)+1)
  6350                           
  6351                           ;actiontouchpanel.h: 8: int preventFlag=0;
  6352  04CA  0020               	movlb	0	; select bank0
  6353  04CB  01AA               	clrf	actiontouchPanel@preventFlag
  6354  04CC  01AB               	clrf	actiontouchPanel@preventFlag+1
  6355                           
  6356                           ;actiontouchpanel.h: 9: int switch_status = sw_status - '0';
  6357  04CD  0823               	movf	actiontouchPanel@sw_status,w
  6358  04CE  3ED0               	addlw	208
  6359  04CF  00AF               	movwf	actiontouchPanel@switch_status
  6360  04D0  30FF               	movlw	255
  6361  04D1  1803               	skipnc
  6362  04D2  3000               	movlw	0
  6363  04D3  00B0               	movwf	actiontouchPanel@switch_status+1
  6364                           
  6365                           ;actiontouchpanel.h: 10: int integer_switch_speed = speeds - '0';
  6366  04D4  0824               	movf	actiontouchPanel@speeds,w
  6367  04D5  3ED0               	addlw	208
  6368  04D6  00AD               	movwf	actiontouchPanel@integer_switch_speed
  6369  04D7  30FF               	movlw	255
  6370  04D8  1803               	skipnc
  6371  04D9  3000               	movlw	0
  6372  04DA  00AE               	movwf	actiontouchPanel@integer_switch_speed+1
  6373                           
  6374                           ;actiontouchpanel.h: 11: int SwNum = Switch_Num - '@';
  6375  04DB  082C               	movf	actiontouchPanel@Switch_Num,w
  6376  04DC  3EC0               	addlw	192
  6377  04DD  00A8               	movwf	actiontouchPanel@SwNum
  6378  04DE  30FF               	movlw	255
  6379  04DF  1803               	skipnc
  6380  04E0  3000               	movlw	0
  6381  04E1  00A9               	movwf	actiontouchPanel@SwNum+1
  6382                           
  6383                           ;actiontouchpanel.h: 13: char ch_sw_num = SwNum +'0';
  6384  04E2  0828               	movf	actiontouchPanel@SwNum,w
  6385  04E3  3E30               	addlw	48
  6386  04E4  00A5               	movwf	??_actiontouchPanel
  6387  04E5  0825               	movf	??_actiontouchPanel,w
  6388  04E6  00A7               	movwf	actiontouchPanel@ch_sw_num
  6389                           
  6390                           ;actiontouchpanel.h: 15: if(checkFlag == 1 )
  6391  04E7  0361               	decf	_checkFlag,w
  6392  04E8  0462               	iorwf	_checkFlag+1,w
  6393  04E9  1D03               	btfss	3,2
  6394  04EA  2CF1               	goto	l3320
  6395                           
  6396                           ;actiontouchpanel.h: 16: {
  6397                           ;actiontouchpanel.h: 18: checkFlag = 0;
  6398  04EB  01E1               	clrf	_checkFlag
  6399  04EC  01E2               	clrf	_checkFlag+1
  6400                           
  6401                           ;actiontouchpanel.h: 19: preventFlag = 2;
  6402  04ED  3002               	movlw	2
  6403  04EE  00AA               	movwf	actiontouchPanel@preventFlag
  6404  04EF  3000               	movlw	0
  6405  04F0  00AB               	movwf	actiontouchPanel@preventFlag+1
  6406  04F1                     l3320:	
  6407                           
  6408                           ;actiontouchpanel.h: 21: }
  6409                           ;actiontouchpanel.h: 23: if(CheckFlag2 == 1 && preventFlag!=2 )
  6410  04F1  035F               	decf	_CheckFlag2,w
  6411  04F2  0460               	iorwf	_CheckFlag2+1,w
  6412  04F3  1D03               	btfss	3,2
  6413  04F4  0008               	return
  6414  04F5  3002               	movlw	2
  6415  04F6  062A               	xorwf	actiontouchPanel@preventFlag,w
  6416  04F7  042B               	iorwf	actiontouchPanel@preventFlag+1,w
  6417  04F8  1903               	btfsc	3,2
  6418  04F9  0008               	return
  6419                           
  6420                           ;actiontouchpanel.h: 24: {
  6421                           ;actiontouchpanel.h: 26: PreventFlag_ManualTo_Panel=0;
  6422  04FA  0021               	movlb	1	; select bank1
  6423  04FB  01DA               	clrf	_PreventFlag_ManualTo_Panel^(0+128)
  6424  04FC  01DB               	clrf	(_PreventFlag_ManualTo_Panel+1)^(0+128)
  6425                           
  6426                           ;actiontouchpanel.h: 27: checkFlag=0;
  6427  04FD  0020               	movlb	0	; select bank0
  6428  04FE  01E1               	clrf	_checkFlag
  6429  04FF  01E2               	clrf	_checkFlag+1
  6430                           
  6431                           ;actiontouchpanel.h: 28: preventFlag=0;
  6432  0500  01AA               	clrf	actiontouchPanel@preventFlag
  6433  0501  01AB               	clrf	actiontouchPanel@preventFlag+1
  6434                           
  6435                           ;actiontouchpanel.h: 29: CheckFlag2=0;
  6436  0502  01DF               	clrf	_CheckFlag2
  6437  0503  01E0               	clrf	_CheckFlag2+1
  6438                           
  6439                           ;actiontouchpanel.h: 30: PreventFlag_Touch=2;
  6440  0504  3002               	movlw	2
  6441  0505  0021               	movlb	1	; select bank1
  6442  0506  00DE               	movwf	_PreventFlag_Touch^(0+128)
  6443  0507  3000               	movlw	0
  6444  0508  00DF               	movwf	(_PreventFlag_Touch^(0+128)+1)
  6445                           
  6446                           ;actiontouchpanel.h: 34: switch(Switch_Num) {
  6447  0509  2F1E               	goto	l3460
  6448  050A                     l3328:	
  6449                           ;actiontouchpanel.h: 36: case 'A':
  6450                           
  6451                           
  6452                           ;actiontouchpanel.h: 37: {
  6453                           ;actiontouchpanel.h: 38: if(M1 == 1 && copy_parentalLockBuffer[1] == '0' )
  6454  050A  0020               	movlb	0	; select bank0
  6455  050B  035D               	decf	_M1,w
  6456  050C  045E               	iorwf	_M1+1,w
  6457  050D  1D03               	btfss	3,2
  6458  050E  0008               	return
  6459  050F  3030               	movlw	48
  6460  0510  0021               	movlb	1	; select bank1
  6461  0511  0621               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  6462  0512  1D03               	btfss	3,2
  6463  0513  0008               	return
  6464                           
  6465                           ;actiontouchpanel.h: 39: {
  6466                           ;actiontouchpanel.h: 40: sendFeedback_TO_Gateway(sw_status,'1');
  6467  0514  3031               	movlw	49
  6468  0515  0020               	movlb	0	; select bank0
  6469  0516  00A5               	movwf	??_actiontouchPanel
  6470  0517  0825               	movf	??_actiontouchPanel,w
  6471  0518  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6472  0519  0823               	movf	actiontouchPanel@sw_status,w
  6473  051A  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6474                           
  6475                           ;actiontouchpanel.h: 41: RB1 = switch_status;
  6476  051D  0020               	movlb	0	; select bank0
  6477  051E  1C2F               	btfss	actiontouchPanel@switch_status,0
  6478  051F  2D23               	goto	u3890
  6479  0520  0020               	movlb	0	; select bank0
  6480  0521  148D               	bsf	13,1	;volatile
  6481  0522  2D25               	goto	l3336
  6482  0523                     u3890:	
  6483  0523  0020               	movlb	0	; select bank0
  6484  0524  108D               	bcf	13,1	;volatile
  6485  0525                     l3336:	
  6486                           
  6487                           ;actiontouchpanel.h: 42: M1 = 0;
  6488  0525  01DD               	clrf	_M1
  6489  0526  01DE               	clrf	_M1+1
  6490                           
  6491                           ;actiontouchpanel.h: 43: }
  6492                           ;actiontouchpanel.h: 44: }
  6493                           ;actiontouchpanel.h: 46: break;
  6494  0527  0008               	return
  6495  0528                     l3338:	
  6496                           ;actiontouchpanel.h: 47: case 'B':
  6497                           
  6498                           
  6499                           ;actiontouchpanel.h: 48: {
  6500                           ;actiontouchpanel.h: 49: if(M2 == 1 && copy_parentalLockBuffer[2] == '0' )
  6501  0528  0021               	movlb	1	; select bank1
  6502  0529  0358               	decf	_M2^(0+128),w
  6503  052A  0459               	iorwf	(_M2+1)^(0+128),w
  6504  052B  1D03               	btfss	3,2
  6505  052C  0008               	return
  6506  052D  3030               	movlw	48
  6507  052E  0622               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  6508  052F  1D03               	btfss	3,2
  6509  0530  0008               	return
  6510                           
  6511                           ;actiontouchpanel.h: 50: {
  6512                           ;actiontouchpanel.h: 51: sendFeedback_TO_Gateway(sw_status,'2');
  6513  0531  3032               	movlw	50
  6514  0532  0020               	movlb	0	; select bank0
  6515  0533  00A5               	movwf	??_actiontouchPanel
  6516  0534  0825               	movf	??_actiontouchPanel,w
  6517  0535  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6518  0536  0823               	movf	actiontouchPanel@sw_status,w
  6519  0537  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6520                           
  6521                           ;actiontouchpanel.h: 52: M2 = 0;
  6522  053A  0021               	movlb	1	; select bank1
  6523  053B  01D8               	clrf	_M2^(0+128)
  6524  053C  01D9               	clrf	(_M2+1)^(0+128)
  6525                           
  6526                           ;actiontouchpanel.h: 53: RC1 = switch_status;
  6527  053D  0020               	movlb	0	; select bank0
  6528  053E  1C2F               	btfss	actiontouchPanel@switch_status,0
  6529  053F  2D43               	goto	u3930
  6530  0540  0020               	movlb	0	; select bank0
  6531  0541  148E               	bsf	14,1	;volatile
  6532  0542  0008               	return
  6533  0543                     u3930:	
  6534  0543  0020               	movlb	0	; select bank0
  6535  0544  108E               	bcf	14,1	;volatile
  6536                           
  6537                           ;actiontouchpanel.h: 54: }
  6538                           ;actiontouchpanel.h: 55: }
  6539                           ;actiontouchpanel.h: 57: break;
  6540  0545  0008               	return
  6541  0546                     l3348:	
  6542                           ;actiontouchpanel.h: 58: case 'C':
  6543                           
  6544                           
  6545                           ;actiontouchpanel.h: 59: {
  6546                           ;actiontouchpanel.h: 60: if(M3 == 1 && copy_parentalLockBuffer[3] == '0' )
  6547  0546  0021               	movlb	1	; select bank1
  6548  0547  0356               	decf	_M3^(0+128),w
  6549  0548  0457               	iorwf	(_M3+1)^(0+128),w
  6550  0549  1D03               	btfss	3,2
  6551  054A  0008               	return
  6552  054B  3030               	movlw	48
  6553  054C  0623               	xorwf	(_copy_parentalLockBuffer^(0+128)+3),w
  6554  054D  1D03               	btfss	3,2
  6555  054E  0008               	return
  6556                           
  6557                           ;actiontouchpanel.h: 61: {
  6558                           ;actiontouchpanel.h: 62: sendFeedback_TO_Gateway(sw_status,'3');
  6559  054F  3033               	movlw	51
  6560  0550  0020               	movlb	0	; select bank0
  6561  0551  00A5               	movwf	??_actiontouchPanel
  6562  0552  0825               	movf	??_actiontouchPanel,w
  6563  0553  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6564  0554  0823               	movf	actiontouchPanel@sw_status,w
  6565  0555  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6566                           
  6567                           ;actiontouchpanel.h: 63: RA0 = switch_status;
  6568  0558  0020               	movlb	0	; select bank0
  6569  0559  1C2F               	btfss	actiontouchPanel@switch_status,0
  6570  055A  2D5E               	goto	u3970
  6571  055B  0020               	movlb	0	; select bank0
  6572  055C  140C               	bsf	12,0	;volatile
  6573  055D  2D60               	goto	l3356
  6574  055E                     u3970:	
  6575  055E  0020               	movlb	0	; select bank0
  6576  055F  100C               	bcf	12,0	;volatile
  6577  0560                     l3356:	
  6578                           
  6579                           ;actiontouchpanel.h: 64: M1 = 0;
  6580  0560  01DD               	clrf	_M1
  6581  0561  01DE               	clrf	_M1+1
  6582                           
  6583                           ;actiontouchpanel.h: 65: }
  6584                           ;actiontouchpanel.h: 66: }
  6585                           ;actiontouchpanel.h: 67: break;
  6586  0562  0008               	return
  6587  0563                     l3358:	
  6588                           ;actiontouchpanel.h: 68: case 'D':
  6589                           
  6590                           
  6591                           ;actiontouchpanel.h: 69: {
  6592                           ;actiontouchpanel.h: 70: if(M4 == 1 && copy_parentalLockBuffer[4] == '0')
  6593  0563  0021               	movlb	1	; select bank1
  6594  0564  0354               	decf	_M4^(0+128),w
  6595  0565  0455               	iorwf	(_M4+1)^(0+128),w
  6596  0566  1D03               	btfss	3,2
  6597  0567  0008               	return
  6598  0568  3030               	movlw	48
  6599  0569  0624               	xorwf	(_copy_parentalLockBuffer^(0+128)+4),w
  6600  056A  1D03               	btfss	3,2
  6601  056B  0008               	return
  6602                           
  6603                           ;actiontouchpanel.h: 71: {
  6604                           ;actiontouchpanel.h: 72: sendFeedback_TO_Gateway(sw_status,'4');
  6605  056C  3034               	movlw	52
  6606  056D  0020               	movlb	0	; select bank0
  6607  056E  00A5               	movwf	??_actiontouchPanel
  6608  056F  0825               	movf	??_actiontouchPanel,w
  6609  0570  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6610  0571  0823               	movf	actiontouchPanel@sw_status,w
  6611  0572  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6612                           
  6613                           ;actiontouchpanel.h: 73: M4 = 0;
  6614  0575  0021               	movlb	1	; select bank1
  6615  0576  01D4               	clrf	_M4^(0+128)
  6616  0577  01D5               	clrf	(_M4+1)^(0+128)
  6617                           
  6618                           ;actiontouchpanel.h: 74: RF1 = switch_status;
  6619  0578  0020               	movlb	0	; select bank0
  6620  0579  1C2F               	btfss	actiontouchPanel@switch_status,0
  6621  057A  2D7E               	goto	u4010
  6622  057B  0025               	movlb	5	; select bank5
  6623  057C  148C               	bsf	12,1	;volatile
  6624  057D  0008               	return
  6625  057E                     u4010:	
  6626  057E  0025               	movlb	5	; select bank5
  6627  057F  108C               	bcf	12,1	;volatile
  6628                           
  6629                           ;actiontouchpanel.h: 75: }
  6630                           ;actiontouchpanel.h: 77: }
  6631                           ;actiontouchpanel.h: 78: break;
  6632  0580  0008               	return
  6633  0581                     l3368:	
  6634                           ;actiontouchpanel.h: 79: case 'E':
  6635                           
  6636                           
  6637                           ;actiontouchpanel.h: 80: {
  6638                           ;actiontouchpanel.h: 81: if(M5 == 1 && copy_parentalLockBuffer[5] == '0')
  6639  0581  0021               	movlb	1	; select bank1
  6640  0582  0352               	decf	_M5^(0+128),w
  6641  0583  0453               	iorwf	(_M5+1)^(0+128),w
  6642  0584  1D03               	btfss	3,2
  6643  0585  0008               	return
  6644  0586  3030               	movlw	48
  6645  0587  0625               	xorwf	(_copy_parentalLockBuffer^(0+128)+5),w
  6646  0588  1D03               	btfss	3,2
  6647  0589  0008               	return
  6648                           
  6649                           ;actiontouchpanel.h: 82: {
  6650                           ;actiontouchpanel.h: 83: sendFeedback_TO_Gateway(sw_status,'5');
  6651  058A  3035               	movlw	53
  6652  058B  0020               	movlb	0	; select bank0
  6653  058C  00A5               	movwf	??_actiontouchPanel
  6654  058D  0825               	movf	??_actiontouchPanel,w
  6655  058E  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6656  058F  0823               	movf	actiontouchPanel@sw_status,w
  6657  0590  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6658                           
  6659                           ;actiontouchpanel.h: 84: M5 = 0;
  6660  0593  0021               	movlb	1	; select bank1
  6661  0594  01D2               	clrf	_M5^(0+128)
  6662  0595  01D3               	clrf	(_M5+1)^(0+128)
  6663                           
  6664                           ;actiontouchpanel.h: 85: RA3 = switch_status;
  6665  0596  0020               	movlb	0	; select bank0
  6666  0597  1C2F               	btfss	actiontouchPanel@switch_status,0
  6667  0598  2D9C               	goto	u4050
  6668  0599  0020               	movlb	0	; select bank0
  6669  059A  158C               	bsf	12,3	;volatile
  6670  059B  0008               	return
  6671  059C                     u4050:	
  6672  059C  0020               	movlb	0	; select bank0
  6673  059D  118C               	bcf	12,3	;volatile
  6674                           
  6675                           ;actiontouchpanel.h: 87: }
  6676                           ;actiontouchpanel.h: 88: }
  6677                           ;actiontouchpanel.h: 89: break;
  6678  059E  0008               	return
  6679  059F                     l3378:	
  6680                           ;actiontouchpanel.h: 90: case 'F':
  6681                           
  6682                           
  6683                           ;actiontouchpanel.h: 91: {
  6684                           ;actiontouchpanel.h: 92: if(M6 == 1 && copy_parentalLockBuffer[6] == '0')
  6685  059F  0021               	movlb	1	; select bank1
  6686  05A0  0350               	decf	_M6^(0+128),w
  6687  05A1  0451               	iorwf	(_M6+1)^(0+128),w
  6688  05A2  1D03               	btfss	3,2
  6689  05A3  0008               	return
  6690  05A4  3030               	movlw	48
  6691  05A5  0626               	xorwf	(_copy_parentalLockBuffer^(0+128)+6),w
  6692  05A6  1D03               	btfss	3,2
  6693  05A7  0008               	return
  6694                           
  6695                           ;actiontouchpanel.h: 93: {
  6696                           ;actiontouchpanel.h: 94: sendFeedback_TO_Gateway(sw_status,'6');
  6697  05A8  3036               	movlw	54
  6698  05A9  0020               	movlb	0	; select bank0
  6699  05AA  00A5               	movwf	??_actiontouchPanel
  6700  05AB  0825               	movf	??_actiontouchPanel,w
  6701  05AC  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6702  05AD  0823               	movf	actiontouchPanel@sw_status,w
  6703  05AE  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6704                           
  6705                           ;actiontouchpanel.h: 95: M6 = 0;
  6706  05B1  0021               	movlb	1	; select bank1
  6707  05B2  01D0               	clrf	_M6^(0+128)
  6708  05B3  01D1               	clrf	(_M6+1)^(0+128)
  6709                           
  6710                           ;actiontouchpanel.h: 96: RA1 = switch_status;
  6711  05B4  0020               	movlb	0	; select bank0
  6712  05B5  1C2F               	btfss	actiontouchPanel@switch_status,0
  6713  05B6  2DBA               	goto	u4090
  6714  05B7  0020               	movlb	0	; select bank0
  6715  05B8  148C               	bsf	12,1	;volatile
  6716  05B9  0008               	return
  6717  05BA                     u4090:	
  6718  05BA  0020               	movlb	0	; select bank0
  6719  05BB  108C               	bcf	12,1	;volatile
  6720                           
  6721                           ;actiontouchpanel.h: 99: }
  6722                           ;actiontouchpanel.h: 100: }
  6723                           ;actiontouchpanel.h: 101: break;
  6724  05BC  0008               	return
  6725  05BD                     l3388:	
  6726                           ;actiontouchpanel.h: 102: case 'P':
  6727                           
  6728                           
  6729                           ;actiontouchpanel.h: 103: {
  6730                           ;actiontouchpanel.h: 105: if(M7 == 1 && copy_parentalLockBuffer[7] == '0') {
  6731  05BD  0021               	movlb	1	; select bank1
  6732  05BE  034E               	decf	_M7^(0+128),w
  6733  05BF  044F               	iorwf	(_M7+1)^(0+128),w
  6734  05C0  1D03               	btfss	3,2
  6735  05C1  0008               	return
  6736  05C2  3030               	movlw	48
  6737  05C3  0627               	xorwf	(_copy_parentalLockBuffer^(0+128)+7),w
  6738  05C4  1D03               	btfss	3,2
  6739  05C5  0008               	return
  6740                           
  6741                           ;actiontouchpanel.h: 106: sendFeedback_TO_Gateway(sw_status,'7');
  6742  05C6  3037               	movlw	55
  6743  05C7  0020               	movlb	0	; select bank0
  6744  05C8  00A5               	movwf	??_actiontouchPanel
  6745  05C9  0825               	movf	??_actiontouchPanel,w
  6746  05CA  00A0               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6747  05CB  0823               	movf	actiontouchPanel@sw_status,w
  6748  05CC  3188  200B  3184   	fcall	_sendFeedback_TO_Gateway
  6749                           
  6750                           ;actiontouchpanel.h: 107: M7 = 0;
  6751  05CF  0021               	movlb	1	; select bank1
  6752  05D0  01CE               	clrf	_M7^(0+128)
  6753  05D1  01CF               	clrf	(_M7+1)^(0+128)
  6754                           
  6755                           ;actiontouchpanel.h: 108: _delay((unsigned long)((1)*(16000000/4000.0)));
  6756  05D2  3006               	movlw	6
  6757  05D3  0020               	movlb	0	; select bank0
  6758  05D4  00A5               	movwf	??_actiontouchPanel
  6759  05D5  3030               	movlw	48
  6760  05D6                     u6247:	
  6761  05D6  0B89               	decfsz	9,f
  6762  05D7  2DD6               	goto	u6247
  6763  05D8  0BA5               	decfsz	??_actiontouchPanel,f
  6764  05D9  2DD6               	goto	u6247
  6765  05DA  0000               	nop
  6766                           
  6767                           ;actiontouchpanel.h: 109: if(sw_status == '0')
  6768  05DB  3030               	movlw	48
  6769  05DC  0020               	movlb	0	; select bank0
  6770  05DD  0623               	xorwf	actiontouchPanel@sw_status,w
  6771  05DE  1D03               	btfss	3,2
  6772  05DF  2E17               	goto	l3408
  6773                           
  6774                           ;actiontouchpanel.h: 110: {
  6775                           ;actiontouchpanel.h: 111: _delay((unsigned long)((1)*(16000000/4000.0)));
  6776  05E0  3006               	movlw	6
  6777  05E1  0020               	movlb	0	; select bank0
  6778  05E2  00A5               	movwf	??_actiontouchPanel
  6779  05E3  3030               	movlw	48
  6780  05E4                     u6257:	
  6781  05E4  0B89               	decfsz	9,f
  6782  05E5  2DE4               	goto	u6257
  6783  05E6  0BA5               	decfsz	??_actiontouchPanel,f
  6784  05E7  2DE4               	goto	u6257
  6785  05E8  0000               	nop
  6786                           
  6787                           ;actiontouchpanel.h: 112: RB4=0;
  6788  05E9  0020               	movlb	0	; select bank0
  6789  05EA  120D               	bcf	13,4	;volatile
  6790                           
  6791                           ;actiontouchpanel.h: 113: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6792  05EB  3015               	movlw	21
  6793  05EC  0020               	movlb	0	; select bank0
  6794  05ED  00A6               	movwf	??_actiontouchPanel+1
  6795  05EE  304B               	movlw	75
  6796  05EF  00A5               	movwf	??_actiontouchPanel
  6797  05F0  30BE               	movlw	190
  6798  05F1                     u6267:	
  6799  05F1  0B89               	decfsz	9,f
  6800  05F2  2DF1               	goto	u6267
  6801  05F3  0BA5               	decfsz	??_actiontouchPanel,f
  6802  05F4  2DF1               	goto	u6267
  6803  05F5  0BA6               	decfsz	??_actiontouchPanel+1,f
  6804  05F6  2DF1               	goto	u6267
  6805  05F7  0000               	nop
  6806                           
  6807                           ;actiontouchpanel.h: 114: RB2=0;
  6808  05F8  0020               	movlb	0	; select bank0
  6809  05F9  110D               	bcf	13,2	;volatile
  6810                           
  6811                           ;actiontouchpanel.h: 115: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6812  05FA  3015               	movlw	21
  6813  05FB  0020               	movlb	0	; select bank0
  6814  05FC  00A6               	movwf	??_actiontouchPanel+1
  6815  05FD  304B               	movlw	75
  6816  05FE  00A5               	movwf	??_actiontouchPanel
  6817  05FF  30BE               	movlw	190
  6818  0600                     u6277:	
  6819  0600  0B89               	decfsz	9,f
  6820  0601  2E00               	goto	u6277
  6821  0602  0BA5               	decfsz	??_actiontouchPanel,f
  6822  0603  2E00               	goto	u6277
  6823  0604  0BA6               	decfsz	??_actiontouchPanel+1,f
  6824  0605  2E00               	goto	u6277
  6825  0606  0000               	nop
  6826                           
  6827                           ;actiontouchpanel.h: 116: RB0=0;
  6828  0607  0020               	movlb	0	; select bank0
  6829  0608  100D               	bcf	13,0	;volatile
  6830                           
  6831                           ;actiontouchpanel.h: 117: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6832  0609  3015               	movlw	21
  6833  060A  0020               	movlb	0	; select bank0
  6834  060B  00A6               	movwf	??_actiontouchPanel+1
  6835  060C  304B               	movlw	75
  6836  060D  00A5               	movwf	??_actiontouchPanel
  6837  060E  30BE               	movlw	190
  6838  060F                     u6287:	
  6839  060F  0B89               	decfsz	9,f
  6840  0610  2E0F               	goto	u6287
  6841  0611  0BA5               	decfsz	??_actiontouchPanel,f
  6842  0612  2E0F               	goto	u6287
  6843  0613  0BA6               	decfsz	??_actiontouchPanel+1,f
  6844  0614  2E0F               	goto	u6287
  6845  0615  0000               	nop
  6846                           
  6847                           ;actiontouchpanel.h: 118: }
  6848  0616  0008               	return
  6849  0617                     l3408:	
  6850                           
  6851                           ;actiontouchpanel.h: 119: else if(sw_status == '1'){
  6852  0617  3031               	movlw	49
  6853  0618  0020               	movlb	0	; select bank0
  6854  0619  0623               	xorwf	actiontouchPanel@sw_status,w
  6855  061A  1D03               	btfss	3,2
  6856  061B  0008               	return
  6857                           
  6858                           ;actiontouchpanel.h: 120: if(integer_switch_speed == 1)
  6859  061C  032D               	decf	actiontouchPanel@integer_switch_speed,w
  6860  061D  042E               	iorwf	actiontouchPanel@integer_switch_speed+1,w
  6861  061E  1D03               	btfss	3,2
  6862  061F  2E5C               	goto	l3422
  6863                           
  6864                           ;actiontouchpanel.h: 121: {
  6865                           ;actiontouchpanel.h: 122: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6866  0620  3015               	movlw	21
  6867  0621  0020               	movlb	0	; select bank0
  6868  0622  00A6               	movwf	??_actiontouchPanel+1
  6869  0623  304B               	movlw	75
  6870  0624  00A5               	movwf	??_actiontouchPanel
  6871  0625  30BE               	movlw	190
  6872  0626                     u6297:	
  6873  0626  0B89               	decfsz	9,f
  6874  0627  2E26               	goto	u6297
  6875  0628  0BA5               	decfsz	??_actiontouchPanel,f
  6876  0629  2E26               	goto	u6297
  6877  062A  0BA6               	decfsz	??_actiontouchPanel+1,f
  6878  062B  2E26               	goto	u6297
  6879  062C  0000               	nop
  6880                           
  6881                           ;actiontouchpanel.h: 123: RA4 = 1;
  6882  062D  0020               	movlb	0	; select bank0
  6883  062E  160C               	bsf	12,4	;volatile
  6884                           
  6885                           ;actiontouchpanel.h: 124: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6886  062F  3015               	movlw	21
  6887  0630  0020               	movlb	0	; select bank0
  6888  0631  00A6               	movwf	??_actiontouchPanel+1
  6889  0632  304B               	movlw	75
  6890  0633  00A5               	movwf	??_actiontouchPanel
  6891  0634  30BE               	movlw	190
  6892  0635                     u6307:	
  6893  0635  0B89               	decfsz	9,f
  6894  0636  2E35               	goto	u6307
  6895  0637  0BA5               	decfsz	??_actiontouchPanel,f
  6896  0638  2E35               	goto	u6307
  6897  0639  0BA6               	decfsz	??_actiontouchPanel+1,f
  6898  063A  2E35               	goto	u6307
  6899  063B  0000               	nop
  6900                           
  6901                           ;actiontouchpanel.h: 125: RB2=0;
  6902  063C  0020               	movlb	0	; select bank0
  6903  063D  110D               	bcf	13,2	;volatile
  6904                           
  6905                           ;actiontouchpanel.h: 126: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6906  063E  3015               	movlw	21
  6907  063F  0020               	movlb	0	; select bank0
  6908  0640  00A6               	movwf	??_actiontouchPanel+1
  6909  0641  304B               	movlw	75
  6910  0642  00A5               	movwf	??_actiontouchPanel
  6911  0643  30BE               	movlw	190
  6912  0644                     u6317:	
  6913  0644  0B89               	decfsz	9,f
  6914  0645  2E44               	goto	u6317
  6915  0646  0BA5               	decfsz	??_actiontouchPanel,f
  6916  0647  2E44               	goto	u6317
  6917  0648  0BA6               	decfsz	??_actiontouchPanel+1,f
  6918  0649  2E44               	goto	u6317
  6919  064A  0000               	nop
  6920                           
  6921                           ;actiontouchpanel.h: 127: RB0=0;
  6922  064B  0020               	movlb	0	; select bank0
  6923  064C  100D               	bcf	13,0	;volatile
  6924                           
  6925                           ;actiontouchpanel.h: 128: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6926  064D  3015               	movlw	21
  6927  064E  0020               	movlb	0	; select bank0
  6928  064F  00A6               	movwf	??_actiontouchPanel+1
  6929  0650  304B               	movlw	75
  6930  0651  00A5               	movwf	??_actiontouchPanel
  6931  0652  30BE               	movlw	190
  6932  0653                     u6327:	
  6933  0653  0B89               	decfsz	9,f
  6934  0654  2E53               	goto	u6327
  6935  0655  0BA5               	decfsz	??_actiontouchPanel,f
  6936  0656  2E53               	goto	u6327
  6937  0657  0BA6               	decfsz	??_actiontouchPanel+1,f
  6938  0658  2E53               	goto	u6327
  6939  0659  0000               	nop
  6940                           
  6941                           ;actiontouchpanel.h: 129: RB4=1;
  6942  065A  0020               	movlb	0	; select bank0
  6943  065B  160D               	bsf	13,4	;volatile
  6944  065C                     l3422:	
  6945                           
  6946                           ;actiontouchpanel.h: 130: }
  6947                           ;actiontouchpanel.h: 131: if(speeds == '2')
  6948  065C  3032               	movlw	50
  6949  065D  0624               	xorwf	actiontouchPanel@speeds,w
  6950  065E  1D03               	btfss	3,2
  6951  065F  2E9B               	goto	l3434
  6952                           
  6953                           ;actiontouchpanel.h: 132: {
  6954                           ;actiontouchpanel.h: 133: _delay((unsigned long)((100)*(16000000/4000.0)));
  6955  0660  3003               	movlw	3
  6956  0661  0020               	movlb	0	; select bank0
  6957  0662  00A6               	movwf	??_actiontouchPanel+1
  6958  0663  3008               	movlw	8
  6959  0664  00A5               	movwf	??_actiontouchPanel
  6960  0665  3077               	movlw	119
  6961  0666                     u6337:	
  6962  0666  0B89               	decfsz	9,f
  6963  0667  2E66               	goto	u6337
  6964  0668  0BA5               	decfsz	??_actiontouchPanel,f
  6965  0669  2E66               	goto	u6337
  6966  066A  0BA6               	decfsz	??_actiontouchPanel+1,f
  6967  066B  2E66               	goto	u6337
  6968                           
  6969                           ;actiontouchpanel.h: 134: RA4 = 1;
  6970  066C  0020               	movlb	0	; select bank0
  6971  066D  160C               	bsf	12,4	;volatile
  6972                           
  6973                           ;actiontouchpanel.h: 135: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6974  066E  3015               	movlw	21
  6975  066F  0020               	movlb	0	; select bank0
  6976  0670  00A6               	movwf	??_actiontouchPanel+1
  6977  0671  304B               	movlw	75
  6978  0672  00A5               	movwf	??_actiontouchPanel
  6979  0673  30BE               	movlw	190
  6980  0674                     u6347:	
  6981  0674  0B89               	decfsz	9,f
  6982  0675  2E74               	goto	u6347
  6983  0676  0BA5               	decfsz	??_actiontouchPanel,f
  6984  0677  2E74               	goto	u6347
  6985  0678  0BA6               	decfsz	??_actiontouchPanel+1,f
  6986  0679  2E74               	goto	u6347
  6987  067A  0000               	nop
  6988                           
  6989                           ;actiontouchpanel.h: 136: RB4=0;
  6990  067B  0020               	movlb	0	; select bank0
  6991  067C  120D               	bcf	13,4	;volatile
  6992                           
  6993                           ;actiontouchpanel.h: 137: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6994  067D  3015               	movlw	21
  6995  067E  0020               	movlb	0	; select bank0
  6996  067F  00A6               	movwf	??_actiontouchPanel+1
  6997  0680  304B               	movlw	75
  6998  0681  00A5               	movwf	??_actiontouchPanel
  6999  0682  30BE               	movlw	190
  7000  0683                     u6357:	
  7001  0683  0B89               	decfsz	9,f
  7002  0684  2E83               	goto	u6357
  7003  0685  0BA5               	decfsz	??_actiontouchPanel,f
  7004  0686  2E83               	goto	u6357
  7005  0687  0BA6               	decfsz	??_actiontouchPanel+1,f
  7006  0688  2E83               	goto	u6357
  7007  0689  0000               	nop
  7008                           
  7009                           ;actiontouchpanel.h: 138: RB0=0;
  7010  068A  0020               	movlb	0	; select bank0
  7011  068B  100D               	bcf	13,0	;volatile
  7012                           
  7013                           ;actiontouchpanel.h: 139: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7014  068C  3015               	movlw	21
  7015  068D  0020               	movlb	0	; select bank0
  7016  068E  00A6               	movwf	??_actiontouchPanel+1
  7017  068F  304B               	movlw	75
  7018  0690  00A5               	movwf	??_actiontouchPanel
  7019  0691  30BE               	movlw	190
  7020  0692                     u6367:	
  7021  0692  0B89               	decfsz	9,f
  7022  0693  2E92               	goto	u6367
  7023  0694  0BA5               	decfsz	??_actiontouchPanel,f
  7024  0695  2E92               	goto	u6367
  7025  0696  0BA6               	decfsz	??_actiontouchPanel+1,f
  7026  0697  2E92               	goto	u6367
  7027  0698  0000               	nop
  7028                           
  7029                           ;actiontouchpanel.h: 140: RB2=1;
  7030  0699  0020               	movlb	0	; select bank0
  7031  069A  150D               	bsf	13,2	;volatile
  7032  069B                     l3434:	
  7033                           
  7034                           ;actiontouchpanel.h: 142: }
  7035                           ;actiontouchpanel.h: 143: if(integer_switch_speed == 3)
  7036  069B  3003               	movlw	3
  7037  069C  062D               	xorwf	actiontouchPanel@integer_switch_speed,w
  7038  069D  042E               	iorwf	actiontouchPanel@integer_switch_speed+1,w
  7039  069E  1D03               	btfss	3,2
  7040  069F  2EDB               	goto	l3446
  7041                           
  7042                           ;actiontouchpanel.h: 144: {
  7043                           ;actiontouchpanel.h: 146: RA4 = 1;
  7044  06A0  160C               	bsf	12,4	;volatile
  7045                           
  7046                           ;actiontouchpanel.h: 147: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7047  06A1  3015               	movlw	21
  7048  06A2  0020               	movlb	0	; select bank0
  7049  06A3  00A6               	movwf	??_actiontouchPanel+1
  7050  06A4  304B               	movlw	75
  7051  06A5  00A5               	movwf	??_actiontouchPanel
  7052  06A6  30BE               	movlw	190
  7053  06A7                     u6377:	
  7054  06A7  0B89               	decfsz	9,f
  7055  06A8  2EA7               	goto	u6377
  7056  06A9  0BA5               	decfsz	??_actiontouchPanel,f
  7057  06AA  2EA7               	goto	u6377
  7058  06AB  0BA6               	decfsz	??_actiontouchPanel+1,f
  7059  06AC  2EA7               	goto	u6377
  7060  06AD  0000               	nop
  7061                           
  7062                           ;actiontouchpanel.h: 148: RB0=0;
  7063  06AE  0020               	movlb	0	; select bank0
  7064  06AF  100D               	bcf	13,0	;volatile
  7065                           
  7066                           ;actiontouchpanel.h: 149: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7067  06B0  3015               	movlw	21
  7068  06B1  0020               	movlb	0	; select bank0
  7069  06B2  00A6               	movwf	??_actiontouchPanel+1
  7070  06B3  304B               	movlw	75
  7071  06B4  00A5               	movwf	??_actiontouchPanel
  7072  06B5  30BE               	movlw	190
  7073  06B6                     u6387:	
  7074  06B6  0B89               	decfsz	9,f
  7075  06B7  2EB6               	goto	u6387
  7076  06B8  0BA5               	decfsz	??_actiontouchPanel,f
  7077  06B9  2EB6               	goto	u6387
  7078  06BA  0BA6               	decfsz	??_actiontouchPanel+1,f
  7079  06BB  2EB6               	goto	u6387
  7080  06BC  0000               	nop
  7081                           
  7082                           ;actiontouchpanel.h: 150: RB4=1;
  7083  06BD  0020               	movlb	0	; select bank0
  7084  06BE  160D               	bsf	13,4	;volatile
  7085                           
  7086                           ;actiontouchpanel.h: 151: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7087  06BF  3015               	movlw	21
  7088  06C0  0020               	movlb	0	; select bank0
  7089  06C1  00A6               	movwf	??_actiontouchPanel+1
  7090  06C2  304B               	movlw	75
  7091  06C3  00A5               	movwf	??_actiontouchPanel
  7092  06C4  30BE               	movlw	190
  7093  06C5                     u6397:	
  7094  06C5  0B89               	decfsz	9,f
  7095  06C6  2EC5               	goto	u6397
  7096  06C7  0BA5               	decfsz	??_actiontouchPanel,f
  7097  06C8  2EC5               	goto	u6397
  7098  06C9  0BA6               	decfsz	??_actiontouchPanel+1,f
  7099  06CA  2EC5               	goto	u6397
  7100  06CB  0000               	nop
  7101                           
  7102                           ;actiontouchpanel.h: 152: RB2=1;
  7103  06CC  0020               	movlb	0	; select bank0
  7104  06CD  150D               	bsf	13,2	;volatile
  7105                           
  7106                           ;actiontouchpanel.h: 153: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7107  06CE  3015               	movlw	21
  7108  06CF  0020               	movlb	0	; select bank0
  7109  06D0  00A6               	movwf	??_actiontouchPanel+1
  7110  06D1  304B               	movlw	75
  7111  06D2  00A5               	movwf	??_actiontouchPanel
  7112  06D3  30BE               	movlw	190
  7113  06D4                     u6407:	
  7114  06D4  0B89               	decfsz	9,f
  7115  06D5  2ED4               	goto	u6407
  7116  06D6  0BA5               	decfsz	??_actiontouchPanel,f
  7117  06D7  2ED4               	goto	u6407
  7118  06D8  0BA6               	decfsz	??_actiontouchPanel+1,f
  7119  06D9  2ED4               	goto	u6407
  7120  06DA  0000               	nop
  7121  06DB                     l3446:	
  7122                           
  7123                           ;actiontouchpanel.h: 155: }
  7124                           ;actiontouchpanel.h: 156: if(integer_switch_speed == 4)
  7125  06DB  3004               	movlw	4
  7126  06DC  0020               	movlb	0	; select bank0
  7127  06DD  062D               	xorwf	actiontouchPanel@integer_switch_speed,w
  7128  06DE  042E               	iorwf	actiontouchPanel@integer_switch_speed+1,w
  7129  06DF  1D03               	btfss	3,2
  7130  06E0  0008               	return
  7131                           
  7132                           ;actiontouchpanel.h: 157: {
  7133                           ;actiontouchpanel.h: 158: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7134  06E1  3015               	movlw	21
  7135  06E2  0020               	movlb	0	; select bank0
  7136  06E3  00A6               	movwf	??_actiontouchPanel+1
  7137  06E4  304B               	movlw	75
  7138  06E5  00A5               	movwf	??_actiontouchPanel
  7139  06E6  30BE               	movlw	190
  7140  06E7                     u6417:	
  7141  06E7  0B89               	decfsz	9,f
  7142  06E8  2EE7               	goto	u6417
  7143  06E9  0BA5               	decfsz	??_actiontouchPanel,f
  7144  06EA  2EE7               	goto	u6417
  7145  06EB  0BA6               	decfsz	??_actiontouchPanel+1,f
  7146  06EC  2EE7               	goto	u6417
  7147  06ED  0000               	nop
  7148                           
  7149                           ;actiontouchpanel.h: 159: RA4 = 1;
  7150  06EE  0020               	movlb	0	; select bank0
  7151  06EF  160C               	bsf	12,4	;volatile
  7152                           
  7153                           ;actiontouchpanel.h: 160: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7154  06F0  3015               	movlw	21
  7155  06F1  0020               	movlb	0	; select bank0
  7156  06F2  00A6               	movwf	??_actiontouchPanel+1
  7157  06F3  304B               	movlw	75
  7158  06F4  00A5               	movwf	??_actiontouchPanel
  7159  06F5  30BE               	movlw	190
  7160  06F6                     u6427:	
  7161  06F6  0B89               	decfsz	9,f
  7162  06F7  2EF6               	goto	u6427
  7163  06F8  0BA5               	decfsz	??_actiontouchPanel,f
  7164  06F9  2EF6               	goto	u6427
  7165  06FA  0BA6               	decfsz	??_actiontouchPanel+1,f
  7166  06FB  2EF6               	goto	u6427
  7167  06FC  0000               	nop
  7168                           
  7169                           ;actiontouchpanel.h: 161: RB4=0;
  7170  06FD  0020               	movlb	0	; select bank0
  7171  06FE  120D               	bcf	13,4	;volatile
  7172                           
  7173                           ;actiontouchpanel.h: 162: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7174  06FF  3015               	movlw	21
  7175  0700  0020               	movlb	0	; select bank0
  7176  0701  00A6               	movwf	??_actiontouchPanel+1
  7177  0702  304B               	movlw	75
  7178  0703  00A5               	movwf	??_actiontouchPanel
  7179  0704  30BE               	movlw	190
  7180  0705                     u6437:	
  7181  0705  0B89               	decfsz	9,f
  7182  0706  2F05               	goto	u6437
  7183  0707  0BA5               	decfsz	??_actiontouchPanel,f
  7184  0708  2F05               	goto	u6437
  7185  0709  0BA6               	decfsz	??_actiontouchPanel+1,f
  7186  070A  2F05               	goto	u6437
  7187  070B  0000               	nop
  7188                           
  7189                           ;actiontouchpanel.h: 163: RB2=0;
  7190  070C  0020               	movlb	0	; select bank0
  7191  070D  110D               	bcf	13,2	;volatile
  7192                           
  7193                           ;actiontouchpanel.h: 164: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7194  070E  3015               	movlw	21
  7195  070F  0020               	movlb	0	; select bank0
  7196  0710  00A6               	movwf	??_actiontouchPanel+1
  7197  0711  304B               	movlw	75
  7198  0712  00A5               	movwf	??_actiontouchPanel
  7199  0713  30BE               	movlw	190
  7200  0714                     u6447:	
  7201  0714  0B89               	decfsz	9,f
  7202  0715  2F14               	goto	u6447
  7203  0716  0BA5               	decfsz	??_actiontouchPanel,f
  7204  0717  2F14               	goto	u6447
  7205  0718  0BA6               	decfsz	??_actiontouchPanel+1,f
  7206  0719  2F14               	goto	u6447
  7207  071A  0000               	nop
  7208                           
  7209                           ;actiontouchpanel.h: 165: RB0=1;
  7210  071B  0020               	movlb	0	; select bank0
  7211  071C  140D               	bsf	13,0	;volatile
  7212                           
  7213                           ;actiontouchpanel.h: 175: }
  7214                           
  7215                           ;actiontouchpanel.h: 174: break;
  7216                           
  7217                           ;actiontouchpanel.h: 173: default:
  7218                           
  7219                           ;actiontouchpanel.h: 166: }
  7220                           ;actiontouchpanel.h: 169: }
  7221                           ;actiontouchpanel.h: 170: }
  7222                           ;actiontouchpanel.h: 171: }
  7223                           ;actiontouchpanel.h: 172: break;
  7224  071D  0008               	return
  7225  071E                     l3460:	
  7226  071E  0020               	movlb	0	; select bank0
  7227  071F  082C               	movf	actiontouchPanel@Switch_Num,w
  7228                           
  7229                           ; Switch size 1, requested type "space"
  7230                           ; Number of cases is 7, Range of values is 65 to 80
  7231                           ; switch strategies available:
  7232                           ; Name         Instructions Cycles
  7233                           ; simple_byte           22    12 (average)
  7234                           ; direct_byte           41     9 (fixed)
  7235                           ; jumptable            263     9 (fixed)
  7236                           ;	Chosen strategy is simple_byte
  7237  0720  3A41               	xorlw	65	; case 65
  7238  0721  1903               	skipnz
  7239  0722  2D0A               	goto	l3328
  7240  0723  3A03               	xorlw	3	; case 66
  7241  0724  1903               	skipnz
  7242  0725  2D28               	goto	l3338
  7243  0726  3A01               	xorlw	1	; case 67
  7244  0727  1903               	skipnz
  7245  0728  2D46               	goto	l3348
  7246  0729  3A07               	xorlw	7	; case 68
  7247  072A  1903               	skipnz
  7248  072B  2D63               	goto	l3358
  7249  072C  3A01               	xorlw	1	; case 69
  7250  072D  1903               	skipnz
  7251  072E  2D81               	goto	l3368
  7252  072F  3A03               	xorlw	3	; case 70
  7253  0730  1903               	skipnz
  7254  0731  2D9F               	goto	l3378
  7255  0732  3A16               	xorlw	22	; case 80
  7256  0733  1903               	skipnz
  7257  0734  2DBD               	goto	l3388
  7258  0735  2F37               	goto	l288
  7259  0736  0008               	return
  7260  0737                     l288:	
  7261  0737  0008               	return
  7262  0738                     __end_of_actiontouchPanel:	
  7263                           
  7264                           	psect	text14
  7265  080B                     __ptext14:	
  7266 ;; *************** function _sendFeedback_TO_Gateway *****************
  7267 ;; Defined at:
  7268 ;;		line 867 in file "../master_eight.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  sw_status       1    wreg     unsigned char 
  7271 ;;  Switch_Num      1    0[BANK0 ] unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  sw_status       1    2[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  7284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  7285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  7286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  7287 ;;Total ram usage:        3 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    2
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_actiontouchPanel
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function _sendFeedback_TO_Gateway
  7299  080B                     _sendFeedback_TO_Gateway:	
  7300                           
  7301                           ;incstack = 0
  7302                           ; Regs used in _sendFeedback_TO_Gateway: [wreg]
  7303                           ;sendFeedback_TO_Gateway@sw_status stored from wreg
  7304  080B  0020               	movlb	0	; select bank0
  7305  080C  00A2               	movwf	sendFeedback_TO_Gateway@sw_status
  7306                           
  7307                           ;master_eight.c: 868: _delay((unsigned long)((5)*(16000000/4000.0))); TX1REG = 'G';
  7308  080D  301A               	movlw	26
  7309  080E  0020               	movlb	0	; select bank0
  7310  080F  00A1               	movwf	??_sendFeedback_TO_Gateway
  7311  0810  30F8               	movlw	248
  7312  0811                     u6457:	
  7313  0811  0B89               	decfsz	9,f
  7314  0812  2811               	goto	u6457
  7315  0813  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  7316  0814  2811               	goto	u6457
  7317  0815  0000               	nop
  7318  0816  3047               	movlw	71
  7319  0817  0023               	movlb	3	; select bank3
  7320  0818  009A               	movwf	26	;volatile
  7321                           
  7322                           ;master_eight.c: 869: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = sw_status
      +                          ;
  7323  0819  3006               	movlw	6
  7324  081A  0020               	movlb	0	; select bank0
  7325  081B  00A1               	movwf	??_sendFeedback_TO_Gateway
  7326  081C  3030               	movlw	48
  7327  081D                     u6467:	
  7328  081D  0B89               	decfsz	9,f
  7329  081E  281D               	goto	u6467
  7330  081F  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  7331  0820  281D               	goto	u6467
  7332  0821  0000               	nop
  7333  0822  0020               	movlb	0	; select bank0
  7334  0823  0822               	movf	sendFeedback_TO_Gateway@sw_status,w
  7335  0824  0023               	movlb	3	; select bank3
  7336  0825  009A               	movwf	26	;volatile
  7337                           
  7338                           ;master_eight.c: 870: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = '0';
  7339  0826  3006               	movlw	6
  7340  0827  0020               	movlb	0	; select bank0
  7341  0828  00A1               	movwf	??_sendFeedback_TO_Gateway
  7342  0829  3030               	movlw	48
  7343  082A                     u6477:	
  7344  082A  0B89               	decfsz	9,f
  7345  082B  282A               	goto	u6477
  7346  082C  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  7347  082D  282A               	goto	u6477
  7348  082E  0000               	nop
  7349  082F  3030               	movlw	48
  7350  0830  0023               	movlb	3	; select bank3
  7351  0831  009A               	movwf	26	;volatile
  7352                           
  7353                           ;master_eight.c: 871: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = Switch_Nu
      +                          m;
  7354  0832  3006               	movlw	6
  7355  0833  0020               	movlb	0	; select bank0
  7356  0834  00A1               	movwf	??_sendFeedback_TO_Gateway
  7357  0835  3030               	movlw	48
  7358  0836                     u6487:	
  7359  0836  0B89               	decfsz	9,f
  7360  0837  2836               	goto	u6487
  7361  0838  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  7362  0839  2836               	goto	u6487
  7363  083A  0000               	nop
  7364  083B  0020               	movlb	0	; select bank0
  7365  083C  0820               	movf	sendFeedback_TO_Gateway@Switch_Num,w
  7366  083D  0023               	movlb	3	; select bank3
  7367  083E  009A               	movwf	26	;volatile
  7368  083F  0008               	return
  7369  0840                     __end_of_sendFeedback_TO_Gateway:	
  7370                           
  7371                           	psect	text15
  7372  169E                     __ptext15:	
  7373 ;; *************** function _GPIO_pin_Initialize *****************
  7374 ;; Defined at:
  7375 ;;		line 679 in file "../master_eight.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    3
  7396 ;; This function calls:
  7397 ;;		_clearAllPorts
  7398 ;;		_pinINIT_extra
  7399 ;; This function is called by:
  7400 ;;		_main
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _GPIO_pin_Initialize
  7406  169E                     _GPIO_pin_Initialize:	
  7407                           
  7408                           ;master_eight.c: 680: clearAllPorts();
  7409                           
  7410                           ;incstack = 0
  7411                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  7412  169E  3195  25D1  3196   	fcall	_clearAllPorts
  7413                           
  7414                           ;master_eight.c: 681: pinINIT_extra();
  7415  16A1  3195  25EE  3196   	fcall	_pinINIT_extra
  7416                           
  7417                           ;master_eight.c: 685: TRISFbits.TRISF2 = 1;
  7418  16A4  0026               	movlb	6	; select bank6
  7419  16A5  150C               	bsf	12,2	;volatile
  7420                           
  7421                           ;master_eight.c: 686: TRISFbits.TRISF3 = 1;
  7422  16A6  158C               	bsf	12,3	;volatile
  7423                           
  7424                           ;master_eight.c: 687: TRISFbits.TRISF4 = 1;
  7425  16A7  160C               	bsf	12,4	;volatile
  7426                           
  7427                           ;master_eight.c: 688: TRISFbits.TRISF5 = 1;
  7428  16A8  168C               	bsf	12,5	;volatile
  7429                           
  7430                           ;master_eight.c: 689: TRISFbits.TRISF6 = 1;
  7431  16A9  170C               	bsf	12,6	;volatile
  7432                           
  7433                           ;master_eight.c: 690: TRISDbits.TRISD7 = 1;
  7434  16AA  0021               	movlb	1	; select bank1
  7435  16AB  178F               	bsf	15,7	;volatile
  7436                           
  7437                           ;master_eight.c: 691: TRISDbits.TRISD6 = 1;
  7438  16AC  170F               	bsf	15,6	;volatile
  7439                           
  7440                           ;master_eight.c: 692: TRISDbits.TRISD5 = 1;
  7441  16AD  168F               	bsf	15,5	;volatile
  7442                           
  7443                           ;master_eight.c: 694: TRISBbits.TRISB1 = 0;
  7444  16AE  108D               	bcf	13,1	;volatile
  7445                           
  7446                           ;master_eight.c: 695: TRISCbits.TRISC1 = 0;
  7447  16AF  108E               	bcf	14,1	;volatile
  7448                           
  7449                           ;master_eight.c: 696: TRISAbits.TRISA0 = 0;
  7450  16B0  100C               	bcf	12,0	;volatile
  7451                           
  7452                           ;master_eight.c: 697: TRISFbits.TRISF1 = 0;
  7453  16B1  0026               	movlb	6	; select bank6
  7454  16B2  108C               	bcf	12,1	;volatile
  7455                           
  7456                           ;master_eight.c: 698: TRISAbits.TRISA3 = 0;
  7457  16B3  0021               	movlb	1	; select bank1
  7458  16B4  118C               	bcf	12,3	;volatile
  7459                           
  7460                           ;master_eight.c: 699: TRISAbits.TRISA1 = 0;
  7461  16B5  108C               	bcf	12,1	;volatile
  7462                           
  7463                           ;master_eight.c: 700: TRISAbits.TRISA4 =0;
  7464  16B6  120C               	bcf	12,4	;volatile
  7465                           
  7466                           ;master_eight.c: 701: TRISBbits.TRISB4 =0;
  7467  16B7  120D               	bcf	13,4	;volatile
  7468                           
  7469                           ;master_eight.c: 702: TRISBbits.TRISB2 =0;
  7470  16B8  110D               	bcf	13,2	;volatile
  7471                           
  7472                           ;master_eight.c: 703: TRISBbits.TRISB0 =0;
  7473  16B9  100D               	bcf	13,0	;volatile
  7474                           
  7475                           ;master_eight.c: 711: TRISCbits.TRISC6 = 0;
  7476  16BA  130E               	bcf	14,6	;volatile
  7477                           
  7478                           ;master_eight.c: 712: TRISCbits.TRISC7 = 1;
  7479  16BB  178E               	bsf	14,7	;volatile
  7480                           
  7481                           ;master_eight.c: 714: TRISGbits.TRISG1 = 0;
  7482  16BC  0026               	movlb	6	; select bank6
  7483  16BD  108D               	bcf	13,1	;volatile
  7484                           
  7485                           ;master_eight.c: 715: TRISGbits.TRISG1 = 1;
  7486  16BE  148D               	bsf	13,1	;volatile
  7487                           
  7488                           ;master_eight.c: 717: clearAllPorts();
  7489  16BF  3195  25D1         	fcall	_clearAllPorts
  7490  16C1  0008               	return
  7491  16C2                     __end_of_GPIO_pin_Initialize:	
  7492                           
  7493                           	psect	text16
  7494  15EE                     __ptext16:	
  7495 ;; *************** function _pinINIT_extra *****************
  7496 ;; Defined at:
  7497 ;;		line 893 in file "../master_eight.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		status,2
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    2
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_GPIO_pin_Initialize
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _pinINIT_extra
  7527  15EE                     _pinINIT_extra:	
  7528                           
  7529                           ;master_eight.c: 894: ANSELG=0x00; WPUG = 0;
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _pinINIT_extra: [status,2]
  7533  15EE  0028               	movlb	8	; select bank8
  7534  15EF  018D               	clrf	13	;volatile
  7535  15F0  0029               	movlb	9	; select bank9
  7536  15F1  018D               	clrf	13	;volatile
  7537                           
  7538                           ;master_eight.c: 896: ANSELF=0x00;
  7539  15F2  0028               	movlb	8	; select bank8
  7540  15F3  018C               	clrf	12	;volatile
  7541                           
  7542                           ;master_eight.c: 898: ANSELE=0x00; WPUE=0x00;
  7543  15F4  0023               	movlb	3	; select bank3
  7544  15F5  0190               	clrf	16	;volatile
  7545  15F6  0024               	movlb	4	; select bank4
  7546  15F7  0190               	clrf	16	;volatile
  7547                           
  7548                           ;master_eight.c: 900: ANSELD=0x00; WPUD=0x00;
  7549  15F8  0023               	movlb	3	; select bank3
  7550  15F9  018F               	clrf	15	;volatile
  7551  15FA  0024               	movlb	4	; select bank4
  7552  15FB  018F               	clrf	15	;volatile
  7553                           
  7554                           ;master_eight.c: 902: ANSELB=0x00; WPUB=0x00;
  7555  15FC  0023               	movlb	3	; select bank3
  7556  15FD  018D               	clrf	13	;volatile
  7557  15FE  0024               	movlb	4	; select bank4
  7558  15FF  018D               	clrf	13	;volatile
  7559                           
  7560                           ;master_eight.c: 904: ANSELA=0x00;
  7561  1600  0023               	movlb	3	; select bank3
  7562  1601  018C               	clrf	12	;volatile
  7563  1602  0008               	return
  7564  1603                     __end_of_pinINIT_extra:	
  7565                           
  7566                           	psect	text17
  7567  15D1                     __ptext17:	
  7568 ;; *************** function _clearAllPorts *****************
  7569 ;; Defined at:
  7570 ;;		line 910 in file "../master_eight.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		None
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    2
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_GPIO_pin_Initialize
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function _clearAllPorts
  7600  15D1                     _clearAllPorts:	
  7601                           
  7602                           ;master_eight.c: 913: RB1 = 0;
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in _clearAllPorts: []
  7606  15D1  0020               	movlb	0	; select bank0
  7607  15D2  108D               	bcf	13,1	;volatile
  7608                           
  7609                           ;master_eight.c: 914: RC1 = 0;
  7610  15D3  108E               	bcf	14,1	;volatile
  7611                           
  7612                           ;master_eight.c: 915: RA0 = 0;
  7613  15D4  100C               	bcf	12,0	;volatile
  7614                           
  7615                           ;master_eight.c: 916: RF1 = 0;
  7616  15D5  0025               	movlb	5	; select bank5
  7617  15D6  108C               	bcf	12,1	;volatile
  7618                           
  7619                           ;master_eight.c: 917: RA3 = 0;
  7620  15D7  0020               	movlb	0	; select bank0
  7621  15D8  118C               	bcf	12,3	;volatile
  7622                           
  7623                           ;master_eight.c: 918: RA1 = 0;
  7624  15D9  108C               	bcf	12,1	;volatile
  7625                           
  7626                           ;master_eight.c: 919: RA4 = 0;
  7627  15DA  120C               	bcf	12,4	;volatile
  7628                           
  7629                           ;master_eight.c: 920: RB4=0;
  7630  15DB  120D               	bcf	13,4	;volatile
  7631                           
  7632                           ;master_eight.c: 921: RB2=0;
  7633  15DC  110D               	bcf	13,2	;volatile
  7634                           
  7635                           ;master_eight.c: 922: RB0=0;
  7636  15DD  100D               	bcf	13,0	;volatile
  7637  15DE  0008               	return
  7638  15DF                     __end_of_clearAllPorts:	
  7639                           
  7640                           	psect	intentry
  7641  0004                     __pintentry:	
  7642 ;; *************** function _isr *****************
  7643 ;; Defined at:
  7644 ;;		line 225 in file "../master_eight.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  7661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  7662 ;;Total ram usage:        2 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    1
  7665 ;; This function calls:
  7666 ;;		_errorsISR
  7667 ;; This function is called by:
  7668 ;;		Interrupt level 1
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672  0004                     _isr:	
  7673                           
  7674                           ;incstack = 0
  7675  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7676                           
  7677                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7678  0005  3180               	pagesel	$
  7679  0006  0020               	movlb	0	; select bank0
  7680  0007  087F               	movf	127,w
  7681  0008  00FB               	movwf	??_isr+1
  7682                           
  7683                           ;master_eight.c: 230: if(RC1IF){
  7684  0009  1E91               	btfss	17,5	;volatile
  7685  000A  2868               	goto	i1l2492
  7686                           
  7687                           ;master_eight.c: 231: if(RC1STAbits.OERR){
  7688  000B  0023               	movlb	3	; select bank3
  7689  000C  1C9D               	btfss	29,1	;volatile
  7690  000D  2824               	goto	i1l2468
  7691                           
  7692                           ;master_eight.c: 232: RC1STAbits.CREN = 0;
  7693  000E  121D               	bcf	29,4	;volatile
  7694                           
  7695                           ;master_eight.c: 233: RC1STAbits.CREN = 1;
  7696  000F  161D               	bsf	29,4	;volatile
  7697                           
  7698                           ;master_eight.c: 235: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  7699  0010  3045               	movlw	69
  7700  0011  00FA               	movwf	??_isr
  7701  0012  087A               	movf	??_isr,w
  7702  0013  00F1               	movwf	_ErrorNames
  7703  0014  3052               	movlw	82
  7704  0015  00FA               	movwf	??_isr
  7705  0016  087A               	movf	??_isr,w
  7706  0017  00F2               	movwf	_ErrorNames+1
  7707  0018  304F               	movlw	79
  7708  0019  00FA               	movwf	??_isr
  7709  001A  087A               	movf	??_isr,w
  7710  001B  00F3               	movwf	_ErrorNames+2
  7711  001C  3056               	movlw	86
  7712  001D  00FA               	movwf	??_isr
  7713  001E  087A               	movf	??_isr,w
  7714  001F  00F4               	movwf	_ErrorNames+3
  7715                           
  7716                           ;master_eight.c: 236: errorsISR(ErrorNames);
  7717  0020  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  7718  0021  3196  262F  3180   	fcall	_errorsISR
  7719  0024                     i1l2468:	
  7720                           
  7721                           ;master_eight.c: 237: }
  7722                           ;master_eight.c: 238: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  7723  0024  0023               	movlb	3	; select bank3
  7724  0025  0819               	movf	25,w	;volatile
  7725  0026  00FA               	movwf	??_isr
  7726  0027  0020               	movlb	0	; select bank0
  7727  0028  084D               	movf	_mainReceivedDataPosition,w
  7728  0029  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  7729  002A  0086               	movwf	6
  7730  002B  3001               	movlw	1	; select bank2/3
  7731  002C  0087               	movwf	7
  7732  002D  087A               	movf	??_isr,w
  7733  002E  0081               	movwf	1
  7734                           
  7735                           ;master_eight.c: 242: if(mainReceivedDataBuffer[0]=='%'){
  7736  002F  3025               	movlw	37
  7737  0030  0022               	movlb	2	; select bank2
  7738  0031  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  7739  0032  1D03               	btfss	3,2
  7740  0033  284E               	goto	i1l295
  7741                           
  7742                           ;master_eight.c: 243: mainReceivedDataPosition++;
  7743  0034  3001               	movlw	1
  7744  0035  0020               	movlb	0	; select bank0
  7745  0036  07CD               	addwf	_mainReceivedDataPosition,f
  7746  0037  3000               	movlw	0
  7747  0038  3DCE               	addwfc	_mainReceivedDataPosition+1,f
  7748                           
  7749                           ;master_eight.c: 244: if(mainReceivedDataPosition>15){
  7750  0039  084E               	movf	_mainReceivedDataPosition+1,w
  7751  003A  3A80               	xorlw	128
  7752  003B  00FA               	movwf	??_isr
  7753  003C  3080               	movlw	128
  7754  003D  027A               	subwf	??_isr,w
  7755  003E  1D03               	skipz
  7756  003F  2842               	goto	u259_25
  7757  0040  3010               	movlw	16
  7758  0041  024D               	subwf	_mainReceivedDataPosition,w
  7759  0042                     u259_25:	
  7760  0042  1C03               	skipc
  7761  0043  2868               	goto	i1l2492
  7762                           
  7763                           ;master_eight.c: 245: mainDataReceived=1;
  7764  0044  3001               	movlw	1
  7765  0045  0021               	movlb	1	; select bank1
  7766  0046  00C8               	movwf	_mainDataReceived^(0+128)
  7767  0047  3000               	movlw	0
  7768  0048  00C9               	movwf	(_mainDataReceived^(0+128)+1)
  7769                           
  7770                           ;master_eight.c: 246: mainReceivedDataPosition=0;
  7771  0049  0020               	movlb	0	; select bank0
  7772  004A  01CD               	clrf	_mainReceivedDataPosition
  7773  004B  01CE               	clrf	_mainReceivedDataPosition+1
  7774                           
  7775                           ;master_eight.c: 247: RC1IF=0;
  7776  004C  1291               	bcf	17,5	;volatile
  7777                           
  7778                           ;master_eight.c: 248: }
  7779                           ;master_eight.c: 249: }
  7780  004D  2868               	goto	i1l2492
  7781  004E                     i1l295:	
  7782                           
  7783                           ;master_eight.c: 250: else{
  7784                           ;master_eight.c: 251: RC1STAbits.CREN = 0;
  7785  004E  0023               	movlb	3	; select bank3
  7786  004F  121D               	bcf	29,4	;volatile
  7787                           
  7788                           ;master_eight.c: 252: RC1STAbits.CREN = 1;
  7789  0050  161D               	bsf	29,4	;volatile
  7790                           
  7791                           ;master_eight.c: 253: mainReceivedDataPosition=0;
  7792  0051  0020               	movlb	0	; select bank0
  7793  0052  01CD               	clrf	_mainReceivedDataPosition
  7794  0053  01CE               	clrf	_mainReceivedDataPosition+1
  7795                           
  7796                           ;master_eight.c: 255: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='X';
  7797  0054  3045               	movlw	69
  7798  0055  00FA               	movwf	??_isr
  7799  0056  087A               	movf	??_isr,w
  7800  0057  00F1               	movwf	_ErrorNames
  7801  0058  3052               	movlw	82
  7802  0059  00FA               	movwf	??_isr
  7803  005A  087A               	movf	??_isr,w
  7804  005B  00F2               	movwf	_ErrorNames+1
  7805  005C  3052               	movlw	82
  7806  005D  00FA               	movwf	??_isr
  7807  005E  087A               	movf	??_isr,w
  7808  005F  00F3               	movwf	_ErrorNames+2
  7809  0060  3058               	movlw	88
  7810  0061  00FA               	movwf	??_isr
  7811  0062  087A               	movf	??_isr,w
  7812  0063  00F4               	movwf	_ErrorNames+3
  7813                           
  7814                           ;master_eight.c: 256: errorsISR(ErrorNames);
  7815  0064  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  7816  0065  3196  262F  3180   	fcall	_errorsISR
  7817  0068                     i1l2492:	
  7818                           
  7819                           ;master_eight.c: 257: }
  7820                           ;master_eight.c: 258: }
  7821                           ;master_eight.c: 261: if(RC2IF){
  7822  0068  0020               	movlb	0	; select bank0
  7823  0069  1E94               	btfss	20,5	;volatile
  7824  006A  28C6               	goto	i1l303
  7825                           
  7826                           ;master_eight.c: 262: if(RC2STAbits.OERR){
  7827  006B  0029               	movlb	9	; select bank9
  7828  006C  1C95               	btfss	21,1	;volatile
  7829  006D  2884               	goto	i1l2502
  7830                           
  7831                           ;master_eight.c: 263: RC2STAbits.CREN = 0;
  7832  006E  1215               	bcf	21,4	;volatile
  7833                           
  7834                           ;master_eight.c: 264: RC2STAbits.CREN = 1;
  7835  006F  1615               	bsf	21,4	;volatile
  7836                           
  7837                           ;master_eight.c: 266: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  7838  0070  3045               	movlw	69
  7839  0071  00FA               	movwf	??_isr
  7840  0072  087A               	movf	??_isr,w
  7841  0073  00F1               	movwf	_ErrorNames
  7842  0074  3052               	movlw	82
  7843  0075  00FA               	movwf	??_isr
  7844  0076  087A               	movf	??_isr,w
  7845  0077  00F2               	movwf	_ErrorNames+1
  7846  0078  304F               	movlw	79
  7847  0079  00FA               	movwf	??_isr
  7848  007A  087A               	movf	??_isr,w
  7849  007B  00F3               	movwf	_ErrorNames+2
  7850  007C  3056               	movlw	86
  7851  007D  00FA               	movwf	??_isr
  7852  007E  087A               	movf	??_isr,w
  7853  007F  00F4               	movwf	_ErrorNames+3
  7854                           
  7855                           ;master_eight.c: 267: errorsISR(ErrorNames);
  7856  0080  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  7857  0081  3196  262F  3180   	fcall	_errorsISR
  7858  0084                     i1l2502:	
  7859                           
  7860                           ;master_eight.c: 268: }
  7861                           ;master_eight.c: 270: touchpanleReceivedDatabuffer[touchpanelReceivedataPosition] = RC2R
      +                          EG;
  7862  0084  0029               	movlb	9	; select bank9
  7863  0085  0811               	movf	17,w	;volatile
  7864  0086  00FA               	movwf	??_isr
  7865  0087  0020               	movlb	0	; select bank0
  7866  0088  084B               	movf	_touchpanelReceivedataPosition,w
  7867  0089  3EA0               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  7868  008A  0086               	movwf	6
  7869  008B  3001               	movlw	1	; select bank3/4
  7870  008C  0087               	movwf	7
  7871  008D  087A               	movf	??_isr,w
  7872  008E  0081               	movwf	1
  7873                           
  7874                           ;master_eight.c: 271: if(touchpanleReceivedDatabuffer[0] == '(')
  7875  008F  3028               	movlw	40
  7876  0090  0023               	movlb	3	; select bank3
  7877  0091  0620               	xorwf	_touchpanleReceivedDatabuffer^(0+384),w
  7878  0092  1D03               	btfss	3,2
  7879  0093  28AD               	goto	i1l300
  7880                           
  7881                           ;master_eight.c: 272: {
  7882                           ;master_eight.c: 273: touchpanelReceivedataPosition++;
  7883  0094  3001               	movlw	1
  7884  0095  0020               	movlb	0	; select bank0
  7885  0096  07CB               	addwf	_touchpanelReceivedataPosition,f
  7886  0097  3000               	movlw	0
  7887  0098  3DCC               	addwfc	_touchpanelReceivedataPosition+1,f
  7888                           
  7889                           ;master_eight.c: 274: if(touchpanelReceivedataPosition > 7)
  7890  0099  084C               	movf	_touchpanelReceivedataPosition+1,w
  7891  009A  3A80               	xorlw	128
  7892  009B  00FA               	movwf	??_isr
  7893  009C  3080               	movlw	128
  7894  009D  027A               	subwf	??_isr,w
  7895  009E  3008               	movlw	8
  7896  009F  1903               	btfsc	3,2
  7897  00A0  024B               	subwf	_touchpanelReceivedataPosition,w
  7898  00A1  1C03               	skipc
  7899  00A2  28C6               	goto	i1l303
  7900                           
  7901                           ;master_eight.c: 275: {
  7902                           ;master_eight.c: 276: touchPanelDataReceived = 1;
  7903  00A3  3001               	movlw	1
  7904  00A4  0021               	movlb	1	; select bank1
  7905  00A5  00C6               	movwf	_touchPanelDataReceived^(0+128)
  7906  00A6  3000               	movlw	0
  7907  00A7  00C7               	movwf	(_touchPanelDataReceived^(0+128)+1)
  7908                           
  7909                           ;master_eight.c: 278: touchpanelReceivedataPosition=0;
  7910  00A8  0020               	movlb	0	; select bank0
  7911  00A9  01CB               	clrf	_touchpanelReceivedataPosition
  7912  00AA  01CC               	clrf	_touchpanelReceivedataPosition+1
  7913                           
  7914                           ;master_eight.c: 279: RC2IF = 0;
  7915  00AB  1294               	bcf	20,5	;volatile
  7916                           
  7917                           ;master_eight.c: 280: }
  7918                           ;master_eight.c: 281: }
  7919  00AC  28C6               	goto	i1l303
  7920  00AD                     i1l300:	
  7921                           
  7922                           ;master_eight.c: 282: else{
  7923                           ;master_eight.c: 283: RC2STAbits.CREN = 0;
  7924  00AD  0029               	movlb	9	; select bank9
  7925  00AE  1215               	bcf	21,4	;volatile
  7926                           
  7927                           ;master_eight.c: 284: RC2STAbits.CREN = 1;
  7928  00AF  1615               	bsf	21,4	;volatile
  7929                           
  7930                           ;master_eight.c: 285: touchpanelReceivedataPosition=0;
  7931  00B0  0020               	movlb	0	; select bank0
  7932  00B1  01CB               	clrf	_touchpanelReceivedataPosition
  7933  00B2  01CC               	clrf	_touchpanelReceivedataPosition+1
  7934                           
  7935                           ;master_eight.c: 287: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='T';
  7936  00B3  3045               	movlw	69
  7937  00B4  00FA               	movwf	??_isr
  7938  00B5  087A               	movf	??_isr,w
  7939  00B6  00F1               	movwf	_ErrorNames
  7940  00B7  3052               	movlw	82
  7941  00B8  00FA               	movwf	??_isr
  7942  00B9  087A               	movf	??_isr,w
  7943  00BA  00F2               	movwf	_ErrorNames+1
  7944  00BB  3052               	movlw	82
  7945  00BC  00FA               	movwf	??_isr
  7946  00BD  087A               	movf	??_isr,w
  7947  00BE  00F3               	movwf	_ErrorNames+2
  7948  00BF  3054               	movlw	84
  7949  00C0  00FA               	movwf	??_isr
  7950  00C1  087A               	movf	??_isr,w
  7951  00C2  00F4               	movwf	_ErrorNames+3
  7952                           
  7953                           ;master_eight.c: 288: errorsISR(ErrorNames);
  7954  00C3  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  7955  00C4  3196  262F         	fcall	_errorsISR
  7956  00C6                     i1l303:	
  7957  00C6  087B               	movf	??_isr+1,w
  7958  00C7  0020               	movlb	0	; select bank0
  7959  00C8  00FF               	movwf	127
  7960  00C9  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7961  00CA  0009               	retfie
  7962  00CB                     __end_of_isr:	
  7963                           
  7964                           	psect	text19
  7965  162F                     __ptext19:	
  7966 ;; *************** function _errorsISR *****************
  7967 ;; Defined at:
  7968 ;;		line 836 in file "../master_eight.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  errNum          1    wreg     PTR unsigned char 
  7971 ;;		 -> ErrorNames(5), 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  errNum          1    3[COMMON] PTR unsigned char 
  7974 ;;		 -> ErrorNames(5), 
  7975 ;;  Tx_count        2    1[COMMON] int 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      void 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0
  7987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  7988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0
  7989 ;;Total ram usage:        4 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_isr
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _errorsISR
  8000  162F                     _errorsISR:	
  8001                           
  8002                           ;incstack = 0
  8003                           ; Regs used in _errorsISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8004                           ;errorsISR@errNum stored from wreg
  8005  162F  00F9               	movwf	errorsISR@errNum
  8006                           
  8007                           ;master_eight.c: 837: int Tx_count=0;
  8008  1630  01F7               	clrf	errorsISR@Tx_count
  8009  1631  01F8               	clrf	errorsISR@Tx_count+1
  8010  1632                     i1l2378:	
  8011                           ;master_eight.c: 838: while(Tx_count!=4)
  8012                           
  8013  1632  3004               	movlw	4
  8014  1633  0677               	xorwf	errorsISR@Tx_count,w
  8015  1634  0478               	iorwf	errorsISR@Tx_count+1,w
  8016  1635  1903               	btfsc	3,2
  8017  1636  0008               	return
  8018  1637                     i1l377:	
  8019                           ;master_eight.c: 839: {
  8020                           ;master_eight.c: 840: while (!TX1STAbits.TRMT);
  8021                           
  8022  1637  0023               	movlb	3	; select bank3
  8023  1638  1C9E               	btfss	30,1	;volatile
  8024  1639  2E37               	goto	i1l377
  8025                           
  8026                           ;master_eight.c: 841: TX1REG = *errNum;
  8027  163A  0879               	movf	errorsISR@errNum,w
  8028  163B  0086               	movwf	6
  8029  163C  0187               	clrf	7
  8030  163D  0801               	movf	1,w
  8031  163E  009A               	movwf	26	;volatile
  8032                           
  8033                           ;master_eight.c: 842: *errNum++;
  8034  163F  3001               	movlw	1
  8035  1640  00F6               	movwf	??_errorsISR
  8036  1641  0876               	movf	??_errorsISR,w
  8037  1642  07F9               	addwf	errorsISR@errNum,f
  8038                           
  8039                           ;master_eight.c: 843: Tx_count++;
  8040  1643  3001               	movlw	1
  8041  1644  07F7               	addwf	errorsISR@Tx_count,f
  8042  1645  3000               	movlw	0
  8043  1646  3DF8               	addwfc	errorsISR@Tx_count+1,f
  8044  1647  2E32               	goto	i1l2378
  8045  1648                     __end_of_errorsISR:	
  8046  007E                     btemp	set	126	;btemp
  8047  007E                     int$flags	set	126
  8048  007E                     wtemp0	set	126


Data Sizes:
    Strings     2
    Constant    0
    Data        317
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     43      68
    BANK1            80     14      78
    BANK2            80      0      80
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            62      0       0
    BANK8             0      0       0
    BANK9             0      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK0[2]), applianceControl@switchNumberStringBuffer(BANK0[2]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(2) Largest target is 130
		 -> currentStateBuffer(BIGRAM[130]), 

    errorsMain@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 

    errorsISR@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _applianceControl->_atoi
    _atoi->___wmul
    _actiontouchPanel->_sendFeedback_TO_Gateway

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   10957
                                             37 BANK0      6     6      0
                                              0 BANK1     14    14      0
                _GPIO_pin_Initialize
                   _actiontouchPanel
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
    _copyTouchpanelReceiveDataBuffer
                         _errorsMain
             _send_Response_To_Touch
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           4     4      0     131
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _copyTouchpanelReceiveDataBuffer                      3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    23    17      6    5531
                                             14 BANK0     23    17      6
                               _atoi
                 _sendAcknowledgment
             _send_Response_To_Touch
 ---------------------------------------------------------------------------------
 (1) _send_Response_To_Touch                               4     2      2    2693
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     2      2     136
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     759
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                 _EUSART2_Initialize
                  _EUSART_Initialize
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _actiontouchPanel                                    14    12      2    1443
                                              3 BANK0     14    12      2
            _sendFeedback_TO_Gateway
 ---------------------------------------------------------------------------------
 (2) _sendFeedback_TO_Gateway                              3     2      1     517
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     155
                                              4 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (5) _errorsISR                                            4     4      0     155
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _actiontouchPanel
     _sendFeedback_TO_Gateway
   _allPeripheralInit
     _EUSART2_Initialize
     _EUSART_Initialize
   _applianceControl
     _atoi
       ___wmul
       _isdigit
     _sendAcknowledgment
     _send_Response_To_Touch
   _copyReceivedDataBuffer
   _copyTouchpanelReceiveDataBuffer
   _errorsMain
   _send_Response_To_Touch

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     12E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      E      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               3E      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0     12E      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 03 16:57:02 2018

                      __size_of_allPeripheralInit 0006                                                 pc 0002  
                                     __CFG_CP$OFF 0000                                                _M1 005D  
                                              _M2 00D8                                                _M3 00D6  
                                              _M4 00D4                                                _M5 00D2  
                                              _M6 00D0                                                _M7 00CE  
                                              _M8 00CC                                                _R1 005B  
                                              _R2 0059                                                _R3 0057  
                                              _R4 0055                                                _R5 0053  
                                              _R6 0051                                                _R7 004F  
                                              _R8 00CA                               ___wmul@multiplicand 0022  
                    applianceControl@integerSpeed 0038                                               l240 02EA  
                                             l241 02F2                                               l242 02FA  
                                             l243 0302                                               l323 0A40  
                                             l315 09A0                                               l237 02DA  
                                             l422 1651                                               l239 02E2  
                                             l259 04A6                                               l288 0737  
                                             l386 168A                                               l395 166C  
                                             _GIE 005F                                               _RA0 0060  
                                             _RA1 0061                                               _RB0 0068  
                                             _RB1 0069                                               _RA3 0063  
                                             _RB2 006A                                               _RA4 0064  
                                             _RC1 0071                                               _RB4 006C  
                                             _RF1 1461                                               _RF2 1462  
                                             _RD6 007E                                               _RF3 1463  
                                             _RD7 007F                                               _RF4 1464  
                                             _RF5 1465                                               _RF6 1466  
                       __size_of_applianceControl 0377                                               _isr 0004  
                                    __CFG_BORV$LO 0000                                               wreg 0009  
                                    __CFG_FOSC$HS 0000                                        _CheckFlag2 005F  
                                            S4022 1000                                      __CFG_LVP$OFF 0000  
                                            l3006 164B                                              l3032 0849  
                                            l3200 02A8                                              l3026 15EC  
                                            l3050 086B                                              l3034 0842  
                                            l3210 02CB                                              l3060 08A6  
                                            l3052 086F                                              l3044 0864  
                                            l3036 084E                                              l4020 0499  
                                            l3212 030A                                              l3204 02B9  
                                            l3054 0896                                              l3320 04F1  
                                            l3072 1667                                              l3224 034A  
                                            l3250 03D0                                              l4018 02D1  
                                            l3422 065C                                              l3262 0411  
                                            l3238 038F                                              l3182 0261  
                                            l3408 0617                                              l3336 0525  
                                            l3328 050A                                              l3192 0286  
                                            l3434 069B                                              l3338 0528  
                                            l3274 0452                                              l3186 0268  
                                            l3610 095A                                              l3356 0560  
                                            l3348 0546                                              l3460 071E  
                                            l3196 0297                                              l3188 0275  
                                            l3700 0AA5                                              l3446 06DB  
                                            l3358 0563                                              l3630 09A3  
                                            l3368 0581                                              l3288 0493  
                                            l3528 1685                                              l3704 0AAD  
                                            l3624 0982                                              l3608 0930  
                                            l3378 059F                                              l3722 0B0D  
                                            l3650 09D2                                              l3570 08E7  
                                            l3388 05BD                                              l3812 0CF3  
                                            l3740 0B6F                                              l3902 0ED4  
                                            l3830 0D53                                              l3718 0B07  
                                            l3808 0CEB                                              l3736 0B67  
                                            l3664 09FA                                              l3826 0D4D  
                                            l3754 0BC9                                              l3932 0F79  
                                            l3844 0DAC                                              l3772 0C29  
                                            l3684 0A43                                              l3596 091A  
                                            l3862 0E0E                                              l3790 0C8B  
                                            l3758 0BCF                                              l3678 0A22  
                                            l3936 0F81                                              l3880 0E6D  
                                            l3848 0DB4                                              l3776 0C31  
                                            l3954 0FF9                                              l3866 0E14  
                                            l3794 0C91                                              l3884 0E75  
                                            l3898 0ECE                                              ?_isr 0076  
                                            STR_1 1800                                              u4010 057E  
                                            u4050 059C                                              u4090 05BA  
                                            u4235 172A                                              u5107 0AC3  
                                            u3445 1652                                              u5117 0ACF  
                                            u3710 02F7                                              u3455 1657  
                                            u6007 039B                                              u5207 0B85  
                                            u5127 0ADB                                              u5047 08B1  
                                            u6017 03AA                                              u5217 0B91  
                                            u5137 0AE7                                              u5057 0A61  
                                            u3730 02FF                                              u3650 02DF  
                                            u6107 043B                                              u6027 03B9  
                                            u4195 16F8                                              u5307 0C47  
                                            u5227 0B9D                                              u5147 0AF3  
                                            u5067 0A6D                                              _PEIE 005E  
                                            u6117 044A                                              u6037 03C8  
                                            u5317 0C53                                              u5237 0BA9  
                                            u5157 0B23                                              u5077 0A79  
                                            u4365 0980                                              u3750 0307  
                                            u3670 02E7                                              u6207 17D2  
                                            u6127 045E                                              u6047 03DC  
                                            u5407 0D09                                              u5327 0C5F  
                                            u5247 0BB5                                              u5167 0B2F  
                                            u5087 0A85                                              u4375 099E  
                                            u6217 17DF                                              u6137 046D  
                                            u6057 03EB                                              u5417 0D15  
                                            u5337 0C6B                                              u5257 0BE5  
                                            u5177 0B3B                                              u5097 0A91  
                                            u4465 0A20                                              u3930 0543  
                                            u3690 02EF                                              u6307 0635  
                                            u6227 17EB                                              u6147 047C  
                                            u6067 03FA                                              u5507 0DCA  
                                            u5427 0D21                                              u5347 0C77  
                                            u5267 0BF1                                              u5187 0B47  
                                            u4475 0A3E                                              u6317 0644  
                                            u6237 17F7                                              u6157 048B  
                                            u6077 0409                                              u5517 0DD6  
                                            u5437 0D2D                                              u5357 0CA7  
                                            u5277 0BFD                                              u5197 0B53  
                                            u6407 06D4                                              u6327 0653  
                                            u6247 05D6                                              u6167 17A0  
                                            u6087 041D                                              u5607 0E8A  
                                            u5527 0DE2                                              u5447 0D39  
                                            u5367 0CB3                                              u5287 0C09  
                                            u6417 06E7                                              u6337 0666  
                                            u6257 05E4                                              u6177 17AC  
                                            u6097 042C                                              u5617 0E96  
                                            u5537 0DEE                                              u5457 0D69  
                                            u5377 0CBF                                              u5297 0C15  
                                            u3970 055E                                              u3890 0523  
                                            u6427 06F6                                              u6347 0674  
                                            u6267 05F1                                              u6187 17B8  
                                            u5707 0F22                                              u5627 0EA2  
                                            u5547 0DFA                                              u5467 0D75  
                                            u5387 0CCB                                              u6437 0705  
                                            u6357 0683                                              u6277 0600  
                                            u6197 17C5                                              u5717 0F38  
                                            u5637 0EAE                                              u5557 0E29  
                                            u5477 0D81                                              u5397 0CD7  
                                            u6447 0714                                              u6367 0692  
                                            u6287 060F                                              u5807 0FC6  
                                            u5727 0F45                                              u5647 0EBA  
                                            u5567 0E35                                              u5487 0D8D  
                                            u6457 0811                                              u6377 06A7  
                                            u6297 0626                                              u5817 0FCF  
                                            u5737 0F54                                              u5657 0EE9  
                                            u5577 0E41                                              u5497 0D99  
                                            u6467 081D                                              u6387 06B6  
                                            u5907 024D                                              u5827 0FE5  
                                            u5747 0F63                                              u5667 0EF5  
                                            u5587 0E4D                                              u6477 082A  
                                            u6397 06C5                                              u5917 0259  
                                            u5837 0FF2                                              u5757 0F72  
                                            u5677 0F01                                              u5597 0E59  
                                            u6487 0836                                              u5927 0315  
                                            u5847 0202                                              u5767 0F96  
                                            u5687 0F0D                                              u5937 0324  
                                            u5857 020E                                              u5777 0FA2  
                                            u5697 0F19                                              u5947 0333  
                                            u5867 021A                                              u5787 0FAE  
                                            u5957 0342                                              u5877 0228  
                                            u5797 0FBA                                              u5967 035A  
                                            u5887 0235                                              u5977 0369  
                                            u5897 0241                                              u5987 0378  
                                            u5997 0387                                              _WPUB 020D  
                                            _WPUD 020F                                              _WPUE 0210  
                                            _WPUG 048D                                      __CFG_WRT$OFF 0000  
                                            _atoi 0840                                              _main 08AB  
                                            fsr0h 0005                                              fsr1h 0007  
                                            indf0 0000                                              fsr0l 0004  
                                            indf1 0001                                              fsr1l 0006  
                                            btemp 007E                           _copy_parentalLockBuffer 00A0  
                                            start 00CB                                     __CFG_IESO$OFF 0000  
                          __size_of_pinINIT_extra 0015                         ??_sendFeedback_TO_Gateway 0021  
                                           ??_isr 007A               applianceControl@charParentalControl 0032  
                                    main@end_flag 00E4                                             ?_atoi 0026  
                                           ?_main 0076                                     __CFG_WDTE$OFF 0000  
                                           _RC1IF 008D                                             _RC2IF 00A5  
                 send_Response_To_Touch@switch_no 0023                                             i1l300 00AD  
                                           i1l303 00C6                                             i1l295 004E  
                                           i1l377 1637                                    __CFG_FCMEN$OFF 0000  
                                 __end_of_isdigit 15EE                                             atoi@a 002B  
                                           atoi@s 002D                                    __CFG_BOREN$OFF 0000  
                                           status 0003                                             wtemp0 007E  
                               ?_actiontouchPanel 0023                             __end_of_clearAllPorts 15DF  
                             _GPIO_pin_Initialize 169E                                    __CFG_MCLRE$OFF 0000  
                              ??_actiontouchPanel 0025                                   __initialization 00CD  
                         ?_copyReceivedDataBuffer 0076                                      __end_of_atoi 08AB  
                                    __end_of_main 1000  copyTouchpanelReceiveDataBuffer@dataBufferCounter 0021  
                                      _ErrorNames 0071                                    __CFG_LPBOR$OFF 0000  
                                          ??_atoi 0028                                            ??_main 0045  
                            ?_GPIO_pin_Initialize 0076                                     _pinINIT_extra 15EE  
                       main@dataBufferCounter_487 00EA                   __end_of_sendFeedback_TO_Gateway 0840  
                      __end_of_EUSART2_Initialize 1619                                _PreventFlag_Touch2 00DC  
                                          _ANSELA 018C                                            _ANSELB 018D  
                                          _ANSELD 018F                                            _ANSELE 0190  
                                          _ANSELF 040C                                            _ANSELG 040D  
                                          _RC1REG 0199                                            _RC2REG 0491  
                                          _RC1STA 019D                                            _RC2STA 0495  
                    _touchpanleReceivedDatabuffer 01A0                                            i1l2502 0084  
                                          i1l2378 1632                                            i1l2468 0024  
                                          i1l2492 0068                                            u259_25 0042  
                                          _TX1REG 019A                                            _TX2REG 0492  
                                          _TX1STA 019E                                            _TX2STA 0496  
                                  __CFG_PWRTE$OFF 0000                    __end_of_copyReceivedDataBuffer 1718  
                     __size_of_sendAcknowledgment 001D                                            ___wmul 1648  
                           ??_GPIO_pin_Initialize 0020                          _mainReceivedDataPosition 004D  
                                    __pdataBIGRAM 226E                                  _applianceControl 0130  
                                    __pdataCOMMON 0070                                         ??_isdigit 0020  
                                  ?_pinINIT_extra 0076           __end_of_copyTouchpanelReceiveDataBuffer 174A  
        __size_of_copyTouchpanelReceiveDataBuffer 0032                 ??_copyTouchpanelReceiveDataBuffer 0020  
                ?_copyTouchpanelReceiveDataBuffer 0076                   _copyTouchpanelReceiveDataBuffer 1718  
                   _touchpanelReceivedataPosition 004B                        actiontouchPanel@Switch_Num 002C  
                         __end_of__initialization 012C                                  main@end_flag_485 00E6  
                sendFeedback_TO_Gateway@sw_status 0022                 sendFeedback_TO_Gateway@Switch_Num 0020  
                                  __pcstackCOMMON 0076                                      __pidataBANK0 0003  
                                    __pidataBANK1 16C2                                      __pidataBANK2 174A  
                                    __pidataBANK3 07BA                                        __pbssBANK0 004B  
                                      __pbssBANK1 00C4                                   __CFG_VCAPEN$OFF 0000  
                              __size_of_errorsISR 0019                                        __pmaintext 08AB  
             send_Response_To_Touch@switch_status 0020                                           ?___wmul 0020  
                                      __pintentry 0004                        sendAcknowledgment@Tx_count 0022  
                                 ??_pinINIT_extra 0020                                           _SP1BRGH 019C  
                                         _SP1BRGL 019B                                           _SP2BRGH 0494  
                                         _SP2BRGL 0493                          ??_send_Response_To_Touch 0022  
     applianceControl@currentStateBufferPositions 003F                  applianceControl@chDimmerSpeedLSB 0031  
                applianceControl@chDimmerSpeedMSB 0030                                   __size_of___wmul 001C  
                                 __CFG_STVREN$OFF 0000                                        _errorsMain 1681  
                                         __ptext1 1681                                           __ptext2 1718  
                                         __ptext3 16E6                                           __ptext4 0130  
                                         __ptext5 179A                                           __ptext6 1664  
                                         __ptext7 0840                                           __ptext8 15DF  
                                         __ptext9 1648                         __size_of_actiontouchPanel 0291  
                                         _isdigit 15DF                                      __size_of_isr 00C7  
                               __end_of_errorsISR 1648              sendAcknowledgment@currentStateBuffer 0020  
                                         main@man 00EC                                           clrloop0 15BA  
                            end_of_initialization 012C                                           init_ram 15C5  
                                         initloop 15C6                                 _EUSART_Initialize 1619  
                               _levelofDimmer_LSB 0063                                 _levelofDimmer_MSB 0070  
                        ?_sendFeedback_TO_Gateway 0020                          __end_of_applianceControl 04A7  
              applianceControl@integerSwitchState 0043                                _EUSART2_Initialize 1603  
                              ?_EUSART_Initialize 0076                            _touchPanelDataReceived 00C6  
            actiontouchPanel@integer_switch_speed 002D                                    main@start_flag 00E0  
                             ?_EUSART2_Initialize 0076                               ??_EUSART_Initialize 0020  
                                       _TRISAbits 008C                            __size_of_clearAllPorts 000E  
                                       _TRISBbits 008D                                         _TRISCbits 008E  
                                       _TRISDbits 008F                                         _TRISFbits 030C  
                                       _TRISGbits 030D                   __size_of_send_Response_To_Touch 0066  
                            ??_EUSART2_Initialize 0020                         __end_of_EUSART_Initialize 162F  
        applianceControl@switchNumberStringBuffer 003B                        __end_of_sendAcknowledgment 1681  
                     __end_of_GPIO_pin_Initialize 16C2                                     __pidataBIGRAM 0738  
                                  __end_of___wmul 1664                            _mainReceivedDataBuffer 0120  
                                   __pidataCOMMON 07FA                                       ?_errorsMain 0076  
                             start_initialization 00CD                                       __end_of_isr 00CB  
                           applianceControl@F3750 00C0                             applianceControl@F3748 00C2  
                               _PreventFlag_Touch 00DE                                     _clearAllPorts 15D1  
         copyReceivedDataBuffer@dataBufferCounter 0021                                          ??___wmul 0024  
                          _send_Response_To_Touch 179A                                       __pdataBANK0 0063  
                                     __pdataBANK1 00A0                                       __pdataBANK2 0120  
                                     __pdataBANK3 01A0                                  _actiontouchPanel 04A7  
                                _mainDataReceived 00C8                                         ___latbits 0002  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00E0  
                               errorsISR@Tx_count 0077                                main@start_flag_484 00E2  
                        ??_copyReceivedDataBuffer 0020                        __size_of_EUSART_Initialize 0016  
                      _PreventFlag_ManualTo_Panel 00DA                                         _checkFlag 0061  
                              errorsMain@Tx_count 0021                               __size_of_errorsMain 001D  
                                  ?_clearAllPorts 0076                                   errorsISR@errNum 0079  
                                errorsMain@errNum 0023                                         __pswtext1 1000  
                                        _BAUD1CON 019F                                          _BAUD2CON 0497  
                           __end_of_pinINIT_extra 1603                                          ?_isdigit 0076  
             applianceControl@charFinalFrameState 0033                                         _errorsISR 162F  
                   actiontouchPanel@switch_status 002F           applianceControl@dimmerSpeedStringBuffer 003D  
                                  ___wmul@product 0024                                         clear_ram0 15B9  
                                        _PIE1bits 0091                                          _PIE4bits 0094  
                               ?_applianceControl 002E                                ??_applianceControl 0034  
                               ___wmul@multiplier 0020                  __size_of_sendFeedback_TO_Gateway 0035  
                   applianceControl@charSwitchLSB 002E                     applianceControl@charSwitchMSB 003A  
                                      ?_errorsISR 0076                   __size_of_copyReceivedDataBuffer 0032  
                                 ??_clearAllPorts 0020                            actiontouchPanel@speeds 0024  
                _start_PWM_Generation_in_ISR_FLAG 00C4                                 _allPeripheralInit 0805  
                                    ??_errorsMain 0020                                _sendAcknowledgment 1664  
                                     _isdigit$731 0020                                ?_allPeripheralInit 0076  
                                __size_of_isdigit 000F                               ?_sendAcknowledgment 0020  
                                        __ptext10 0805                                          __ptext11 1619  
                                        __ptext12 1603                                          __ptext13 04A7  
                                        __ptext14 080B                                          __ptext15 169E  
                                        __ptext16 15EE                                          __ptext17 15D1  
                                        __ptext19 162F                               ??_allPeripheralInit 0020  
                 applianceControl@charSwitchSTATE 002F                       __size_of_EUSART2_Initialize 0016  
                           main@dataBufferCounter 00E8                                     __size_of_atoi 006B  
                                   __size_of_main 0755                          __end_of_actiontouchPanel 0738  
                       actiontouchPanel@ch_sw_num 0027                                __end_of_errorsMain 169E  
                              _currentStateBuffer 226E                           ?_send_Response_To_Touch 0020  
                                      _RC1STAbits 019D                              ??_sendAcknowledgment 0022  
                                      _RC2STAbits 0495                         __end_of_allPeripheralInit 080B  
                                        int$flags 007E                                          atoi@sign 002A  
                          _copyReceivedDataBuffer 16E6                             actiontouchPanel@SwNum 0028  
                          _tempReceivedDataBuffer 0158                      __size_of_GPIO_pin_Initialize 0024  
                                        isdigit@c 0021                                       ??_errorsISR 0076  
                                        intlevel1 0000                    __end_of_send_Response_To_Touch 1800  
                               __CFG_CLKOUTEN$OFF 0000               applianceControl@integerSwitchNumber 0041  
                     actiontouchPanel@preventFlag 002A                                _parentalLockBuffer 01C0  
                         _sendFeedback_TO_Gateway 080B                                     __pstringtext1 1800  
                                   __pstringtext2 0000                         actiontouchPanel@sw_status 0023  
                 _tempReceiveTouchpanelDataBuffer 0140                                        _TX1STAbits 019E  
                                      _TX2STAbits 0496                   send_Response_To_Touch@fan_speed 0021  
