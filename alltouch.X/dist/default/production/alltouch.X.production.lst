

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Dec 06 13:10:05 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext1,global,class=STRCODE,delta=2
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	swtext1,local,class=CONST,delta=2
    44                           	psect	swtext2,local,class=CONST,delta=2
    45                           	psect	swtext3,local,class=CONST,delta=2
    46                           	psect	swtext4,local,class=CONST,delta=2
    47                           	psect	swtext5,local,class=CONST,delta=2
    48                           	psect	swtext6,local,class=CONST,delta=2
    49                           	psect	swtext7,local,class=CONST,delta=2
    50                           	psect	swtext8,local,class=CONST,delta=2
    51                           	psect	swtext9,local,class=CONST,delta=2
    52                           	psect	swtext10,local,class=CONST,delta=2
    53                           	psect	swtext11,local,class=CONST,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 1.45
    58                           ; Generated 16/11/2017 GMT
    59                           ; 
    60                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1526 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0110                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  011D                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020D                     	;# 
   185  020F                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0219                     	;# 
   203  021A                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029D                     	;# 
   220  029E                     	;# 
   221  029F                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  040C                     	;# 
   242  040D                     	;# 
   243  0411                     	;# 
   244  0411                     	;# 
   245  0412                     	;# 
   246  0413                     	;# 
   247  0414                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  0418                     	;# 
   252  0418                     	;# 
   253  0419                     	;# 
   254  041A                     	;# 
   255  041B                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  048D                     	;# 
   260  0491                     	;# 
   261  0491                     	;# 
   262  0492                     	;# 
   263  0492                     	;# 
   264  0493                     	;# 
   265  0493                     	;# 
   266  0493                     	;# 
   267  0494                     	;# 
   268  0494                     	;# 
   269  0495                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  0496                     	;# 
   273  0497                     	;# 
   274  0497                     	;# 
   275  0595                     	;# 
   276  0596                     	;# 
   277  0597                     	;# 
   278  059C                     	;# 
   279  059D                     	;# 
   280  059E                     	;# 
   281  0611                     	;# 
   282  0611                     	;# 
   283  0612                     	;# 
   284  0613                     	;# 
   285  0614                     	;# 
   286  0614                     	;# 
   287  0615                     	;# 
   288  0616                     	;# 
   289  0617                     	;# 
   290  0617                     	;# 
   291  0618                     	;# 
   292  0619                     	;# 
   293  061A                     	;# 
   294  061A                     	;# 
   295  061B                     	;# 
   296  061C                     	;# 
   297  061D                     	;# 
   298  061D                     	;# 
   299  061E                     	;# 
   300  061F                     	;# 
   301  0FE4                     	;# 
   302  0FE5                     	;# 
   303  0FE6                     	;# 
   304  0FE7                     	;# 
   305  0FE8                     	;# 
   306  0FE9                     	;# 
   307  0FEA                     	;# 
   308  0FEB                     	;# 
   309  0FED                     	;# 
   310  0FEE                     	;# 
   311  0FEF                     	;# 
   312                           
   313                           	psect	idataCOMMON
   314  0FAE                     __pidataCOMMON:	
   315                           
   316                           ;initializer for _levelofDimmer_LSB
   317  0FAE  3430               	retlw	48
   318                           
   319                           ;initializer for _ErrorNames
   320  0FAF  3423               	retlw	35
   321  0FB0  3423               	retlw	35
   322  0FB1  3423               	retlw	35
   323  0FB2  3423               	retlw	35
   324  0FB3  3400               	retlw	0
   325                           
   326                           	psect	idataBANK0
   327  0FD5                     __pidataBANK0:	
   328                           
   329                           ;initializer for _tempReceiveTouchpanelDataBuffer
   330  0FD5  3423               	retlw	35
   331  0FD6  3400               	retlw	0
   332  0FD7  3400               	retlw	0
   333  0FD8  3400               	retlw	0
   334  0FD9  3400               	retlw	0
   335  0FDA  3400               	retlw	0
   336  0FDB  3400               	retlw	0
   337  0FDC  3400               	retlw	0
   338                           
   339                           ;initializer for applianceControl@F3726
   340  0FDD  3423               	retlw	35
   341  0FDE  3400               	retlw	0
   342                           
   343                           ;initializer for applianceControl@F3724
   344  0FDF  3423               	retlw	35
   345  0FE0  3400               	retlw	0
   346                           
   347                           ;initializer for _levelofDimmer_MSB
   348  0FE1  3430               	retlw	48
   349                           
   350                           	psect	idataBANK1
   351  0668                     __pidataBANK1:	
   352                           
   353                           ;initializer for _tempReceivedDataBuffer
   354  0668  3423               	retlw	35
   355  0669  3400               	retlw	0
   356  066A  3400               	retlw	0
   357  066B  3400               	retlw	0
   358  066C  3400               	retlw	0
   359  066D  3400               	retlw	0
   360  066E  3400               	retlw	0
   361  066F  3400               	retlw	0
   362  0670  3400               	retlw	0
   363  0671  3400               	retlw	0
   364  0672  3400               	retlw	0
   365  0673  3400               	retlw	0
   366  0674  3400               	retlw	0
   367  0675  3400               	retlw	0
   368  0676  3400               	retlw	0
   369  0677  3400               	retlw	0
   370  0678  3400               	retlw	0
   371  0679  3400               	retlw	0
   372  067A  3400               	retlw	0
   373  067B  3400               	retlw	0
   374  067C  3400               	retlw	0
   375  067D  3400               	retlw	0
   376  067E  3400               	retlw	0
   377  067F  3400               	retlw	0
   378                           
   379                           ;initializer for _touchpanleReceivedDatabuffer
   380  0680  3423               	retlw	35
   381  0681  3400               	retlw	0
   382  0682  3400               	retlw	0
   383  0683  3400               	retlw	0
   384  0684  3400               	retlw	0
   385  0685  3400               	retlw	0
   386  0686  3400               	retlw	0
   387  0687  3400               	retlw	0
   388  0688  3400               	retlw	0
   389  0689  3400               	retlw	0
   390  068A  3400               	retlw	0
   391  068B  3400               	retlw	0
   392  068C  3400               	retlw	0
   393  068D  3400               	retlw	0
   394  068E  3400               	retlw	0
   395  068F  3400               	retlw	0
   396                           
   397                           ;initializer for _copy_parentalLockBuffer
   398  0690  3430               	retlw	48
   399  0691  3430               	retlw	48
   400  0692  3430               	retlw	48
   401  0693  3430               	retlw	48
   402  0694  3430               	retlw	48
   403  0695  3430               	retlw	48
   404  0696  3430               	retlw	48
   405  0697  3430               	retlw	48
   406  0698  3430               	retlw	48
   407  0699  3400               	retlw	0
   408                           
   409                           ;initializer for _parentalLockBuffer
   410  069A  3430               	retlw	48
   411  069B  3430               	retlw	48
   412  069C  3430               	retlw	48
   413  069D  3430               	retlw	48
   414  069E  3430               	retlw	48
   415  069F  3430               	retlw	48
   416  06A0  3430               	retlw	48
   417  06A1  3430               	retlw	48
   418  06A2  3400               	retlw	0
   419  06A3  3400               	retlw	0
   420                           
   421                           	psect	idataBANK2
   422  061E                     __pidataBANK2:	
   423                           
   424                           ;initializer for _mainReceivedDataBuffer
   425  061E  3423               	retlw	35
   426  061F  3400               	retlw	0
   427  0620  3400               	retlw	0
   428  0621  3400               	retlw	0
   429  0622  3400               	retlw	0
   430  0623  3400               	retlw	0
   431  0624  3400               	retlw	0
   432  0625  3400               	retlw	0
   433  0626  3400               	retlw	0
   434  0627  3400               	retlw	0
   435  0628  3400               	retlw	0
   436  0629  3400               	retlw	0
   437  062A  3400               	retlw	0
   438  062B  3400               	retlw	0
   439  062C  3400               	retlw	0
   440  062D  3400               	retlw	0
   441  062E  3400               	retlw	0
   442  062F  3400               	retlw	0
   443  0630  3400               	retlw	0
   444  0631  3400               	retlw	0
   445  0632  3400               	retlw	0
   446  0633  3400               	retlw	0
   447  0634  3400               	retlw	0
   448  0635  3400               	retlw	0
   449  0636  3400               	retlw	0
   450  0637  3400               	retlw	0
   451  0638  3400               	retlw	0
   452  0639  3400               	retlw	0
   453  063A  3400               	retlw	0
   454  063B  3400               	retlw	0
   455  063C  3400               	retlw	0
   456  063D  3400               	retlw	0
   457                           
   458                           ;initializer for _currentStateBuffer
   459  063E  3423               	retlw	35
   460  063F  3400               	retlw	0
   461  0640  3400               	retlw	0
   462  0641  3400               	retlw	0
   463  0642  3400               	retlw	0
   464  0643  3400               	retlw	0
   465  0644  3400               	retlw	0
   466  0645  3400               	retlw	0
   467  0646  3400               	retlw	0
   468  0647  3400               	retlw	0
   469  0648  3400               	retlw	0
   470  0649  3400               	retlw	0
   471  064A  3400               	retlw	0
   472  064B  3400               	retlw	0
   473  064C  3400               	retlw	0
   474  064D  3400               	retlw	0
   475  064E  3400               	retlw	0
   476  064F  3400               	retlw	0
   477  0650  3400               	retlw	0
   478  0651  3400               	retlw	0
   479  0652  3400               	retlw	0
   480  0653  3400               	retlw	0
   481  0654  3400               	retlw	0
   482  0655  3400               	retlw	0
   483  0656  3400               	retlw	0
   484  0657  3400               	retlw	0
   485  0658  3400               	retlw	0
   486  0659  3400               	retlw	0
   487  065A  3400               	retlw	0
   488  065B  3400               	retlw	0
   489  065C  3400               	retlw	0
   490  065D  3400               	retlw	0
   491  065E  3400               	retlw	0
   492  065F  3400               	retlw	0
   493  0660  3400               	retlw	0
   494  0661  3400               	retlw	0
   495  0662  3400               	retlw	0
   496  0663  3400               	retlw	0
   497  0664  3400               	retlw	0
   498  0665  3400               	retlw	0
   499  0666  3400               	retlw	0
   500  0667  3400               	retlw	0
   501                           
   502                           	psect	nvBANK0
   503  0062                     __pnvBANK0:	
   504  0062                     _M4:	
   505  0062                     	ds	2
   506  0064                     _M3:	
   507  0064                     	ds	2
   508  0066                     _M2:	
   509  0066                     	ds	2
   510  0068                     _M1:	
   511  0068                     	ds	2
   512                           
   513                           	psect	nvBANK1
   514  00E4                     __pnvBANK1:	
   515  00E4                     _M5:	
   516  00E4                     	ds	2
   517  0014                     _PIR4bits	set	20
   518  0019                     _T1GCON	set	25
   519  0018                     _T1CON	set	24
   520  0016                     _TMR1L	set	22
   521  0017                     _TMR1H	set	23
   522  0018                     _T1CONbits	set	24
   523  0011                     _PIR1bits	set	17
   524  0013                     _PIR3bits	set	19
   525  0010                     _PORTEbits	set	16
   526  000C                     _PORTAbits	set	12
   527  005E                     _PEIE	set	94
   528  005F                     _GIE	set	95
   529  00A6                     _CCP9IF	set	166
   530  008D                     _RC1IF	set	141
   531  00A5                     _RC2IF	set	165
   532  0094                     _PIE4bits	set	148
   533  008E                     _TRISCbits	set	142
   534  0090                     _TRISEbits	set	144
   535  008C                     _TRISAbits	set	140
   536  0091                     _PIE1bits	set	145
   537  0093                     _PIE3bits	set	147
   538  018C                     _ANSELA	set	396
   539  018D                     _ANSELB	set	397
   540  018F                     _ANSELD	set	399
   541  0190                     _ANSELE	set	400
   542  019E                     _TX1STAbits	set	414
   543  019C                     _SP1BRGH	set	412
   544  019B                     _SP1BRGL	set	411
   545  019E                     _TX1STA	set	414
   546  019D                     _RC1STA	set	413
   547  019F                     _BAUD1CON	set	415
   548  0199                     _RC1REG	set	409
   549  019D                     _RC1STAbits	set	413
   550  019A                     _TX1REG	set	410
   551  020D                     _WPUB	set	525
   552  020F                     _WPUD	set	527
   553  0210                     _WPUE	set	528
   554  030D                     _TRISGbits	set	781
   555  030C                     _TRISFbits	set	780
   556  040C                     _ANSELF	set	1036
   557  040D                     _ANSELG	set	1037
   558  0414                     _T3GCON	set	1044
   559  0413                     _T3CON	set	1043
   560  0411                     _TMR3L	set	1041
   561  0412                     _TMR3H	set	1042
   562  0413                     _T3CONbits	set	1043
   563  048D                     _WPUG	set	1165
   564  0496                     _TX2STAbits	set	1174
   565  0494                     _SP2BRGH	set	1172
   566  0493                     _SP2BRGL	set	1171
   567  0496                     _TX2STA	set	1174
   568  0495                     _RC2STA	set	1173
   569  0497                     _BAUD2CON	set	1175
   570  0491                     _RC2REG	set	1169
   571  0495                     _RC2STAbits	set	1173
   572  0492                     _TX2REG	set	1170
   573  061A                     _CCPR9L	set	1562
   574  061B                     _CCPR9H	set	1563
   575  061C                     _CCP9CON	set	1564
   576                           
   577                           	psect	stringtext1
   578  1000                     __pstringtext1:	
   579  1000                     STR_1:	
   580  1000  3423               	retlw	35	;'#'
   581  1001  3400               	retlw	0
   582                           
   583                           	psect	stringtext2
   584  0000                     __pstringtext2:	
   585                           
   586                           ; #config settings
   587  0000                     
   588                           	psect	cinit
   589  02A1                     start_initialization:	
   590  02A1                     __initialization:	
   591                           
   592                           ; Initialize objects allocated to COMMON
   593  02A1  30AE               	movlw	low __pidataCOMMON
   594  02A2  0084               	movwf	4
   595  02A3  308F               	movlw	(high __pidataCOMMON)| (0+128)
   596  02A4  0085               	movwf	5
   597  02A5  3070               	movlw	low __pdataCOMMON
   598  02A6  0086               	movwf	6
   599  02A7  3000               	movlw	high __pdataCOMMON
   600  02A8  0087               	movwf	7
   601  02A9  3006               	movlw	6
   602  02AA  318F  27A8  3182   	fcall	init_ram
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  02AD  30D5               	movlw	low __pidataBANK0
   606  02AE  0084               	movwf	4
   607  02AF  308F               	movlw	(high __pidataBANK0)| (0+128)
   608  02B0  0085               	movwf	5
   609  02B1  3049               	movlw	low __pdataBANK0
   610  02B2  0086               	movwf	6
   611  02B3  3000               	movlw	high __pdataBANK0
   612  02B4  0087               	movwf	7
   613  02B5  300D               	movlw	13
   614  02B6  318F  27A8  3182   	fcall	init_ram
   615                           
   616                           ; Initialize objects allocated to BANK1
   617  02B9  3068               	movlw	low __pidataBANK1
   618  02BA  0084               	movwf	4
   619  02BB  3086               	movlw	(high __pidataBANK1)| (0+128)
   620  02BC  0085               	movwf	5
   621  02BD  30A0               	movlw	low __pdataBANK1
   622  02BE  0086               	movwf	6
   623  02BF  3000               	movlw	high __pdataBANK1
   624  02C0  0087               	movwf	7
   625  02C1  303C               	movlw	60
   626  02C2  318F  27A8  3182   	fcall	init_ram
   627                           
   628                           ; Initialize objects allocated to BANK2
   629  02C5  301E               	movlw	low __pidataBANK2
   630  02C6  0084               	movwf	4
   631  02C7  3086               	movlw	(high __pidataBANK2)| (0+128)
   632  02C8  0085               	movwf	5
   633  02C9  3020               	movlw	low __pdataBANK2
   634  02CA  0086               	movwf	6
   635  02CB  3001               	movlw	high __pdataBANK2
   636  02CC  0087               	movwf	7
   637  02CD  304A               	movlw	74
   638  02CE  318F  27A8         	fcall	init_ram
   639                           
   640                           ; Clear objects allocated to BANK0
   641  02D0  01D6               	clrf	__pbssBANK0& (0+127)
   642  02D1  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   643  02D2  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   644  02D3  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   645  02D4  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   646  02D5  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   647  02D6  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   648  02D7  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   649  02D8  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   650  02D9  01DF               	clrf	(__pbssBANK0+9)& (0+127)
   651  02DA  01E0               	clrf	(__pbssBANK0+10)& (0+127)
   652  02DB  01E1               	clrf	(__pbssBANK0+11)& (0+127)
   653  02DC                     end_of_initialization:	
   654                           ;End of C runtime variable initialization code
   655                           
   656  02DC                     __end_of__initialization:	
   657  02DC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   658  02DD  0020               	movlb	0
   659  02DE  3184  2C12         	ljmp	_main	;jump to C main() function
   660                           
   661                           	psect	dataCOMMON
   662  0070                     __pdataCOMMON:	
   663  0070                     _levelofDimmer_LSB:	
   664  0070                     	ds	1
   665  0071                     _ErrorNames:	
   666  0071                     	ds	5
   667                           
   668                           	psect	bssBANK0
   669  0056                     __pbssBANK0:	
   670  0056                     _start_PWM_Generation_in_ISR_FLAG:	
   671  0056                     	ds	2
   672  0058                     _touchPanelDataReceived:	
   673  0058                     	ds	2
   674  005A                     _touchpanelReceivedataPosition:	
   675  005A                     	ds	2
   676  005C                     _mainDataReceived:	
   677  005C                     	ds	2
   678  005E                     _mainReceivedDataPosition:	
   679  005E                     	ds	2
   680  0060                     _checkFlag:	
   681  0060                     	ds	2
   682                           
   683                           	psect	dataBANK0
   684  0049                     __pdataBANK0:	
   685  0049                     _tempReceiveTouchpanelDataBuffer:	
   686  0049                     	ds	8
   687  0051                     applianceControl@F3726:	
   688  0051                     	ds	2
   689  0053                     applianceControl@F3724:	
   690  0053                     	ds	2
   691  0055                     _levelofDimmer_MSB:	
   692  0055                     	ds	1
   693                           
   694                           	psect	dataBANK1
   695  00A0                     __pdataBANK1:	
   696  00A0                     _tempReceivedDataBuffer:	
   697  00A0                     	ds	24
   698  00B8                     _touchpanleReceivedDatabuffer:	
   699  00B8                     	ds	16
   700  00C8                     _copy_parentalLockBuffer:	
   701  00C8                     	ds	10
   702  00D2                     _parentalLockBuffer:	
   703  00D2                     	ds	10
   704                           
   705                           	psect	dataBANK2
   706  0120                     __pdataBANK2:	
   707  0120                     _mainReceivedDataBuffer:	
   708  0120                     	ds	32
   709  0140                     _currentStateBuffer:	
   710  0140                     	ds	42
   711                           
   712                           	psect	inittext
   713  0FA8                     init_ram:	
   714  0FA8  00FE               	movwf	126
   715  0FA9                     initloop:	
   716  0FA9  0012               	moviw fsr0++
   717  0FAA  001E               	movwi fsr1++
   718  0FAB  0BFE               	decfsz	126,f
   719  0FAC  2FA9               	goto	initloop
   720  0FAD  3400               	retlw	0
   721                           
   722                           	psect	cstackBANK1
   723  00DC                     __pcstackBANK1:	
   724  00DC                     main@start_flag:	
   725                           
   726                           ; 2 bytes @ 0x0
   727  00DC                     	ds	2
   728  00DE                     main@end_flag:	
   729                           
   730                           ; 2 bytes @ 0x2
   731  00DE                     	ds	2
   732  00E0                     main@dataBufferCounter:	
   733                           
   734                           ; 2 bytes @ 0x4
   735  00E0                     	ds	2
   736  00E2                     main@dataBufferCounter_709:	
   737                           
   738                           ; 2 bytes @ 0x6
   739  00E2                     	ds	2
   740                           
   741                           	psect	cstackCOMMON
   742  0076                     __pcstackCOMMON:	
   743  0076                     ?_isdigit:	
   744  0076                     ?_sendAcknowledgment:	
   745                           ; 1 bit 
   746                           
   747  0076                     ?_errorsISR:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0076                     ??_errorsISR:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0076                     ?_GPIO_pin_Initialize:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0076                     ?_allPeripheralInit:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0076                     ?_copyReceivedDataBuffer:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0076                     ?_errorsMain:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0076                     ?_copyTouchpanelReceiveDataBuffer:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0076                     ?_clearAllPorts:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0076                     ?_pinINIT_extra:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0076                     ?_EUSART_Initialize:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0076                     ?_EUSART2_Initialize:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0076                     ?_TMR1_Initialize:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0076                     ?_TMR3_Initialize:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0076                     ?_CCP9_Initialize:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0076                     ?_isr:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0076                     ?_main:	
   793                           ; 1 bytes @ 0x0
   794                           
   795                           
   796                           ; 2 bytes @ 0x0
   797  0076                     	ds	1
   798  0077                     errorsISR@Tx_count:	
   799                           
   800                           ; 2 bytes @ 0x1
   801  0077                     	ds	2
   802  0079                     errorsISR@errNum:	
   803                           
   804                           ; 1 bytes @ 0x3
   805  0079                     	ds	1
   806  007A                     ??_isr:	
   807                           
   808                           ; 1 bytes @ 0x4
   809  007A                     	ds	2
   810                           
   811                           	psect	cstackBANK0
   812  0020                     __pcstackBANK0:	
   813  0020                     ??_sendAcknowledgment:	
   814  0020                     ?_sendFeedback_TO_Gateway:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     ??_GPIO_pin_Initialize:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     ??_allPeripheralInit:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     ??_copyReceivedDataBuffer:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     ??_errorsMain:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0020                     ??_copyTouchpanelReceiveDataBuffer:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0020                     ??_clearAllPorts:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0020                     ??_pinINIT_extra:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0020                     ??_EUSART_Initialize:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     ??_EUSART2_Initialize:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ??_TMR1_Initialize:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ??_TMR3_Initialize:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0020                     ??_CCP9_Initialize:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ??_isdigit:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0020                     ?___wmul:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0020                     sendFeedback_TO_Gateway@sw_statusS:	
   860                           ; 2 bytes @ 0x0
   861                           
   862  0020                     _isdigit$944:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0020                     ___wmul@multiplier:	
   866                           ; 1 bytes @ 0x0
   867                           
   868                           
   869                           ; 2 bytes @ 0x0
   870  0020                     	ds	1
   871  0021                     ??_sendFeedback_TO_Gateway:	
   872  0021                     isdigit@c:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0021                     errorsMain@Tx_count:	
   876                           ; 1 bytes @ 0x1
   877                           
   878  0021                     sendAcknowledgment@Tx_count:	
   879                           ; 2 bytes @ 0x1
   880                           
   881  0021                     copyReceivedDataBuffer@dataBufferCounter:	
   882                           ; 2 bytes @ 0x1
   883                           
   884  0021                     copyTouchpanelReceiveDataBuffer@dataBufferCounter:	
   885                           ; 2 bytes @ 0x1
   886                           
   887                           
   888                           ; 2 bytes @ 0x1
   889  0021                     	ds	1
   890  0022                     sendFeedback_TO_Gateway@sw_numberN:	
   891  0022                     ___wmul@multiplicand:	
   892                           ; 1 bytes @ 0x2
   893                           
   894                           
   895                           ; 2 bytes @ 0x2
   896  0022                     	ds	1
   897  0023                     ?_actiontouchPanel:	
   898  0023                     actiontouchPanel@sw_status:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0023                     errorsMain@errNum:	
   902                           ; 1 bytes @ 0x3
   903                           
   904  0023                     sendAcknowledgment@currentStateBuffer:	
   905                           ; 1 bytes @ 0x3
   906                           
   907                           
   908                           ; 1 bytes @ 0x3
   909  0023                     	ds	1
   910  0024                     ??___wmul:	
   911  0024                     actiontouchPanel@Sw_speed:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0024                     ___wmul@product:	
   915                           ; 1 bytes @ 0x4
   916                           
   917                           
   918                           ; 2 bytes @ 0x4
   919  0024                     	ds	1
   920  0025                     ??_actiontouchPanel:	
   921                           
   922                           ; 1 bytes @ 0x5
   923  0025                     	ds	1
   924  0026                     ?_atoi:	
   925  0026                     actiontouchPanel@int_swSpeed:	
   926                           ; 2 bytes @ 0x6
   927                           
   928                           
   929                           ; 2 bytes @ 0x6
   930  0026                     	ds	2
   931  0028                     ??_atoi:	
   932  0028                     actiontouchPanel@ch_sw_num:	
   933                           ; 1 bytes @ 0x8
   934                           
   935                           
   936                           ; 1 bytes @ 0x8
   937  0028                     	ds	1
   938  0029                     actiontouchPanel@SwNum:	
   939                           
   940                           ; 2 bytes @ 0x9
   941  0029                     	ds	1
   942  002A                     atoi@sign:	
   943                           
   944                           ; 1 bytes @ 0xA
   945  002A                     	ds	1
   946  002B                     actiontouchPanel@Switch_Num:	
   947  002B                     atoi@a:	
   948                           ; 1 bytes @ 0xB
   949                           
   950                           
   951                           ; 2 bytes @ 0xB
   952  002B                     	ds	1
   953  002C                     actiontouchPanel@switch_status:	
   954                           
   955                           ; 2 bytes @ 0xC
   956  002C                     	ds	1
   957  002D                     atoi@s:	
   958                           
   959                           ; 1 bytes @ 0xD
   960  002D                     	ds	1
   961  002E                     ?_applianceControl:	
   962  002E                     applianceControl@charSwitchLSB:	
   963                           ; 1 bytes @ 0xE
   964                           
   965                           
   966                           ; 1 bytes @ 0xE
   967  002E                     	ds	1
   968  002F                     applianceControl@charSwitchSTATE:	
   969                           
   970                           ; 1 bytes @ 0xF
   971  002F                     	ds	1
   972  0030                     applianceControl@chDimmerSpeedMSB:	
   973                           
   974                           ; 1 bytes @ 0x10
   975  0030                     	ds	1
   976  0031                     applianceControl@chDimmerSpeedLSB:	
   977                           
   978                           ; 1 bytes @ 0x11
   979  0031                     	ds	1
   980  0032                     applianceControl@charParentalControl:	
   981                           
   982                           ; 1 bytes @ 0x12
   983  0032                     	ds	1
   984  0033                     applianceControl@charFinalFrameState:	
   985                           
   986                           ; 1 bytes @ 0x13
   987  0033                     	ds	1
   988  0034                     ??_applianceControl:	
   989                           
   990                           ; 1 bytes @ 0x14
   991  0034                     	ds	2
   992  0036                     applianceControl@integerSpeed:	
   993                           
   994                           ; 2 bytes @ 0x16
   995  0036                     	ds	2
   996  0038                     applianceControl@charSwitchMSB:	
   997                           
   998                           ; 1 bytes @ 0x18
   999  0038                     	ds	1
  1000  0039                     applianceControl@switchNumberStringBuffer:	
  1001                           
  1002                           ; 2 bytes @ 0x19
  1003  0039                     	ds	2
  1004  003B                     applianceControl@dimmerSpeedStringBuffer:	
  1005                           
  1006                           ; 2 bytes @ 0x1B
  1007  003B                     	ds	2
  1008  003D                     applianceControl@integerSwitchState:	
  1009                           
  1010                           ; 2 bytes @ 0x1D
  1011  003D                     	ds	2
  1012  003F                     applianceControl@integerSwitchNumber:	
  1013                           
  1014                           ; 2 bytes @ 0x1F
  1015  003F                     	ds	2
  1016  0041                     applianceControl@currentStateBufferPositions:	
  1017                           
  1018                           ; 2 bytes @ 0x21
  1019  0041                     	ds	2
  1020  0043                     ??_main:	
  1021                           
  1022                           ; 1 bytes @ 0x23
  1023  0043                     	ds	6
  1024                           
  1025                           	psect	maintext
  1026  0412                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 869 in file "../master_eight.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  dataBufferCo    2    6[BANK1 ] int 
  1037 ;;  dataBufferCo    2    4[BANK1 ] int 
  1038 ;;  end_flag        2    2[BANK1 ] int 
  1039 ;;  start_flag      2    0[BANK1 ] int 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2  392[None  ] int 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : B1F/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1050 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0
  1051 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1052 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0
  1053 ;;Total ram usage:       14 bytes
  1054 ;; Hardware stack levels required when called:    5
  1055 ;; This function calls:
  1056 ;;		_GPIO_pin_Initialize
  1057 ;;		_actiontouchPanel
  1058 ;;		_allPeripheralInit
  1059 ;;		_applianceControl
  1060 ;;		_copyReceivedDataBuffer
  1061 ;;		_copyTouchpanelReceiveDataBuffer
  1062 ;;		_errorsMain
  1063 ;; This function is called by:
  1064 ;;		Startup code after reset
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _main
  1070  0412                     _main:	
  1071                           
  1072                           ;master_eight.c: 871: M1=1; M2=1; M3=1; M4=1; M5=1;
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1076  0412  3001               	movlw	1
  1077  0413  0020               	movlb	0	; select bank0
  1078  0414  00E8               	movwf	_M1
  1079  0415  3000               	movlw	0
  1080  0416  00E9               	movwf	_M1+1
  1081  0417  3001               	movlw	1
  1082  0418  00E6               	movwf	_M2
  1083  0419  3000               	movlw	0
  1084  041A  00E7               	movwf	_M2+1
  1085  041B  3001               	movlw	1
  1086  041C  00E4               	movwf	_M3
  1087  041D  3000               	movlw	0
  1088  041E  00E5               	movwf	_M3+1
  1089  041F  3001               	movlw	1
  1090  0420  00E2               	movwf	_M4
  1091  0421  3000               	movlw	0
  1092  0422  00E3               	movwf	_M4+1
  1093  0423  3001               	movlw	1
  1094  0424  0021               	movlb	1	; select bank1
  1095  0425  00E4               	movwf	_M5^(0+128)
  1096  0426  3000               	movlw	0
  1097  0427  00E5               	movwf	(_M5^(0+128)+1)
  1098                           
  1099                           ;master_eight.c: 872: PORTAbits.RA2 = 0;PORTEbits.RE5 = 1;
  1100  0428  0020               	movlb	0	; select bank0
  1101  0429  110C               	bcf	12,2	;volatile
  1102  042A  1690               	bsf	16,5	;volatile
  1103                           
  1104                           ;master_eight.c: 873: GPIO_pin_Initialize();
  1105  042B  3187  27D5  3184   	fcall	_GPIO_pin_Initialize
  1106                           
  1107                           ;master_eight.c: 874: allPeripheralInit();
  1108  042E  318F  27E2  3184   	fcall	_allPeripheralInit
  1109  0431                     l3746:	
  1110                           ;master_eight.c: 877: while(1){
  1111                           
  1112                           
  1113                           ;master_eight.c: 879: if(mainDataReceived==1){
  1114  0431  0020               	movlb	0	; select bank0
  1115  0432  035C               	decf	_mainDataReceived,w
  1116  0433  045D               	iorwf	_mainDataReceived+1,w
  1117  0434  1D03               	btfss	3,2
  1118  0435  2CC3               	goto	l3784
  1119                           
  1120                           ;master_eight.c: 880: mainDataReceived=0;
  1121  0436  01DC               	clrf	_mainDataReceived
  1122  0437  01DD               	clrf	_mainDataReceived+1
  1123                           
  1124                           ;master_eight.c: 881: checkFlag=1;
  1125  0438  3001               	movlw	1
  1126  0439  00E0               	movwf	_checkFlag
  1127  043A  3000               	movlw	0
  1128  043B  00E1               	movwf	_checkFlag+1
  1129                           
  1130                           ;master_eight.c: 882: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%
      +                          ' && mainReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1131  043C  3025               	movlw	37
  1132  043D  0022               	movlb	2	; select bank2
  1133  043E  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1134  043F  1D03               	btfss	3,2
  1135  0440  2C7A               	goto	l3764
  1136  0441  3025               	movlw	37
  1137  0442  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1138  0443  1D03               	btfss	3,2
  1139  0444  2C7A               	goto	l3764
  1140  0445  3040               	movlw	64
  1141  0446  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1142  0447  1D03               	btfss	3,2
  1143  0448  2C7A               	goto	l3764
  1144  0449  3040               	movlw	64
  1145  044A  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1146  044B  1D03               	btfss	3,2
  1147  044C  2C7A               	goto	l3764
  1148                           
  1149                           ;master_eight.c: 883: copyReceivedDataBuffer();
  1150  044D  3186  26D9  3184   	fcall	_copyReceivedDataBuffer
  1151                           
  1152                           ;master_eight.c: 885: applianceControl(tempReceivedDataBuffer[0],
  1153                           ;master_eight.c: 886: tempReceivedDataBuffer[1],
  1154                           ;master_eight.c: 887: tempReceivedDataBuffer[2],
  1155                           ;master_eight.c: 888: tempReceivedDataBuffer[3],
  1156                           ;master_eight.c: 889: tempReceivedDataBuffer[4],
  1157                           ;master_eight.c: 890: tempReceivedDataBuffer[5],
  1158                           ;master_eight.c: 891: tempReceivedDataBuffer[6]);
  1159  0450  0021               	movlb	1	; select bank1
  1160  0451  0821               	movf	(_tempReceivedDataBuffer^(0+128)+1),w
  1161  0452  0020               	movlb	0	; select bank0
  1162  0453  00C3               	movwf	??_main
  1163  0454  0843               	movf	??_main,w
  1164  0455  00AE               	movwf	applianceControl@charSwitchLSB
  1165  0456  0021               	movlb	1	; select bank1
  1166  0457  0822               	movf	(_tempReceivedDataBuffer^(0+128)+2),w
  1167  0458  0020               	movlb	0	; select bank0
  1168  0459  00C4               	movwf	??_main+1
  1169  045A  0844               	movf	??_main+1,w
  1170  045B  00AF               	movwf	applianceControl@charSwitchSTATE
  1171  045C  0021               	movlb	1	; select bank1
  1172  045D  0823               	movf	(_tempReceivedDataBuffer^(0+128)+3),w
  1173  045E  0020               	movlb	0	; select bank0
  1174  045F  00C5               	movwf	??_main+2
  1175  0460  0845               	movf	??_main+2,w
  1176  0461  00B0               	movwf	applianceControl@chDimmerSpeedMSB
  1177  0462  0021               	movlb	1	; select bank1
  1178  0463  0824               	movf	(_tempReceivedDataBuffer^(0+128)+4),w
  1179  0464  0020               	movlb	0	; select bank0
  1180  0465  00C6               	movwf	??_main+3
  1181  0466  0846               	movf	??_main+3,w
  1182  0467  00B1               	movwf	applianceControl@chDimmerSpeedLSB
  1183  0468  0021               	movlb	1	; select bank1
  1184  0469  0825               	movf	(_tempReceivedDataBuffer^(0+128)+5),w
  1185  046A  0020               	movlb	0	; select bank0
  1186  046B  00C7               	movwf	??_main+4
  1187  046C  0847               	movf	??_main+4,w
  1188  046D  00B2               	movwf	applianceControl@charParentalControl
  1189  046E  0021               	movlb	1	; select bank1
  1190  046F  0826               	movf	(_tempReceivedDataBuffer^(0+128)+6),w
  1191  0470  0020               	movlb	0	; select bank0
  1192  0471  00C8               	movwf	??_main+5
  1193  0472  0848               	movf	??_main+5,w
  1194  0473  00B3               	movwf	applianceControl@charFinalFrameState
  1195  0474  0021               	movlb	1	; select bank1
  1196  0475  0820               	movf	_tempReceivedDataBuffer^(0+128),w
  1197  0476  3182  22E0  3184   	fcall	_applianceControl
  1198                           
  1199                           ;master_eight.c: 893: }
  1200  0479  2CC3               	goto	l3784
  1201  047A                     l3764:	
  1202                           
  1203                           ;master_eight.c: 894: else{
  1204                           ;master_eight.c: 895: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1205  047A  3045               	movlw	69
  1206  047B  0020               	movlb	0	; select bank0
  1207  047C  00C3               	movwf	??_main
  1208  047D  0843               	movf	??_main,w
  1209  047E  00F1               	movwf	_ErrorNames
  1210  047F  3052               	movlw	82
  1211  0480  00C3               	movwf	??_main
  1212  0481  0843               	movf	??_main,w
  1213  0482  00F2               	movwf	_ErrorNames+1
  1214  0483  304C               	movlw	76
  1215  0484  00C3               	movwf	??_main
  1216  0485  0843               	movf	??_main,w
  1217  0486  00F3               	movwf	_ErrorNames+2
  1218  0487  3053               	movlw	83
  1219  0488  00C3               	movwf	??_main
  1220  0489  0843               	movf	??_main,w
  1221  048A  00F4               	movwf	_ErrorNames+3
  1222                           
  1223                           ;master_eight.c: 896: errorsMain(ErrorNames);
  1224  048B  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1225  048C  3187  2757  3184   	fcall	_errorsMain
  1226                           
  1227                           ;master_eight.c: 897: RC1STAbits.SPEN=0;
  1228  048F  0023               	movlb	3	; select bank3
  1229  0490  139D               	bcf	29,7	;volatile
  1230                           
  1231                           ;master_eight.c: 898: RC1STAbits.CREN = 0;
  1232  0491  121D               	bcf	29,4	;volatile
  1233                           
  1234                           ;master_eight.c: 899: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCo
      +                          unter++)
  1235  0492  0021               	movlb	1	; select bank1
  1236  0493  01E0               	clrf	main@dataBufferCounter^(0+128)
  1237  0494  01E1               	clrf	(main@dataBufferCounter+1)^(0+128)
  1238  0495  0861               	movf	(main@dataBufferCounter+1)^(0+128),w
  1239  0496  3A80               	xorlw	128
  1240  0497  0020               	movlb	0	; select bank0
  1241  0498  00C3               	movwf	??_main
  1242  0499  3080               	movlw	128
  1243  049A  0243               	subwf	??_main,w
  1244  049B  1D03               	skipz
  1245  049C  2CA0               	goto	u1465
  1246  049D  300F               	movlw	15
  1247  049E  0021               	movlb	1	; select bank1
  1248  049F  0260               	subwf	main@dataBufferCounter^(0+128),w
  1249  04A0                     u1465:	
  1250  04A0  1803               	btfsc	3,0
  1251  04A1  2CC0               	goto	l398
  1252  04A2                     l3778:	
  1253                           
  1254                           ;master_eight.c: 900: {
  1255                           ;master_eight.c: 901: mainReceivedDataBuffer[dataBufferCounter] = '#';
  1256  04A2  3023               	movlw	35
  1257  04A3  0020               	movlb	0	; select bank0
  1258  04A4  00C3               	movwf	??_main
  1259  04A5  0021               	movlb	1	; select bank1
  1260  04A6  0860               	movf	main@dataBufferCounter^(0+128),w
  1261  04A7  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1262  04A8  0086               	movwf	6
  1263  04A9  3001               	movlw	1	; select bank2/3
  1264  04AA  0087               	movwf	7
  1265  04AB  0020               	movlb	0	; select bank0
  1266  04AC  0843               	movf	??_main,w
  1267  04AD  0081               	movwf	1
  1268  04AE  3001               	movlw	1
  1269  04AF  0021               	movlb	1	; select bank1
  1270  04B0  07E0               	addwf	main@dataBufferCounter^(0+128),f
  1271  04B1  3000               	movlw	0
  1272  04B2  3DE1               	addwfc	(main@dataBufferCounter+1)^(0+128),f
  1273  04B3  0861               	movf	(main@dataBufferCounter+1)^(0+128),w
  1274  04B4  3A80               	xorlw	128
  1275  04B5  0020               	movlb	0	; select bank0
  1276  04B6  00C3               	movwf	??_main
  1277  04B7  3080               	movlw	128
  1278  04B8  0243               	subwf	??_main,w
  1279  04B9  1D03               	skipz
  1280  04BA  2CBE               	goto	u1475
  1281  04BB  300F               	movlw	15
  1282  04BC  0021               	movlb	1	; select bank1
  1283  04BD  0260               	subwf	main@dataBufferCounter^(0+128),w
  1284  04BE                     u1475:	
  1285  04BE  1C03               	skipc
  1286  04BF  2CA2               	goto	l3778
  1287  04C0                     l398:	
  1288                           
  1289                           ;master_eight.c: 902: }
  1290                           ;master_eight.c: 903: RC1STAbits.CREN = 1;
  1291  04C0  0023               	movlb	3	; select bank3
  1292  04C1  161D               	bsf	29,4	;volatile
  1293                           
  1294                           ;master_eight.c: 904: RC1STAbits.SPEN=1;
  1295  04C2  179D               	bsf	29,7	;volatile
  1296  04C3                     l3784:	
  1297                           
  1298                           ;master_eight.c: 905: }
  1299                           ;master_eight.c: 906: }
  1300                           ;master_eight.c: 909: if(touchPanelDataReceived == 1)
  1301  04C3  0020               	movlb	0	; select bank0
  1302  04C4  0358               	decf	_touchPanelDataReceived,w	;volatile
  1303  04C5  0459               	iorwf	_touchPanelDataReceived+1,w	;volatile
  1304  04C6  1D03               	btfss	3,2
  1305  04C7  2C31               	goto	l3746
  1306                           
  1307                           ;master_eight.c: 910: {
  1308                           ;master_eight.c: 912: touchPanelDataReceived = 0;
  1309  04C8  01D8               	clrf	_touchPanelDataReceived	;volatile
  1310  04C9  01D9               	clrf	_touchPanelDataReceived+1	;volatile
  1311                           
  1312                           ;master_eight.c: 913: int start_flag = 0;
  1313  04CA  0021               	movlb	1	; select bank1
  1314  04CB  01DC               	clrf	main@start_flag^(0+128)
  1315  04CC  01DD               	clrf	(main@start_flag+1)^(0+128)
  1316                           
  1317                           ;master_eight.c: 914: int end_flag = 0;
  1318  04CD  01DE               	clrf	main@end_flag^(0+128)
  1319  04CE  01DF               	clrf	(main@end_flag+1)^(0+128)
  1320                           
  1321                           ;master_eight.c: 915: if(touchpanleReceivedDatabuffer[0] == '(' && touchpanleReceivedDat
      +                          abuffer[7] == ')')
  1322  04CF  3028               	movlw	40
  1323  04D0  0638               	xorwf	_touchpanleReceivedDatabuffer^(0+128),w
  1324  04D1  1D03               	btfss	3,2
  1325  04D2  2CEC               	goto	l3798
  1326  04D3  3029               	movlw	41
  1327  04D4  063F               	xorwf	(_touchpanleReceivedDatabuffer^(0+128)+7),w
  1328  04D5  1D03               	btfss	3,2
  1329  04D6  2CEC               	goto	l3798
  1330                           
  1331                           ;master_eight.c: 916: {
  1332                           ;master_eight.c: 917: copyTouchpanelReceiveDataBuffer();
  1333  04D7  3187  270A  3184   	fcall	_copyTouchpanelReceiveDataBuffer
  1334                           
  1335                           ;master_eight.c: 918: if(tempReceiveTouchpanelDataBuffer[0] != '@')
  1336  04DA  3040               	movlw	64
  1337  04DB  0020               	movlb	0	; select bank0
  1338  04DC  0649               	xorwf	_tempReceiveTouchpanelDataBuffer,w
  1339  04DD  1903               	btfsc	3,2
  1340  04DE  2C31               	goto	l3746
  1341                           
  1342                           ;master_eight.c: 919: {
  1343                           ;master_eight.c: 920: actiontouchPanel(tempReceiveTouchpanelDataBuffer[0]
  1344                           ;master_eight.c: 921: ,tempReceiveTouchpanelDataBuffer[1]
  1345                           ;master_eight.c: 922: ,tempReceiveTouchpanelDataBuffer[2]);
  1346  04DF  084A               	movf	_tempReceiveTouchpanelDataBuffer+1,w
  1347  04E0  00C3               	movwf	??_main
  1348  04E1  0843               	movf	??_main,w
  1349  04E2  00A3               	movwf	actiontouchPanel@sw_status
  1350  04E3  084B               	movf	_tempReceiveTouchpanelDataBuffer+2,w
  1351  04E4  00C4               	movwf	??_main+1
  1352  04E5  0844               	movf	??_main+1,w
  1353  04E6  00A4               	movwf	actiontouchPanel@Sw_speed
  1354  04E7  0849               	movf	_tempReceiveTouchpanelDataBuffer,w
  1355  04E8  3185  2535  3184   	fcall	_actiontouchPanel
  1356                           
  1357                           ;master_eight.c: 924: }
  1358                           ;master_eight.c: 928: }
  1359  04EB  2C31               	goto	l3746
  1360  04EC                     l3798:	
  1361                           
  1362                           ;master_eight.c: 929: else
  1363                           ;master_eight.c: 930: {
  1364                           ;master_eight.c: 931: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1365  04EC  3045               	movlw	69
  1366  04ED  0020               	movlb	0	; select bank0
  1367  04EE  00C3               	movwf	??_main
  1368  04EF  0843               	movf	??_main,w
  1369  04F0  00F1               	movwf	_ErrorNames
  1370  04F1  3052               	movlw	82
  1371  04F2  00C3               	movwf	??_main
  1372  04F3  0843               	movf	??_main,w
  1373  04F4  00F2               	movwf	_ErrorNames+1
  1374  04F5  304C               	movlw	76
  1375  04F6  00C3               	movwf	??_main
  1376  04F7  0843               	movf	??_main,w
  1377  04F8  00F3               	movwf	_ErrorNames+2
  1378  04F9  3053               	movlw	83
  1379  04FA  00C3               	movwf	??_main
  1380  04FB  0843               	movf	??_main,w
  1381  04FC  00F4               	movwf	_ErrorNames+3
  1382                           
  1383                           ;master_eight.c: 932: errorsMain(ErrorNames);
  1384  04FD  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1385  04FE  3187  2757  3184   	fcall	_errorsMain
  1386                           
  1387                           ;master_eight.c: 933: RC2STAbits.SPEN = 0;
  1388  0501  0029               	movlb	9	; select bank9
  1389  0502  1395               	bcf	21,7	;volatile
  1390                           
  1391                           ;master_eight.c: 934: RC2STAbits.CREN = 0;
  1392  0503  1215               	bcf	21,4	;volatile
  1393                           
  1394                           ;master_eight.c: 935: for(int dataBufferCounter = 0; dataBufferCounter< 8; dataBufferCou
      +                          nter++)
  1395  0504  0021               	movlb	1	; select bank1
  1396  0505  01E2               	clrf	main@dataBufferCounter_709^(0+128)
  1397  0506  01E3               	clrf	(main@dataBufferCounter_709+1)^(0+128)
  1398  0507  0863               	movf	(main@dataBufferCounter_709+1)^(0+128),w
  1399  0508  3A80               	xorlw	128
  1400  0509  0020               	movlb	0	; select bank0
  1401  050A  00C3               	movwf	??_main
  1402  050B  3080               	movlw	128
  1403  050C  0243               	subwf	??_main,w
  1404  050D  1D03               	skipz
  1405  050E  2D12               	goto	u1525
  1406  050F  3008               	movlw	8
  1407  0510  0021               	movlb	1	; select bank1
  1408  0511  0262               	subwf	main@dataBufferCounter_709^(0+128),w
  1409  0512                     u1525:	
  1410  0512  1803               	btfsc	3,0
  1411  0513  2D31               	goto	l404
  1412  0514                     l3812:	
  1413                           
  1414                           ;master_eight.c: 936: {
  1415                           ;master_eight.c: 937: touchpanleReceivedDatabuffer[dataBufferCounter] = '#';
  1416  0514  3023               	movlw	35
  1417  0515  0020               	movlb	0	; select bank0
  1418  0516  00C3               	movwf	??_main
  1419  0517  0021               	movlb	1	; select bank1
  1420  0518  0862               	movf	main@dataBufferCounter_709^(0+128),w
  1421  0519  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1422  051A  0086               	movwf	6
  1423  051B  0187               	clrf	7
  1424  051C  0020               	movlb	0	; select bank0
  1425  051D  0843               	movf	??_main,w
  1426  051E  0081               	movwf	1
  1427  051F  3001               	movlw	1
  1428  0520  0021               	movlb	1	; select bank1
  1429  0521  07E2               	addwf	main@dataBufferCounter_709^(0+128),f
  1430  0522  3000               	movlw	0
  1431  0523  3DE3               	addwfc	(main@dataBufferCounter_709+1)^(0+128),f
  1432  0524  0863               	movf	(main@dataBufferCounter_709+1)^(0+128),w
  1433  0525  3A80               	xorlw	128
  1434  0526  0020               	movlb	0	; select bank0
  1435  0527  00C3               	movwf	??_main
  1436  0528  3080               	movlw	128
  1437  0529  0243               	subwf	??_main,w
  1438  052A  1D03               	skipz
  1439  052B  2D2F               	goto	u1535
  1440  052C  3008               	movlw	8
  1441  052D  0021               	movlb	1	; select bank1
  1442  052E  0262               	subwf	main@dataBufferCounter_709^(0+128),w
  1443  052F                     u1535:	
  1444  052F  1C03               	skipc
  1445  0530  2D14               	goto	l3812
  1446  0531                     l404:	
  1447                           
  1448                           ;master_eight.c: 938: }
  1449                           ;master_eight.c: 939: RC2STAbits.CREN = 1;
  1450  0531  0029               	movlb	9	; select bank9
  1451  0532  1615               	bsf	21,4	;volatile
  1452                           
  1453                           ;master_eight.c: 940: RC2STAbits.SPEN=1;
  1454  0533  1795               	bsf	21,7	;volatile
  1455  0534  2C31               	goto	l3746
  1456  0535                     __end_of_main:	
  1457                           
  1458                           	psect	text1
  1459  0757                     __ptext1:	
  1460 ;; *************** function _errorsMain *****************
  1461 ;; Defined at:
  1462 ;;		line 1216 in file "../master_eight.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  errNum          1    wreg     PTR unsigned char 
  1465 ;;		 -> ErrorNames(5), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  errNum          1    3[BANK0 ] PTR unsigned char 
  1468 ;;		 -> ErrorNames(5), 
  1469 ;;  Tx_count        2    1[BANK0 ] int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        4 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    2
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function _errorsMain
  1495  0757                     _errorsMain:	
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _errorsMain: [wreg+fsr1l+fsr1h+status,2+status,0]
  1499                           ;errorsMain@errNum stored from wreg
  1500  0757  0020               	movlb	0	; select bank0
  1501  0758  00A3               	movwf	errorsMain@errNum
  1502                           
  1503                           ;master_eight.c: 1217: int Tx_count=0;
  1504  0759  01A1               	clrf	errorsMain@Tx_count
  1505  075A  01A2               	clrf	errorsMain@Tx_count+1
  1506  075B                     l3726:	
  1507                           ;master_eight.c: 1218: while(Tx_count!=4)
  1508                           
  1509  075B  3004               	movlw	4
  1510  075C  0621               	xorwf	errorsMain@Tx_count,w
  1511  075D  0422               	iorwf	errorsMain@Tx_count+1,w
  1512  075E  1903               	btfsc	3,2
  1513  075F  0008               	return
  1514  0760                     l451:	
  1515                           ;master_eight.c: 1219: {
  1516                           ;master_eight.c: 1220: while (!TX1STAbits.TRMT);
  1517                           
  1518  0760  0023               	movlb	3	; select bank3
  1519  0761  1C9E               	btfss	30,1	;volatile
  1520  0762  2F60               	goto	l451
  1521                           
  1522                           ;master_eight.c: 1221: TX1REG = *errNum;
  1523  0763  0020               	movlb	0	; select bank0
  1524  0764  0823               	movf	errorsMain@errNum,w
  1525  0765  0086               	movwf	6
  1526  0766  0187               	clrf	7
  1527  0767  0801               	movf	1,w
  1528  0768  0023               	movlb	3	; select bank3
  1529  0769  009A               	movwf	26	;volatile
  1530                           
  1531                           ;master_eight.c: 1222: *errNum++;
  1532  076A  3001               	movlw	1
  1533  076B  0020               	movlb	0	; select bank0
  1534  076C  00A0               	movwf	??_errorsMain
  1535  076D  0820               	movf	??_errorsMain,w
  1536  076E  07A3               	addwf	errorsMain@errNum,f
  1537                           
  1538                           ;master_eight.c: 1223: Tx_count++;
  1539  076F  3001               	movlw	1
  1540  0770  07A1               	addwf	errorsMain@Tx_count,f
  1541  0771  3000               	movlw	0
  1542  0772  3DA2               	addwfc	errorsMain@Tx_count+1,f
  1543  0773  2F5B               	goto	l3726
  1544  0774                     __end_of_errorsMain:	
  1545                           
  1546                           	psect	text2
  1547  070A                     __ptext2:	
  1548 ;; *************** function _copyTouchpanelReceiveDataBuffer *****************
  1549 ;; Defined at:
  1550 ;;		line 1245 in file "../master_eight.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  dataBufferCo    2    1[BANK0 ] int 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1565 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  1566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1567 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1568 ;;Total ram usage:        3 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    2
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _copyTouchpanelReceiveDataBuffer
  1580  070A                     _copyTouchpanelReceiveDataBuffer:	
  1581                           
  1582                           ;master_eight.c: 1247: int dataBufferCounter=2;
  1583                           
  1584                           ;incstack = 0
  1585                           ; Regs used in _copyTouchpanelReceiveDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1586  070A  3002               	movlw	2
  1587  070B  0020               	movlb	0	; select bank0
  1588  070C  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1589  070D  3000               	movlw	0
  1590  070E  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1591                           
  1592                           ;master_eight.c: 1248: for(dataBufferCounter=2; dataBufferCounter<5;dataBufferCounter++)
  1593  070F  3002               	movlw	2
  1594  0710  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1595  0711  3000               	movlw	0
  1596  0712  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1597  0713                     L1:	
  1598  0713  0822               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,w
  1599  0714  3A80               	xorlw	128
  1600  0715  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1601  0716  3080               	movlw	128
  1602  0717  0220               	subwf	??_copyTouchpanelReceiveDataBuffer,w
  1603  0718  1D03               	skipz
  1604  0719  2F1C               	goto	u1395
  1605  071A  3005               	movlw	5
  1606  071B  0221               	subwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1607  071C                     u1395:	
  1608  071C  1803               	btfsc	3,0
  1609  071D  0008               	return
  1610                           
  1611                           ;master_eight.c: 1249: {
  1612                           ;master_eight.c: 1250: tempReceiveTouchpanelDataBuffer[dataBufferCounter-2] = touchpanle
      +                          ReceivedDatabuffer[dataBufferCounter];
  1613  071E  0020               	movlb	0	; select bank0
  1614  071F  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1615  0720  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1616  0721  0086               	movwf	6
  1617  0722  0187               	clrf	7
  1618  0723  0801               	movf	1,w
  1619  0724  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1620  0725  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1621  0726  3EFE               	addlw	254
  1622  0727  3E49               	addlw	(low (_tempReceiveTouchpanelDataBuffer| 0))& (0+255)
  1623  0728  0086               	movwf	6
  1624  0729  0187               	clrf	7
  1625  072A  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  1626  072B  0081               	movwf	1
  1627                           
  1628                           ;master_eight.c: 1251: touchpanleReceivedDatabuffer[dataBufferCounter] = "#";
  1629  072C  3000               	movlw	(low (STR_1| (0+32768)))& (0+255)
  1630  072D  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1631  072E  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1632  072F  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1633  0730  0086               	movwf	6
  1634  0731  0187               	clrf	7
  1635  0732  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  1636  0733  0081               	movwf	1
  1637  0734  3001               	movlw	1
  1638  0735  07A1               	addwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,f
  1639  0736  3000               	movlw	0
  1640  0737  3DA2               	addwfc	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,f
  1641  0738  2F13               	goto	L1
  1642  0739                     __end_of_copyTouchpanelReceiveDataBuffer:	
  1643                           
  1644                           	psect	text3
  1645  06D9                     __ptext3:	
  1646 ;; *************** function _copyReceivedDataBuffer *****************
  1647 ;; Defined at:
  1648 ;;		line 1238 in file "../master_eight.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  dataBufferCo    2    1[BANK0 ] int 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  1664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1665 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1666 ;;Total ram usage:        3 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    2
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _copyReceivedDataBuffer
  1678  06D9                     _copyReceivedDataBuffer:	
  1679                           
  1680                           ;master_eight.c: 1239: int dataBufferCounter=2;
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1684  06D9  3002               	movlw	2
  1685  06DA  0020               	movlb	0	; select bank0
  1686  06DB  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  1687  06DC  3000               	movlw	0
  1688  06DD  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  1689                           
  1690                           ;master_eight.c: 1240: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  1691  06DE  3002               	movlw	2
  1692  06DF  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  1693  06E0  3000               	movlw	0
  1694  06E1  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  1695  06E2                     L2:	
  1696  06E2  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  1697  06E3  3A80               	xorlw	128
  1698  06E4  00A0               	movwf	??_copyReceivedDataBuffer
  1699  06E5  3080               	movlw	128
  1700  06E6  0220               	subwf	??_copyReceivedDataBuffer,w
  1701  06E7  1D03               	skipz
  1702  06E8  2EEB               	goto	u1355
  1703  06E9  3009               	movlw	9
  1704  06EA  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  1705  06EB                     u1355:	
  1706  06EB  1803               	btfsc	3,0
  1707  06EC  0008               	return
  1708                           
  1709                           ;master_eight.c: 1241: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffe
      +                          r[dataBufferCounter];
  1710  06ED  0020               	movlb	0	; select bank0
  1711  06EE  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1712  06EF  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1713  06F0  0086               	movwf	6
  1714  06F1  3001               	movlw	1	; select bank2/3
  1715  06F2  0087               	movwf	7
  1716  06F3  0801               	movf	1,w
  1717  06F4  00A0               	movwf	??_copyReceivedDataBuffer
  1718  06F5  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1719  06F6  3EFE               	addlw	254
  1720  06F7  3EA0               	addlw	(low (_tempReceivedDataBuffer| 0))& (0+255)
  1721  06F8  0086               	movwf	6
  1722  06F9  0187               	clrf	7
  1723  06FA  0820               	movf	??_copyReceivedDataBuffer,w
  1724  06FB  0081               	movwf	1
  1725                           
  1726                           ;master_eight.c: 1242: mainReceivedDataBuffer[dataBufferCounter]='#';
  1727  06FC  3023               	movlw	35
  1728  06FD  00A0               	movwf	??_copyReceivedDataBuffer
  1729  06FE  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1730  06FF  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1731  0700  0086               	movwf	6
  1732  0701  3001               	movlw	1	; select bank2/3
  1733  0702  0087               	movwf	7
  1734  0703  0820               	movf	??_copyReceivedDataBuffer,w
  1735  0704  0081               	movwf	1
  1736  0705  3001               	movlw	1
  1737  0706  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  1738  0707  3000               	movlw	0
  1739  0708  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  1740  0709  2EE2               	goto	L2
  1741  070A                     __end_of_copyReceivedDataBuffer:	
  1742                           
  1743                           	psect	text4
  1744  02E0                     __ptext4:	
  1745 ;; *************** function _applianceControl *****************
  1746 ;; Defined at:
  1747 ;;		line 9 in file "../application.h"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  charSwitchMS    1    wreg     unsigned char 
  1750 ;;  charSwitchLS    1   14[BANK0 ] unsigned char 
  1751 ;;  charSwitchST    1   15[BANK0 ] unsigned char 
  1752 ;;  chDimmerSpee    1   16[BANK0 ] unsigned char 
  1753 ;;  chDimmerSpee    1   17[BANK0 ] unsigned char 
  1754 ;;  charParental    1   18[BANK0 ] unsigned char 
  1755 ;;  charFinalFra    1   19[BANK0 ] unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  charSwitchMS    1   24[BANK0 ] unsigned char 
  1758 ;;  currentState    2   33[BANK0 ] int 
  1759 ;;  integerSwitc    2   31[BANK0 ] int 
  1760 ;;  dimmerSpeedS    2   27[BANK0 ] unsigned char [2]
  1761 ;;  switchNumber    2   25[BANK0 ] unsigned char [2]
  1762 ;;  integerSwitc    2   29[BANK0 ] int 
  1763 ;;  integerSpeed    2   22[BANK0 ] int 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1773 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  1774 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  1776 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:       21 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    4
  1780 ;; This function calls:
  1781 ;;		_atoi
  1782 ;;		_sendAcknowledgment
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _applianceControl
  1790  02E0                     _applianceControl:	
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1794                           ;applianceControl@charSwitchMSB stored from wreg
  1795  02E0  0020               	movlb	0	; select bank0
  1796  02E1  00B8               	movwf	applianceControl@charSwitchMSB
  1797                           
  1798                           ;application.h: 13: int integerSwitchNumber = 0;
  1799  02E2  01BF               	clrf	applianceControl@integerSwitchNumber
  1800  02E3  01C0               	clrf	applianceControl@integerSwitchNumber+1
  1801                           
  1802                           ;application.h: 14: int integerSwitchState = 0;
  1803  02E4  01BD               	clrf	applianceControl@integerSwitchState
  1804  02E5  01BE               	clrf	applianceControl@integerSwitchState+1
  1805                           
  1806                           ;application.h: 15: int integerSpeed = 0;
  1807  02E6  01B6               	clrf	applianceControl@integerSpeed
  1808  02E7  01B7               	clrf	applianceControl@integerSpeed+1
  1809                           
  1810                           ;application.h: 16: int currentStateBufferPositions=0;
  1811  02E8  01C1               	clrf	applianceControl@currentStateBufferPositions
  1812  02E9  01C2               	clrf	applianceControl@currentStateBufferPositions+1
  1813                           
  1814                           ;application.h: 19: char switchNumberStringBuffer[2]="#";
  1815  02EA  0854               	movf	applianceControl@F3724+1,w
  1816  02EB  00BA               	movwf	applianceControl@switchNumberStringBuffer+1
  1817  02EC  0853               	movf	applianceControl@F3724,w
  1818  02ED  00B9               	movwf	applianceControl@switchNumberStringBuffer
  1819                           
  1820                           ;application.h: 20: char dimmerSpeedStringBuffer[2]="#";
  1821  02EE  0852               	movf	applianceControl@F3726+1,w
  1822  02EF  00BC               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  1823  02F0  0851               	movf	applianceControl@F3726,w
  1824  02F1  00BB               	movwf	applianceControl@dimmerSpeedStringBuffer
  1825                           
  1826                           ;application.h: 22: switchNumberStringBuffer[0]=charSwitchMSB;
  1827  02F2  0838               	movf	applianceControl@charSwitchMSB,w
  1828  02F3  00B4               	movwf	??_applianceControl
  1829  02F4  0834               	movf	??_applianceControl,w
  1830  02F5  00B9               	movwf	applianceControl@switchNumberStringBuffer
  1831                           
  1832                           ;application.h: 23: switchNumberStringBuffer[1]=charSwitchLSB;
  1833  02F6  082E               	movf	applianceControl@charSwitchLSB,w
  1834  02F7  00B4               	movwf	??_applianceControl
  1835  02F8  0834               	movf	??_applianceControl,w
  1836  02F9  00BA               	movwf	applianceControl@switchNumberStringBuffer+1
  1837                           
  1838                           ;application.h: 24: integerSwitchNumber = atoi(switchNumberStringBuffer);
  1839  02FA  3039               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  1840  02FB  3185  25B3  3182   	fcall	_atoi
  1841  02FE  0020               	movlb	0	; select bank0
  1842  02FF  0827               	movf	?_atoi+1,w
  1843  0300  00C0               	movwf	applianceControl@integerSwitchNumber+1
  1844  0301  0826               	movf	?_atoi,w
  1845  0302  00BF               	movwf	applianceControl@integerSwitchNumber
  1846                           
  1847                           ;application.h: 28: integerSwitchState = charSwitchSTATE-'0';
  1848  0303  082F               	movf	applianceControl@charSwitchSTATE,w
  1849  0304  3ED0               	addlw	208
  1850  0305  00BD               	movwf	applianceControl@integerSwitchState
  1851  0306  30FF               	movlw	255
  1852  0307  1803               	skipnc
  1853  0308  3000               	movlw	0
  1854  0309  00BE               	movwf	applianceControl@integerSwitchState+1
  1855                           
  1856                           ;application.h: 31: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  1857  030A  0830               	movf	applianceControl@chDimmerSpeedMSB,w
  1858  030B  00B4               	movwf	??_applianceControl
  1859  030C  0834               	movf	??_applianceControl,w
  1860  030D  00BB               	movwf	applianceControl@dimmerSpeedStringBuffer
  1861                           
  1862                           ;application.h: 32: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  1863  030E  0831               	movf	applianceControl@chDimmerSpeedLSB,w
  1864  030F  00B4               	movwf	??_applianceControl
  1865  0310  0834               	movf	??_applianceControl,w
  1866  0311  00BC               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  1867                           
  1868                           ;application.h: 33: integerSpeed = atoi(dimmerSpeedStringBuffer);
  1869  0312  303B               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  1870  0313  3185  25B3  3182   	fcall	_atoi
  1871  0316  0020               	movlb	0	; select bank0
  1872  0317  0827               	movf	?_atoi+1,w
  1873  0318  00B7               	movwf	applianceControl@integerSpeed+1
  1874  0319  0826               	movf	?_atoi,w
  1875  031A  00B6               	movwf	applianceControl@integerSpeed
  1876                           
  1877                           ;application.h: 37: parentalLockBuffer[integerSwitchNumber] = charParentalControl;
  1878  031B  0832               	movf	applianceControl@charParentalControl,w
  1879  031C  00B4               	movwf	??_applianceControl
  1880  031D  083F               	movf	applianceControl@integerSwitchNumber,w
  1881  031E  3ED2               	addlw	(low (_parentalLockBuffer| 0))& (0+255)
  1882  031F  0086               	movwf	6
  1883  0320  0187               	clrf	7
  1884  0321  0834               	movf	??_applianceControl,w
  1885  0322  0081               	movwf	1
  1886                           
  1887                           ;application.h: 38: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuffer[inte
      +                          gerSwitchNumber];
  1888  0323  083F               	movf	applianceControl@integerSwitchNumber,w
  1889  0324  3ED2               	addlw	(low (_parentalLockBuffer| 0))& (0+255)
  1890  0325  0086               	movwf	6
  1891  0326  0187               	clrf	7
  1892  0327  0801               	movf	1,w
  1893  0328  00B4               	movwf	??_applianceControl
  1894  0329  083F               	movf	applianceControl@integerSwitchNumber,w
  1895  032A  3EC8               	addlw	(low (_copy_parentalLockBuffer| 0))& (0+255)
  1896  032B  0086               	movwf	6
  1897  032C  0187               	clrf	7
  1898  032D  0834               	movf	??_applianceControl,w
  1899  032E  0081               	movwf	1
  1900                           
  1901                           ;application.h: 41: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5);
  1902  032F  0840               	movf	applianceControl@integerSwitchNumber+1,w
  1903  0330  00B5               	movwf	??_applianceControl+1
  1904  0331  083F               	movf	applianceControl@integerSwitchNumber,w
  1905  0332  00B4               	movwf	??_applianceControl
  1906  0333  35B4               	lslf	??_applianceControl,f
  1907  0334  0DB5               	rlf	??_applianceControl+1,f
  1908  0335  35B4               	lslf	??_applianceControl,f
  1909  0336  0DB5               	rlf	??_applianceControl+1,f
  1910  0337  0834               	movf	??_applianceControl,w
  1911  0338  3EFC               	addlw	252
  1912  0339  00C1               	movwf	applianceControl@currentStateBufferPositions
  1913  033A  30FF               	movlw	255
  1914  033B  3D35               	addwfc	??_applianceControl+1,w
  1915  033C  00C2               	movwf	applianceControl@currentStateBufferPositions+1
  1916                           
  1917                           ;application.h: 42: currentStateBuffer[currentStateBufferPositions++] = 'G';
  1918  033D  3047               	movlw	71
  1919  033E  00B4               	movwf	??_applianceControl
  1920  033F  0841               	movf	applianceControl@currentStateBufferPositions,w
  1921  0340  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  1922  0341  0086               	movwf	6
  1923  0342  3001               	movlw	1	; select bank2/3
  1924  0343  0087               	movwf	7
  1925  0344  0834               	movf	??_applianceControl,w
  1926  0345  0081               	movwf	1
  1927  0346  3001               	movlw	1
  1928  0347  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  1929  0348  3000               	movlw	0
  1930  0349  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  1931                           
  1932                           ;application.h: 43: currentStateBuffer[currentStateBufferPositions++] = charSwitchSTATE;
  1933  034A  082F               	movf	applianceControl@charSwitchSTATE,w
  1934  034B  00B4               	movwf	??_applianceControl
  1935  034C  0841               	movf	applianceControl@currentStateBufferPositions,w
  1936  034D  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  1937  034E  0086               	movwf	6
  1938  034F  3001               	movlw	1	; select bank2/3
  1939  0350  0087               	movwf	7
  1940  0351  0834               	movf	??_applianceControl,w
  1941  0352  0081               	movwf	1
  1942  0353  3001               	movlw	1
  1943  0354  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  1944  0355  3000               	movlw	0
  1945  0356  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  1946                           
  1947                           ;application.h: 44: currentStateBuffer[currentStateBufferPositions++] = charSwitchMSB;
  1948  0357  0838               	movf	applianceControl@charSwitchMSB,w
  1949  0358  00B4               	movwf	??_applianceControl
  1950  0359  0841               	movf	applianceControl@currentStateBufferPositions,w
  1951  035A  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  1952  035B  0086               	movwf	6
  1953  035C  3001               	movlw	1	; select bank2/3
  1954  035D  0087               	movwf	7
  1955  035E  0834               	movf	??_applianceControl,w
  1956  035F  0081               	movwf	1
  1957  0360  3001               	movlw	1
  1958  0361  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  1959  0362  3000               	movlw	0
  1960  0363  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  1961                           
  1962                           ;application.h: 45: currentStateBuffer[currentStateBufferPositions] = charSwitchLSB;
  1963  0364  082E               	movf	applianceControl@charSwitchLSB,w
  1964  0365  00B4               	movwf	??_applianceControl
  1965  0366  0841               	movf	applianceControl@currentStateBufferPositions,w
  1966  0367  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  1967  0368  0086               	movwf	6
  1968  0369  3001               	movlw	1	; select bank2/3
  1969  036A  0087               	movwf	7
  1970  036B  0834               	movf	??_applianceControl,w
  1971  036C  0081               	movwf	1
  1972                           
  1973                           ;application.h: 47: currentStateBufferPositions-=3;
  1974  036D  30FD               	movlw	253
  1975  036E  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  1976  036F  30FF               	movlw	255
  1977  0370  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  1978                           
  1979                           ;application.h: 48: if(charFinalFrameState=='1')
  1980  0371  3031               	movlw	49
  1981  0372  0633               	xorwf	applianceControl@charFinalFrameState,w
  1982  0373  1D03               	btfss	3,2
  1983  0374  2C03               	goto	l3632
  1984                           
  1985                           ;application.h: 49: {
  1986                           ;application.h: 50: sendAcknowledgment(currentStateBuffer+currentStateBufferPositions);
  1987  0375  0841               	movf	applianceControl@currentStateBufferPositions,w
  1988  0376  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  1989  0377  3187  2739  3182   	fcall	_sendAcknowledgment
  1990                           
  1991                           ;application.h: 51: _delay((unsigned long)((5)*(16000000/4000.0)));
  1992  037A  301A               	movlw	26
  1993  037B  0020               	movlb	0	; select bank0
  1994  037C  00B4               	movwf	??_applianceControl
  1995  037D  30F8               	movlw	248
  1996  037E                     u1547:	
  1997  037E  0B89               	decfsz	9,f
  1998  037F  2B7E               	goto	u1547
  1999  0380  0BB4               	decfsz	??_applianceControl,f
  2000  0381  2B7E               	goto	u1547
  2001  0382  0000               	nop
  2002                           
  2003                           ;application.h: 52: TX2REG = '(' ;
  2004  0383  3028               	movlw	40
  2005  0384  0029               	movlb	9	; select bank9
  2006  0385  0092               	movwf	18	;volatile
  2007                           
  2008                           ;application.h: 53: _delay((unsigned long)((1)*(16000000/4000.0)));
  2009  0386  3006               	movlw	6
  2010  0387  0020               	movlb	0	; select bank0
  2011  0388  00B4               	movwf	??_applianceControl
  2012  0389  3030               	movlw	48
  2013  038A                     u1557:	
  2014  038A  0B89               	decfsz	9,f
  2015  038B  2B8A               	goto	u1557
  2016  038C  0BB4               	decfsz	??_applianceControl,f
  2017  038D  2B8A               	goto	u1557
  2018  038E  0000               	nop
  2019                           
  2020                           ;application.h: 54: TX2REG = 'b' ;
  2021  038F  3062               	movlw	98
  2022  0390  0029               	movlb	9	; select bank9
  2023  0391  0092               	movwf	18	;volatile
  2024                           
  2025                           ;application.h: 55: _delay((unsigned long)((1)*(16000000/4000.0)));
  2026  0392  3006               	movlw	6
  2027  0393  0020               	movlb	0	; select bank0
  2028  0394  00B4               	movwf	??_applianceControl
  2029  0395  3030               	movlw	48
  2030  0396                     u1567:	
  2031  0396  0B89               	decfsz	9,f
  2032  0397  2B96               	goto	u1567
  2033  0398  0BB4               	decfsz	??_applianceControl,f
  2034  0399  2B96               	goto	u1567
  2035  039A  0000               	nop
  2036                           
  2037                           ;application.h: 56: TX2REG =charSwitchLSB + 16 ;
  2038  039B  0020               	movlb	0	; select bank0
  2039  039C  082E               	movf	applianceControl@charSwitchLSB,w
  2040  039D  3E10               	addlw	16
  2041  039E  0029               	movlb	9	; select bank9
  2042  039F  0092               	movwf	18	;volatile
  2043                           
  2044                           ;application.h: 57: _delay((unsigned long)((1)*(16000000/4000.0)));
  2045  03A0  3006               	movlw	6
  2046  03A1  0020               	movlb	0	; select bank0
  2047  03A2  00B4               	movwf	??_applianceControl
  2048  03A3  3030               	movlw	48
  2049  03A4                     u1577:	
  2050  03A4  0B89               	decfsz	9,f
  2051  03A5  2BA4               	goto	u1577
  2052  03A6  0BB4               	decfsz	??_applianceControl,f
  2053  03A7  2BA4               	goto	u1577
  2054  03A8  0000               	nop
  2055                           
  2056                           ;application.h: 58: TX2REG=charSwitchSTATE;
  2057  03A9  0020               	movlb	0	; select bank0
  2058  03AA  082F               	movf	applianceControl@charSwitchSTATE,w
  2059  03AB  0029               	movlb	9	; select bank9
  2060  03AC  0092               	movwf	18	;volatile
  2061                           
  2062                           ;application.h: 59: _delay((unsigned long)((1)*(16000000/4000.0)));
  2063  03AD  3006               	movlw	6
  2064  03AE  0020               	movlb	0	; select bank0
  2065  03AF  00B4               	movwf	??_applianceControl
  2066  03B0  3030               	movlw	48
  2067  03B1                     u1587:	
  2068  03B1  0B89               	decfsz	9,f
  2069  03B2  2BB1               	goto	u1587
  2070  03B3  0BB4               	decfsz	??_applianceControl,f
  2071  03B4  2BB1               	goto	u1587
  2072  03B5  0000               	nop
  2073                           
  2074                           ;application.h: 60: TX2REG='0';
  2075  03B6  3030               	movlw	48
  2076  03B7  0029               	movlb	9	; select bank9
  2077  03B8  0092               	movwf	18	;volatile
  2078                           
  2079                           ;application.h: 61: _delay((unsigned long)((1)*(16000000/4000.0)));
  2080  03B9  3006               	movlw	6
  2081  03BA  0020               	movlb	0	; select bank0
  2082  03BB  00B4               	movwf	??_applianceControl
  2083  03BC  3030               	movlw	48
  2084  03BD                     u1597:	
  2085  03BD  0B89               	decfsz	9,f
  2086  03BE  2BBD               	goto	u1597
  2087  03BF  0BB4               	decfsz	??_applianceControl,f
  2088  03C0  2BBD               	goto	u1597
  2089  03C1  0000               	nop
  2090                           
  2091                           ;application.h: 62: TX2REG='0';
  2092  03C2  3030               	movlw	48
  2093  03C3  0029               	movlb	9	; select bank9
  2094  03C4  0092               	movwf	18	;volatile
  2095                           
  2096                           ;application.h: 63: _delay((unsigned long)((1)*(16000000/4000.0)));
  2097  03C5  3006               	movlw	6
  2098  03C6  0020               	movlb	0	; select bank0
  2099  03C7  00B4               	movwf	??_applianceControl
  2100  03C8  3030               	movlw	48
  2101  03C9                     u1607:	
  2102  03C9  0B89               	decfsz	9,f
  2103  03CA  2BC9               	goto	u1607
  2104  03CB  0BB4               	decfsz	??_applianceControl,f
  2105  03CC  2BC9               	goto	u1607
  2106  03CD  0000               	nop
  2107                           
  2108                           ;application.h: 64: TX2REG='0';
  2109  03CE  3030               	movlw	48
  2110  03CF  0029               	movlb	9	; select bank9
  2111  03D0  0092               	movwf	18	;volatile
  2112                           
  2113                           ;application.h: 65: _delay((unsigned long)((1)*(16000000/4000.0)));
  2114  03D1  3006               	movlw	6
  2115  03D2  0020               	movlb	0	; select bank0
  2116  03D3  00B4               	movwf	??_applianceControl
  2117  03D4  3030               	movlw	48
  2118  03D5                     u1617:	
  2119  03D5  0B89               	decfsz	9,f
  2120  03D6  2BD5               	goto	u1617
  2121  03D7  0BB4               	decfsz	??_applianceControl,f
  2122  03D8  2BD5               	goto	u1617
  2123  03D9  0000               	nop
  2124                           
  2125                           ;application.h: 66: TX2REG=')';
  2126  03DA  3029               	movlw	41
  2127  03DB  0029               	movlb	9	; select bank9
  2128  03DC  0092               	movwf	18	;volatile
  2129                           
  2130                           ;application.h: 67: }
  2131                           ;application.h: 69: switch(integerSwitchNumber){
  2132  03DD  2C03               	goto	l3632
  2133  03DE                     l3620:	
  2134                           ;application.h: 70: case 1:
  2135                           
  2136                           
  2137                           ;application.h: 71: {
  2138                           ;application.h: 72: PORTAbits.RA2 = integerSwitchState;
  2139  03DE  0020               	movlb	0	; select bank0
  2140  03DF  0C3D               	rrf	applianceControl@integerSwitchState,w
  2141  03E0  1C03               	skipc
  2142  03E1  110C               	bcf	12,2	;volatile
  2143  03E2  1803               	skipnc
  2144  03E3  150C               	bsf	12,2	;volatile
  2145                           
  2146                           ;application.h: 75: }
  2147                           ;application.h: 76: break;
  2148  03E4  0008               	return
  2149  03E5                     l3622:	
  2150                           ;application.h: 78: case 2:
  2151                           
  2152                           
  2153                           ;application.h: 79: {
  2154                           ;application.h: 80: start_PWM_Generation_in_ISR_FLAG = integerSwitchState;
  2155  03E5  083E               	movf	applianceControl@integerSwitchState+1,w
  2156  03E6  00D7               	movwf	_start_PWM_Generation_in_ISR_FLAG+1
  2157  03E7  083D               	movf	applianceControl@integerSwitchState,w
  2158  03E8  00D6               	movwf	_start_PWM_Generation_in_ISR_FLAG
  2159                           
  2160                           ;application.h: 81: switch(integerSwitchState){
  2161  03E9  2BF5               	goto	l3628
  2162  03EA                     l207:	
  2163                           ;application.h: 82: case 0:
  2164                           
  2165                           
  2166                           ;application.h: 83: PORTEbits.RE5=1;
  2167  03EA  1690               	bsf	16,5	;volatile
  2168                           
  2169                           ;application.h: 84: break;
  2170  03EB  0008               	return
  2171  03EC                     l3624:	
  2172                           ;application.h: 85: case 1:
  2173                           
  2174                           
  2175                           ;application.h: 86: levelofDimmer_MSB = chDimmerSpeedMSB;
  2176  03EC  0830               	movf	applianceControl@chDimmerSpeedMSB,w
  2177  03ED  00B4               	movwf	??_applianceControl
  2178  03EE  0834               	movf	??_applianceControl,w
  2179  03EF  00D5               	movwf	_levelofDimmer_MSB
  2180                           
  2181                           ;application.h: 87: levelofDimmer_LSB = chDimmerSpeedLSB;
  2182  03F0  0831               	movf	applianceControl@chDimmerSpeedLSB,w
  2183  03F1  00B4               	movwf	??_applianceControl
  2184  03F2  0834               	movf	??_applianceControl,w
  2185  03F3  00F0               	movwf	_levelofDimmer_LSB
  2186                           
  2187                           ;application.h: 91: }
  2188                           
  2189                           ;application.h: 90: break;
  2190                           
  2191                           ;application.h: 89: default:
  2192                           
  2193                           ;application.h: 88: break;
  2194  03F4  0008               	return
  2195  03F5                     l3628:	
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "space"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ; direct_byte            8     6 (fixed)
  2204                           ; jumptable            260     6 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206  03F5  083E               	movf	applianceControl@integerSwitchState+1,w
  2207  03F6  3A00               	xorlw	0	; case 0
  2208  03F7  1903               	skipnz
  2209  03F8  2BFA               	goto	l4078
  2210  03F9  2C11               	goto	l212
  2211  03FA                     l4078:	
  2212                           
  2213                           ; Switch size 1, requested type "space"
  2214                           ; Number of cases is 2, Range of values is 0 to 1
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            7     4 (average)
  2218                           ; direct_byte           10     6 (fixed)
  2219                           ; jumptable            260     6 (fixed)
  2220                           ;	Chosen strategy is simple_byte
  2221  03FA  083D               	movf	applianceControl@integerSwitchState,w
  2222  03FB  3A00               	xorlw	0	; case 0
  2223  03FC  1903               	skipnz
  2224  03FD  2BEA               	goto	l207
  2225  03FE  3A01               	xorlw	1	; case 1
  2226  03FF  1903               	skipnz
  2227  0400  2BEC               	goto	l3624
  2228  0401  2C11               	goto	l212
  2229                           
  2230                           ;application.h: 97: }
  2231                           
  2232                           ;application.h: 96: break;
  2233                           
  2234                           ;application.h: 95: default:
  2235                           
  2236                           ;application.h: 92: }
  2237                           ;application.h: 93: break;
  2238  0402  0008               	return
  2239  0403                     l3632:	
  2240                           
  2241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2242                           ; Switch size 1, requested type "space"
  2243                           ; Number of cases is 1, Range of values is 0 to 0
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte            4     3 (average)
  2247                           ; direct_byte            8     6 (fixed)
  2248                           ; jumptable            260     6 (fixed)
  2249                           ;	Chosen strategy is simple_byte
  2250  0403  0020               	movlb	0	; select bank0
  2251  0404  0840               	movf	applianceControl@integerSwitchNumber+1,w
  2252  0405  3A00               	xorlw	0	; case 0
  2253  0406  1903               	skipnz
  2254  0407  2C09               	goto	l4080
  2255  0408  2C11               	goto	l212
  2256  0409                     l4080:	
  2257                           
  2258                           ; Switch size 1, requested type "space"
  2259                           ; Number of cases is 2, Range of values is 1 to 2
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte            7     4 (average)
  2263                           ; direct_byte           13     9 (fixed)
  2264                           ; jumptable            263     9 (fixed)
  2265                           ;	Chosen strategy is simple_byte
  2266  0409  083F               	movf	applianceControl@integerSwitchNumber,w
  2267  040A  3A01               	xorlw	1	; case 1
  2268  040B  1903               	skipnz
  2269  040C  2BDE               	goto	l3620
  2270  040D  3A03               	xorlw	3	; case 2
  2271  040E  1903               	skipnz
  2272  040F  2BE5               	goto	l3622
  2273  0410  2C11               	goto	l212
  2274  0411                     l212:	
  2275  0411  0008               	return
  2276  0412                     __end_of_applianceControl:	
  2277                           
  2278                           	psect	text5
  2279  0739                     __ptext5:	
  2280 ;; *************** function _sendAcknowledgment *****************
  2281 ;; Defined at:
  2282 ;;		line 1226 in file "../master_eight.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  currentState    1    wreg     PTR unsigned char 
  2285 ;;		 -> currentStateBuffer(42), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  currentState    1    3[BANK0 ] PTR unsigned char 
  2288 ;;		 -> currentStateBuffer(42), 
  2289 ;;  Tx_count        2    1[BANK0 ] int 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        4 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_applianceControl
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _sendAcknowledgment
  2315  0739                     _sendAcknowledgment:	
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  2319                           ;sendAcknowledgment@currentStateBuffer stored from wreg
  2320  0739  0020               	movlb	0	; select bank0
  2321  073A  00A3               	movwf	sendAcknowledgment@currentStateBuffer
  2322                           
  2323                           ;master_eight.c: 1227: int Tx_count=0;
  2324  073B  01A1               	clrf	sendAcknowledgment@Tx_count
  2325  073C  01A2               	clrf	sendAcknowledgment@Tx_count+1
  2326  073D                     l3476:	
  2327                           ;master_eight.c: 1228: while(Tx_count!=4)
  2328                           
  2329  073D  3004               	movlw	4
  2330  073E  0621               	xorwf	sendAcknowledgment@Tx_count,w
  2331  073F  0422               	iorwf	sendAcknowledgment@Tx_count+1,w
  2332  0740  1903               	btfsc	3,2
  2333  0741  0008               	return
  2334  0742                     l460:	
  2335                           ;master_eight.c: 1229: {
  2336                           ;master_eight.c: 1230: while (!TX1STAbits.TRMT);
  2337                           
  2338  0742  0023               	movlb	3	; select bank3
  2339  0743  1C9E               	btfss	30,1	;volatile
  2340  0744  2F42               	goto	l460
  2341                           
  2342                           ;master_eight.c: 1232: TX1REG = *currentStateBuffer;
  2343  0745  0020               	movlb	0	; select bank0
  2344  0746  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  2345  0747  0086               	movwf	6
  2346  0748  3001               	movlw	1	; select bank2/3
  2347  0749  0087               	movwf	7
  2348  074A  0801               	movf	1,w
  2349  074B  0023               	movlb	3	; select bank3
  2350  074C  009A               	movwf	26	;volatile
  2351                           
  2352                           ;master_eight.c: 1233: *currentStateBuffer++;
  2353  074D  3001               	movlw	1
  2354  074E  0020               	movlb	0	; select bank0
  2355  074F  00A0               	movwf	??_sendAcknowledgment
  2356  0750  0820               	movf	??_sendAcknowledgment,w
  2357  0751  07A3               	addwf	sendAcknowledgment@currentStateBuffer,f
  2358                           
  2359                           ;master_eight.c: 1234: Tx_count++;
  2360  0752  3001               	movlw	1
  2361  0753  07A1               	addwf	sendAcknowledgment@Tx_count,f
  2362  0754  3000               	movlw	0
  2363  0755  3DA2               	addwfc	sendAcknowledgment@Tx_count+1,f
  2364  0756  2F3D               	goto	l3476
  2365  0757                     __end_of_sendAcknowledgment:	
  2366                           
  2367                           	psect	text6
  2368  05B3                     __ptext6:	
  2369 ;; *************** function _atoi *****************
  2370 ;; Defined at:
  2371 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  s               1    wreg     PTR const unsigned char 
  2374 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2377 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  2378 ;;  a               2   11[BANK0 ] int 
  2379 ;;  sign            1   10[BANK0 ] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    6[BANK0 ] int 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        8 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		___wmul
  2398 ;;		_isdigit
  2399 ;; This function is called by:
  2400 ;;		_applianceControl
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _atoi
  2406  05B3                     _atoi:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2410                           ;atoi@s stored from wreg
  2411  05B3  0020               	movlb	0	; select bank0
  2412  05B4  00AD               	movwf	atoi@s
  2413  05B5                     l3438:	
  2414  05B5  082D               	movf	atoi@s,w
  2415  05B6  0086               	movwf	6
  2416  05B7  0187               	clrf	7
  2417  05B8  3020               	movlw	32
  2418  05B9  0601               	xorwf	1,w
  2419  05BA  1D03               	btfss	3,2
  2420  05BB  2DC1               	goto	l3440
  2421  05BC                     l3436:	
  2422  05BC  3001               	movlw	1
  2423  05BD  00A8               	movwf	??_atoi
  2424  05BE  0828               	movf	??_atoi,w
  2425  05BF  07AD               	addwf	atoi@s,f
  2426  05C0  2DB5               	goto	l3438
  2427  05C1                     l3440:	
  2428  05C1  082D               	movf	atoi@s,w
  2429  05C2  0086               	movwf	6
  2430  05C3  0187               	clrf	7
  2431  05C4  3009               	movlw	9
  2432  05C5  0601               	xorwf	1,w
  2433  05C6  1903               	btfsc	3,2
  2434  05C7  2DBC               	goto	l3436
  2435  05C8  01AB               	clrf	atoi@a
  2436  05C9  01AC               	clrf	atoi@a+1
  2437  05CA  01AA               	clrf	atoi@sign
  2438  05CB  082D               	movf	atoi@s,w
  2439  05CC  0086               	movwf	6
  2440  05CD  0187               	clrf	7
  2441  05CE  302D               	movlw	45
  2442  05CF  0601               	xorwf	1,w
  2443  05D0  1D03               	btfss	3,2
  2444  05D1  2DD7               	goto	l3448
  2445  05D2  3001               	movlw	1
  2446  05D3  00A8               	movwf	??_atoi
  2447  05D4  0828               	movf	??_atoi,w
  2448  05D5  07AA               	addwf	atoi@sign,f
  2449  05D6  2DDE               	goto	l3454
  2450  05D7                     l3448:	
  2451  05D7  082D               	movf	atoi@s,w
  2452  05D8  0086               	movwf	6
  2453  05D9  0187               	clrf	7
  2454  05DA  302B               	movlw	43
  2455  05DB  0601               	xorwf	1,w
  2456  05DC  1D03               	btfss	3,2
  2457  05DD  2DE2               	goto	l3456
  2458  05DE                     l3454:	
  2459  05DE  3001               	movlw	1
  2460  05DF  00A8               	movwf	??_atoi
  2461  05E0  0828               	movf	??_atoi,w
  2462  05E1  07AD               	addwf	atoi@s,f
  2463  05E2                     l3456:	
  2464  05E2  082D               	movf	atoi@s,w
  2465  05E3  0086               	movwf	6
  2466  05E4  0187               	clrf	7
  2467  05E5  0801               	movf	1,w
  2468  05E6  318F  27F1  3185   	fcall	_isdigit
  2469  05E9  1C03               	btfss	3,0
  2470  05EA  2E09               	goto	l3458
  2471  05EB  0020               	movlb	0	; select bank0
  2472  05EC  082C               	movf	atoi@a+1,w
  2473  05ED  00A1               	movwf	___wmul@multiplier+1
  2474  05EE  082B               	movf	atoi@a,w
  2475  05EF  00A0               	movwf	___wmul@multiplier
  2476  05F0  300A               	movlw	10
  2477  05F1  00A2               	movwf	___wmul@multiplicand
  2478  05F2  3000               	movlw	0
  2479  05F3  00A3               	movwf	___wmul@multiplicand+1
  2480  05F4  3187  2774  3185   	fcall	___wmul
  2481  05F7  0020               	movlb	0	; select bank0
  2482  05F8  082D               	movf	atoi@s,w
  2483  05F9  0086               	movwf	6
  2484  05FA  0187               	clrf	7
  2485  05FB  0801               	movf	1,w
  2486  05FC  0720               	addwf	?___wmul,w
  2487  05FD  00A8               	movwf	??_atoi
  2488  05FE  0821               	movf	?___wmul+1,w
  2489  05FF  1803               	skipnc
  2490  0600  0A21               	incf	?___wmul+1,w
  2491  0601  00A9               	movwf	??_atoi+1
  2492  0602  0828               	movf	??_atoi,w
  2493  0603  3ED0               	addlw	208
  2494  0604  00AB               	movwf	atoi@a
  2495  0605  30FF               	movlw	255
  2496  0606  3D29               	addwfc	??_atoi+1,w
  2497  0607  00AC               	movwf	atoi@a+1
  2498  0608  2DDE               	goto	l3454
  2499  0609                     l3458:	
  2500  0609  0020               	movlb	0	; select bank0
  2501  060A  082A               	movf	atoi@sign,w
  2502  060B  1903               	btfsc	3,2
  2503  060C  2E19               	goto	l3464
  2504  060D  092B               	comf	atoi@a,w
  2505  060E  00A8               	movwf	??_atoi
  2506  060F  092C               	comf	atoi@a+1,w
  2507  0610  00A9               	movwf	??_atoi+1
  2508  0611  0AA8               	incf	??_atoi,f
  2509  0612  1903               	skipnz
  2510  0613  0AA9               	incf	??_atoi+1,f
  2511  0614  0828               	movf	??_atoi,w
  2512  0615  00A6               	movwf	?_atoi
  2513  0616  0829               	movf	??_atoi+1,w
  2514  0617  00A7               	movwf	?_atoi+1
  2515  0618  0008               	return
  2516  0619                     l3464:	
  2517  0619  082C               	movf	atoi@a+1,w
  2518  061A  00A7               	movwf	?_atoi+1
  2519  061B  082B               	movf	atoi@a,w
  2520  061C  00A6               	movwf	?_atoi
  2521  061D  0008               	return
  2522  061E                     __end_of_atoi:	
  2523                           
  2524                           	psect	text7
  2525  0FF1                     __ptext7:	
  2526 ;; *************** function _isdigit *****************
  2527 ;; Defined at:
  2528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  c               1    wreg     unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  c               1    1[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;		None               void
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    2
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_atoi
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _isdigit
  2558  0FF1                     _isdigit:	
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2562                           ;isdigit@c stored from wreg
  2563  0FF1  0020               	movlb	0	; select bank0
  2564  0FF2  00A1               	movwf	isdigit@c
  2565  0FF3  01A0               	clrf	_isdigit$944
  2566  0FF4  303A               	movlw	58
  2567  0FF5  0221               	subwf	isdigit@c,w
  2568  0FF6  1803               	skipnc
  2569  0FF7  2FFE               	goto	l3430
  2570  0FF8  3030               	movlw	48
  2571  0FF9  0221               	subwf	isdigit@c,w
  2572  0FFA  1C03               	skipc
  2573  0FFB  2FFE               	goto	l3430
  2574  0FFC  01A0               	clrf	_isdigit$944
  2575  0FFD  0AA0               	incf	_isdigit$944,f
  2576  0FFE                     l3430:	
  2577  0FFE  0C20               	rrf	_isdigit$944,w
  2578  0FFF  0008               	return
  2579  1000                     __end_of_isdigit:	
  2580                           
  2581                           	psect	text8
  2582  0774                     __ptext8:	
  2583 ;; *************** function ___wmul *****************
  2584 ;; Defined at:
  2585 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2588 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  product         2    4[BANK0 ] unsigned int 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    0[BANK0 ] unsigned int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  2601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2603 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  2604 ;;Total ram usage:        6 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    2
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_atoi
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function ___wmul
  2616  0774                     ___wmul:	
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2620  0774  0020               	movlb	0	; select bank0
  2621  0775  01A4               	clrf	___wmul@product
  2622  0776  01A5               	clrf	___wmul@product+1
  2623  0777                     l3410:	
  2624  0777  1C20               	btfss	___wmul@multiplier,0
  2625  0778  2F7D               	goto	l484
  2626  0779  0822               	movf	___wmul@multiplicand,w
  2627  077A  07A4               	addwf	___wmul@product,f
  2628  077B  0823               	movf	___wmul@multiplicand+1,w
  2629  077C  3DA5               	addwfc	___wmul@product+1,f
  2630  077D                     l484:	
  2631  077D  3001               	movlw	1
  2632  077E                     u1165:	
  2633  077E  35A2               	lslf	___wmul@multiplicand,f
  2634  077F  0DA3               	rlf	___wmul@multiplicand+1,f
  2635  0780  0B89               	decfsz	9,f
  2636  0781  2F7E               	goto	u1165
  2637  0782  3001               	movlw	1
  2638  0783                     u1175:	
  2639  0783  36A1               	lsrf	___wmul@multiplier+1,f
  2640  0784  0CA0               	rrf	___wmul@multiplier,f
  2641  0785  0B89               	decfsz	9,f
  2642  0786  2F83               	goto	u1175
  2643  0787  0820               	movf	___wmul@multiplier,w
  2644  0788  0421               	iorwf	___wmul@multiplier+1,w
  2645  0789  1D03               	btfss	3,2
  2646  078A  2F77               	goto	l3410
  2647  078B  0825               	movf	___wmul@product+1,w
  2648  078C  00A1               	movwf	?___wmul+1
  2649  078D  0824               	movf	___wmul@product,w
  2650  078E  00A0               	movwf	?___wmul
  2651  078F  0008               	return
  2652  0790                     __end_of___wmul:	
  2653                           
  2654                           	psect	text9
  2655  0FE2                     __ptext9:	
  2656 ;; *************** function _allPeripheralInit *****************
  2657 ;; Defined at:
  2658 ;;		line 1011 in file "../master_eight.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_CCP9_Initialize
  2681 ;;		_EUSART2_Initialize
  2682 ;;		_EUSART_Initialize
  2683 ;;		_TMR1_Initialize
  2684 ;;		_TMR3_Initialize
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _allPeripheralInit
  2692  0FE2                     _allPeripheralInit:	
  2693                           
  2694                           ;master_eight.c: 1012: EUSART_Initialize();
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  2698  0FE2  3187  27A9  318F   	fcall	_EUSART_Initialize
  2699                           
  2700                           ;master_eight.c: 1013: EUSART2_Initialize();
  2701  0FE5  3187  27BF  318F   	fcall	_EUSART2_Initialize
  2702                           
  2703                           ;master_eight.c: 1014: TMR1_Initialize();
  2704  0FE8  318F  27BE  318F   	fcall	_TMR1_Initialize
  2705                           
  2706                           ;master_eight.c: 1015: TMR3_Initialize();
  2707  0FEB  318F  27C9  318F   	fcall	_TMR3_Initialize
  2708                           
  2709                           ;master_eight.c: 1016: CCP9_Initialize();
  2710  0FEE  318F  27B4         	fcall	_CCP9_Initialize
  2711  0FF0  0008               	return
  2712  0FF1                     __end_of_allPeripheralInit:	
  2713                           
  2714                           	psect	text10
  2715  0FC9                     __ptext10:	
  2716 ;; *************** function _TMR3_Initialize *****************
  2717 ;; Defined at:
  2718 ;;		line 1129 in file "../master_eight.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		status,2
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    2
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_allPeripheralInit
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _TMR3_Initialize
  2748  0FC9                     _TMR3_Initialize:	
  2749                           
  2750                           ;master_eight.c: 1132: T3CON = 0x00;
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in _TMR3_Initialize: [status,2]
  2754  0FC9  0028               	movlb	8	; select bank8
  2755  0FCA  0193               	clrf	19	;volatile
  2756                           
  2757                           ;master_eight.c: 1135: T3GCON = 0x00;
  2758  0FCB  0194               	clrf	20	;volatile
  2759                           
  2760                           ;master_eight.c: 1138: TMR3H = 0x00;
  2761  0FCC  0192               	clrf	18	;volatile
  2762                           
  2763                           ;master_eight.c: 1141: TMR3L = 0x00;
  2764  0FCD  0191               	clrf	17	;volatile
  2765                           
  2766                           ;master_eight.c: 1144: PIR3bits.TMR3IF = 0;
  2767  0FCE  0020               	movlb	0	; select bank0
  2768  0FCF  1013               	bcf	19,0	;volatile
  2769                           
  2770                           ;master_eight.c: 1147: PIE3bits.TMR3IE = 1;
  2771  0FD0  0021               	movlb	1	; select bank1
  2772  0FD1  1413               	bsf	19,0	;volatile
  2773                           
  2774                           ;master_eight.c: 1153: GIE = 1;
  2775  0FD2  178B               	bsf	11,7	;volatile
  2776                           
  2777                           ;master_eight.c: 1156: PEIE = 1;
  2778  0FD3  170B               	bsf	11,6	;volatile
  2779  0FD4  0008               	return
  2780  0FD5                     __end_of_TMR3_Initialize:	
  2781                           
  2782                           	psect	text11
  2783  0FBE                     __ptext11:	
  2784 ;; *************** function _TMR1_Initialize *****************
  2785 ;; Defined at:
  2786 ;;		line 1098 in file "../master_eight.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    2
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_allPeripheralInit
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _TMR1_Initialize
  2816  0FBE                     _TMR1_Initialize:	
  2817                           
  2818                           ;master_eight.c: 1101: T1CON = 0x00;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _TMR1_Initialize: [status,2]
  2822  0FBE  0020               	movlb	0	; select bank0
  2823  0FBF  0198               	clrf	24	;volatile
  2824                           
  2825                           ;master_eight.c: 1104: T1GCON = 0x00;
  2826  0FC0  0199               	clrf	25	;volatile
  2827                           
  2828                           ;master_eight.c: 1107: TMR1H = 0x00;
  2829  0FC1  0197               	clrf	23	;volatile
  2830                           
  2831                           ;master_eight.c: 1110: TMR1L = 0x00;
  2832  0FC2  0196               	clrf	22	;volatile
  2833                           
  2834                           ;master_eight.c: 1113: PIR1bits.TMR1IF = 0;
  2835  0FC3  1011               	bcf	17,0	;volatile
  2836                           
  2837                           ;master_eight.c: 1116: PIE1bits.TMR1IE = 1;
  2838  0FC4  0021               	movlb	1	; select bank1
  2839  0FC5  1411               	bsf	17,0	;volatile
  2840                           
  2841                           ;master_eight.c: 1122: GIE = 1;
  2842  0FC6  178B               	bsf	11,7	;volatile
  2843                           
  2844                           ;master_eight.c: 1125: PEIE = 1;
  2845  0FC7  170B               	bsf	11,6	;volatile
  2846  0FC8  0008               	return
  2847  0FC9                     __end_of_TMR1_Initialize:	
  2848                           
  2849                           	psect	text12
  2850  07A9                     __ptext12:	
  2851 ;; *************** function _EUSART_Initialize *****************
  2852 ;; Defined at:
  2853 ;;		line 1023 in file "../master_eight.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    2
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_allPeripheralInit
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function _EUSART_Initialize
  2883  07A9                     _EUSART_Initialize:	
  2884                           
  2885                           ;master_eight.c: 1024: PIE1bits.RC1IE = 0;
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in _EUSART_Initialize: [wreg]
  2889  07A9  0021               	movlb	1	; select bank1
  2890  07AA  1291               	bcf	17,5	;volatile
  2891                           
  2892                           ;master_eight.c: 1025: PIE1bits.TX1IE = 0;
  2893  07AB  1211               	bcf	17,4	;volatile
  2894                           
  2895                           ;master_eight.c: 1030: BAUD1CON = 0x0A;
  2896  07AC  300A               	movlw	10
  2897  07AD  0023               	movlb	3	; select bank3
  2898  07AE  009F               	movwf	31	;volatile
  2899                           
  2900                           ;master_eight.c: 1033: RC1STA = 0x90;
  2901  07AF  3090               	movlw	144
  2902  07B0  009D               	movwf	29	;volatile
  2903                           
  2904                           ;master_eight.c: 1036: TX1STA = 0x24;
  2905  07B1  3024               	movlw	36
  2906  07B2  009E               	movwf	30	;volatile
  2907                           
  2908                           ;master_eight.c: 1041: SP1BRGL = 0xA0;
  2909  07B3  30A0               	movlw	160
  2910  07B4  009B               	movwf	27	;volatile
  2911                           
  2912                           ;master_eight.c: 1043: SP1BRGH = 0x01;
  2913  07B5  3001               	movlw	1
  2914  07B6  009C               	movwf	28	;volatile
  2915                           
  2916                           ;master_eight.c: 1046: GIE = 1;
  2917  07B7  178B               	bsf	11,7	;volatile
  2918                           
  2919                           ;master_eight.c: 1049: PEIE = 1;
  2920  07B8  170B               	bsf	11,6	;volatile
  2921                           
  2922                           ;master_eight.c: 1052: PIE1bits.RC1IE = 1;
  2923  07B9  0021               	movlb	1	; select bank1
  2924  07BA  1691               	bsf	17,5	;volatile
  2925                           
  2926                           ;master_eight.c: 1055: TX1STAbits.TXEN = 1;
  2927  07BB  0023               	movlb	3	; select bank3
  2928  07BC  169E               	bsf	30,5	;volatile
  2929                           
  2930                           ;master_eight.c: 1058: RC1STAbits.SPEN = 1;
  2931  07BD  179D               	bsf	29,7	;volatile
  2932  07BE  0008               	return
  2933  07BF                     __end_of_EUSART_Initialize:	
  2934                           
  2935                           	psect	text13
  2936  07BF                     __ptext13:	
  2937 ;; *************** function _EUSART2_Initialize *****************
  2938 ;; Defined at:
  2939 ;;		line 1060 in file "../master_eight.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    2
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_allPeripheralInit
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _EUSART2_Initialize
  2969  07BF                     _EUSART2_Initialize:	
  2970                           
  2971                           ;master_eight.c: 1062: PIE4bits.RC2IE = 0;
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in _EUSART2_Initialize: [wreg]
  2975  07BF  0021               	movlb	1	; select bank1
  2976  07C0  1294               	bcf	20,5	;volatile
  2977                           
  2978                           ;master_eight.c: 1063: PIE4bits.TX2IE = 0;
  2979  07C1  1214               	bcf	20,4	;volatile
  2980                           
  2981                           ;master_eight.c: 1068: BAUD2CON = 0x0A;
  2982  07C2  300A               	movlw	10
  2983  07C3  0029               	movlb	9	; select bank9
  2984  07C4  0097               	movwf	23	;volatile
  2985                           
  2986                           ;master_eight.c: 1071: RC2STA = 0x90;
  2987  07C5  3090               	movlw	144
  2988  07C6  0095               	movwf	21	;volatile
  2989                           
  2990                           ;master_eight.c: 1074: TX2STA = 0x24;
  2991  07C7  3024               	movlw	36
  2992  07C8  0096               	movwf	22	;volatile
  2993                           
  2994                           ;master_eight.c: 1077: SP2BRGL = 0xA0;
  2995  07C9  30A0               	movlw	160
  2996  07CA  0093               	movwf	19	;volatile
  2997                           
  2998                           ;master_eight.c: 1079: SP2BRGH = 0x01;
  2999  07CB  3001               	movlw	1
  3000  07CC  0094               	movwf	20	;volatile
  3001                           
  3002                           ;master_eight.c: 1082: GIE = 1;
  3003  07CD  178B               	bsf	11,7	;volatile
  3004                           
  3005                           ;master_eight.c: 1085: PEIE = 1;
  3006  07CE  170B               	bsf	11,6	;volatile
  3007                           
  3008                           ;master_eight.c: 1088: PIE4bits.RC2IE = 1;
  3009  07CF  0021               	movlb	1	; select bank1
  3010  07D0  1694               	bsf	20,5	;volatile
  3011                           
  3012                           ;master_eight.c: 1091: TX2STAbits.TXEN = 1;
  3013  07D1  0029               	movlb	9	; select bank9
  3014  07D2  1696               	bsf	22,5	;volatile
  3015                           
  3016                           ;master_eight.c: 1094: RC2STAbits.SPEN = 1;
  3017  07D3  1795               	bsf	21,7	;volatile
  3018  07D4  0008               	return
  3019  07D5                     __end_of_EUSART2_Initialize:	
  3020                           
  3021                           	psect	text14
  3022  0FB4                     __ptext14:	
  3023 ;; *************** function _CCP9_Initialize *****************
  3024 ;; Defined at:
  3025 ;;		line 1159 in file "../master_eight.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_allPeripheralInit
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _CCP9_Initialize
  3055  0FB4                     _CCP9_Initialize:	
  3056                           
  3057                           ;master_eight.c: 1163: CCP9CON = 0x04;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _CCP9_Initialize: [wreg+status,2]
  3061  0FB4  3004               	movlw	4
  3062  0FB5  002C               	movlb	12	; select bank12
  3063  0FB6  009C               	movwf	28	;volatile
  3064                           
  3065                           ;master_eight.c: 1166: CCPR9H = 0x00;
  3066  0FB7  019B               	clrf	27	;volatile
  3067                           
  3068                           ;master_eight.c: 1169: CCPR9L = 0x00;
  3069  0FB8  019A               	clrf	26	;volatile
  3070                           
  3071                           ;master_eight.c: 1175: PIR4bits.CCP9IF = 0;
  3072  0FB9  0020               	movlb	0	; select bank0
  3073  0FBA  1314               	bcf	20,6	;volatile
  3074                           
  3075                           ;master_eight.c: 1178: PIE4bits.CCP9IE = 1;
  3076  0FBB  0021               	movlb	1	; select bank1
  3077  0FBC  1714               	bsf	20,6	;volatile
  3078  0FBD  0008               	return
  3079  0FBE                     __end_of_CCP9_Initialize:	
  3080                           
  3081                           	psect	text15
  3082  0535                     __ptext15:	
  3083 ;; *************** function _actiontouchPanel *****************
  3084 ;; Defined at:
  3085 ;;		line 1 in file "../actiontouchpanel.h"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  Switch_Num      1    wreg     unsigned char 
  3088 ;;  sw_status       1    3[BANK0 ] unsigned char 
  3089 ;;  Sw_speed        1    4[BANK0 ] unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  Switch_Num      1   11[BANK0 ] unsigned char 
  3092 ;;  switch_statu    2   12[BANK0 ] int 
  3093 ;;  SwNum           2    9[BANK0 ] int 
  3094 ;;  int_swSpeed     2    6[BANK0 ] int 
  3095 ;;  ch_sw_num       1    8[BANK0 ] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3106 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0
  3107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3108 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0
  3109 ;;Total ram usage:       11 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    3
  3112 ;; This function calls:
  3113 ;;		_sendFeedback_TO_Gateway
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _actiontouchPanel
  3121  0535                     _actiontouchPanel:	
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _actiontouchPanel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3125                           ;actiontouchPanel@Switch_Num stored from wreg
  3126  0535  0020               	movlb	0	; select bank0
  3127  0536  00AB               	movwf	actiontouchPanel@Switch_Num
  3128                           
  3129                           ;actiontouchpanel.h: 4: M1=1;M2=1;M3=1;M4=1;
  3130  0537  3001               	movlw	1
  3131  0538  00E8               	movwf	_M1
  3132  0539  3000               	movlw	0
  3133  053A  00E9               	movwf	_M1+1
  3134  053B  3001               	movlw	1
  3135  053C  00E6               	movwf	_M2
  3136  053D  3000               	movlw	0
  3137  053E  00E7               	movwf	_M2+1
  3138  053F  3001               	movlw	1
  3139  0540  00E4               	movwf	_M3
  3140  0541  3000               	movlw	0
  3141  0542  00E5               	movwf	_M3+1
  3142  0543  3001               	movlw	1
  3143  0544  00E2               	movwf	_M4
  3144  0545  3000               	movlw	0
  3145  0546  00E3               	movwf	_M4+1
  3146                           
  3147                           ;actiontouchpanel.h: 5: int switch_status = sw_status - '0';
  3148  0547  0823               	movf	actiontouchPanel@sw_status,w
  3149  0548  3ED0               	addlw	208
  3150  0549  00AC               	movwf	actiontouchPanel@switch_status
  3151  054A  30FF               	movlw	255
  3152  054B  1803               	skipnc
  3153  054C  3000               	movlw	0
  3154  054D  00AD               	movwf	actiontouchPanel@switch_status+1
  3155                           
  3156                           ;actiontouchpanel.h: 6: int SwNum = Switch_Num - '@';
  3157  054E  082B               	movf	actiontouchPanel@Switch_Num,w
  3158  054F  3EC0               	addlw	192
  3159  0550  00A9               	movwf	actiontouchPanel@SwNum
  3160  0551  30FF               	movlw	255
  3161  0552  1803               	skipnc
  3162  0553  3000               	movlw	0
  3163  0554  00AA               	movwf	actiontouchPanel@SwNum+1
  3164                           
  3165                           ;actiontouchpanel.h: 7: int int_swSpeed = Sw_speed-'0';
  3166  0555  0824               	movf	actiontouchPanel@Sw_speed,w
  3167  0556  3ED0               	addlw	208
  3168  0557  00A6               	movwf	actiontouchPanel@int_swSpeed
  3169  0558  30FF               	movlw	255
  3170  0559  1803               	skipnc
  3171  055A  3000               	movlw	0
  3172  055B  00A7               	movwf	actiontouchPanel@int_swSpeed+1
  3173                           
  3174                           ;actiontouchpanel.h: 8: char ch_sw_num = SwNum +'0';
  3175  055C  0829               	movf	actiontouchPanel@SwNum,w
  3176  055D  3E30               	addlw	48
  3177  055E  00A5               	movwf	??_actiontouchPanel
  3178  055F  0825               	movf	??_actiontouchPanel,w
  3179  0560  00A8               	movwf	actiontouchPanel@ch_sw_num
  3180                           
  3181                           ;actiontouchpanel.h: 10: if(checkFlag == 1)
  3182  0561  0360               	decf	_checkFlag,w
  3183  0562  0461               	iorwf	_checkFlag+1,w
  3184  0563  1D03               	btfss	3,2
  3185  0564  2DA8               	goto	l3680
  3186                           
  3187                           ;actiontouchpanel.h: 12: {
  3188                           ;actiontouchpanel.h: 13: checkFlag=0;
  3189  0565  01E0               	clrf	_checkFlag
  3190  0566  01E1               	clrf	_checkFlag+1
  3191                           
  3192                           ;actiontouchpanel.h: 14: }
  3193  0567  0008               	return
  3194  0568                     l3652:	
  3195                           ;actiontouchpanel.h: 19: {
  3196                           ;actiontouchpanel.h: 21: case 'A':
  3197                           
  3198                           ;actiontouchpanel.h: 15: else
  3199                           ;actiontouchpanel.h: 16: {
  3200                           ;actiontouchpanel.h: 18: switch(Switch_Num)
  3201                           
  3202                           
  3203                           ;actiontouchpanel.h: 22: {
  3204                           ;actiontouchpanel.h: 23: if(copy_parentalLockBuffer[1] == '0' && M1 == 1)
  3205  0568  3030               	movlw	48
  3206  0569  0021               	movlb	1	; select bank1
  3207  056A  0649               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  3208  056B  1D03               	btfss	3,2
  3209  056C  0008               	return
  3210  056D  0020               	movlb	0	; select bank0
  3211  056E  0368               	decf	_M1,w
  3212  056F  0469               	iorwf	_M1+1,w
  3213  0570  1D03               	btfss	3,2
  3214  0571  0008               	return
  3215                           
  3216                           ;actiontouchpanel.h: 24: {
  3217                           ;actiontouchpanel.h: 25: sendFeedback_TO_Gateway('1',sw_status);
  3218  0572  0823               	movf	actiontouchPanel@sw_status,w
  3219  0573  00A5               	movwf	??_actiontouchPanel
  3220  0574  0825               	movf	??_actiontouchPanel,w
  3221  0575  00A0               	movwf	sendFeedback_TO_Gateway@sw_statusS
  3222  0576  3031               	movlw	49
  3223  0577  3186  26A4         	fcall	_sendFeedback_TO_Gateway
  3224                           
  3225                           ;actiontouchpanel.h: 26: PORTAbits.RA2 = switch_status; M1 = 0;
  3226  0579  0020               	movlb	0	; select bank0
  3227  057A  0C2C               	rrf	actiontouchPanel@switch_status,w
  3228  057B  1C03               	skipc
  3229  057C  110C               	bcf	12,2	;volatile
  3230  057D  1803               	skipnc
  3231  057E  150C               	bsf	12,2	;volatile
  3232  057F  01E8               	clrf	_M1
  3233  0580  01E9               	clrf	_M1+1
  3234                           
  3235                           ;actiontouchpanel.h: 27: TX1REG= 'A';
  3236  0581  3041               	movlw	65
  3237  0582  0023               	movlb	3	; select bank3
  3238  0583  009A               	movwf	26	;volatile
  3239                           
  3240                           ;actiontouchpanel.h: 29: }
  3241                           ;actiontouchpanel.h: 30: }
  3242                           ;actiontouchpanel.h: 32: break;
  3243  0584  0008               	return
  3244  0585                     l3664:	
  3245                           ;actiontouchpanel.h: 33: case 'B':
  3246                           
  3247                           
  3248                           ;actiontouchpanel.h: 34: {
  3249                           ;actiontouchpanel.h: 36: if( copy_parentalLockBuffer[2] == '0' && M2 == 1 )
  3250  0585  3030               	movlw	48
  3251  0586  0021               	movlb	1	; select bank1
  3252  0587  064A               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  3253  0588  1D03               	btfss	3,2
  3254  0589  0008               	return
  3255  058A  0020               	movlb	0	; select bank0
  3256  058B  0366               	decf	_M2,w
  3257  058C  0467               	iorwf	_M2+1,w
  3258  058D  1D03               	btfss	3,2
  3259  058E  0008               	return
  3260                           
  3261                           ;actiontouchpanel.h: 37: {
  3262                           ;actiontouchpanel.h: 38: start_PWM_Generation_in_ISR_FLAG=0;
  3263  058F  01D6               	clrf	_start_PWM_Generation_in_ISR_FLAG
  3264  0590  01D7               	clrf	_start_PWM_Generation_in_ISR_FLAG+1
  3265                           
  3266                           ;actiontouchpanel.h: 39: sendFeedback_TO_Gateway('2',sw_status);
  3267  0591  0823               	movf	actiontouchPanel@sw_status,w
  3268  0592  00A5               	movwf	??_actiontouchPanel
  3269  0593  0825               	movf	??_actiontouchPanel,w
  3270  0594  00A0               	movwf	sendFeedback_TO_Gateway@sw_statusS
  3271  0595  3032               	movlw	50
  3272  0596  3186  26A4         	fcall	_sendFeedback_TO_Gateway
  3273                           
  3274                           ;actiontouchpanel.h: 40: PORTEbits.RE5 = ~switch_status; M2 = 0;
  3275  0598  0020               	movlb	0	; select bank0
  3276  0599  092C               	comf	actiontouchPanel@switch_status,w
  3277  059A  00A5               	movwf	??_actiontouchPanel
  3278  059B  0EA5               	swapf	??_actiontouchPanel,f
  3279  059C  0DA5               	rlf	??_actiontouchPanel,f
  3280  059D  0810               	movf	16,w	;volatile
  3281  059E  0625               	xorwf	??_actiontouchPanel,w
  3282  059F  39DF               	andlw	-33
  3283  05A0  0625               	xorwf	??_actiontouchPanel,w
  3284  05A1  0090               	movwf	16	;volatile
  3285  05A2  01E6               	clrf	_M2
  3286  05A3  01E7               	clrf	_M2+1
  3287                           
  3288                           ;actiontouchpanel.h: 41: TX1REG= 'B';
  3289  05A4  3042               	movlw	66
  3290  05A5  0023               	movlb	3	; select bank3
  3291  05A6  009A               	movwf	26	;volatile
  3292                           
  3293                           ;actiontouchpanel.h: 50: }
  3294                           
  3295                           ;actiontouchpanel.h: 49: break;
  3296                           
  3297                           ;actiontouchpanel.h: 48: default:
  3298                           
  3299                           ;actiontouchpanel.h: 43: }
  3300                           ;actiontouchpanel.h: 45: }
  3301                           ;actiontouchpanel.h: 47: break;
  3302  05A7  0008               	return
  3303  05A8                     l3680:	
  3304  05A8  0020               	movlb	0	; select bank0
  3305  05A9  082B               	movf	actiontouchPanel@Switch_Num,w
  3306                           
  3307                           ; Switch size 1, requested type "space"
  3308                           ; Number of cases is 2, Range of values is 65 to 66
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte            7     4 (average)
  3312                           ; direct_byte           13     9 (fixed)
  3313                           ; jumptable            263     9 (fixed)
  3314                           ;	Chosen strategy is simple_byte
  3315  05AA  3A41               	xorlw	65	; case 65
  3316  05AB  1903               	skipnz
  3317  05AC  2D68               	goto	l3652
  3318  05AD  3A03               	xorlw	3	; case 66
  3319  05AE  1903               	skipnz
  3320  05AF  2D85               	goto	l3664
  3321  05B0  2DB2               	goto	l224
  3322  05B1  0008               	return
  3323  05B2                     l224:	
  3324  05B2  0008               	return
  3325  05B3                     __end_of_actiontouchPanel:	
  3326                           
  3327                           	psect	text16
  3328  06A4                     __ptext16:	
  3329 ;; *************** function _sendFeedback_TO_Gateway *****************
  3330 ;; Defined at:
  3331 ;;		line 1199 in file "../master_eight.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  sw_numberN      1    wreg     unsigned char 
  3334 ;;  sw_statusS      1    0[BANK0 ] unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  sw_numberN      1    2[BANK0 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3346 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        3 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    2
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_actiontouchPanel
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _sendFeedback_TO_Gateway
  3362  06A4                     _sendFeedback_TO_Gateway:	
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _sendFeedback_TO_Gateway: [wreg]
  3366                           ;sendFeedback_TO_Gateway@sw_numberN stored from wreg
  3367  06A4  0020               	movlb	0	; select bank0
  3368  06A5  00A2               	movwf	sendFeedback_TO_Gateway@sw_numberN
  3369                           
  3370                           ;master_eight.c: 1201: TX1REG='G';_delay((unsigned long)((1)*(16000000/4000.0)));
  3371  06A6  3047               	movlw	71
  3372  06A7  0023               	movlb	3	; select bank3
  3373  06A8  009A               	movwf	26	;volatile
  3374  06A9  3006               	movlw	6
  3375  06AA  0020               	movlb	0	; select bank0
  3376  06AB  00A1               	movwf	??_sendFeedback_TO_Gateway
  3377  06AC  3030               	movlw	48
  3378  06AD                     u1627:	
  3379  06AD  0B89               	decfsz	9,f
  3380  06AE  2EAD               	goto	u1627
  3381  06AF  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3382  06B0  2EAD               	goto	u1627
  3383  06B1  0000               	nop
  3384                           
  3385                           ;master_eight.c: 1202: TX1REG=sw_statusS;_delay((unsigned long)((1)*(16000000/4000.0)));
  3386  06B2  0020               	movlb	0	; select bank0
  3387  06B3  0820               	movf	sendFeedback_TO_Gateway@sw_statusS,w
  3388  06B4  0023               	movlb	3	; select bank3
  3389  06B5  009A               	movwf	26	;volatile
  3390  06B6  3006               	movlw	6
  3391  06B7  0020               	movlb	0	; select bank0
  3392  06B8  00A1               	movwf	??_sendFeedback_TO_Gateway
  3393  06B9  3030               	movlw	48
  3394  06BA                     u1637:	
  3395  06BA  0B89               	decfsz	9,f
  3396  06BB  2EBA               	goto	u1637
  3397  06BC  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3398  06BD  2EBA               	goto	u1637
  3399  06BE  0000               	nop
  3400                           
  3401                           ;master_eight.c: 1203: TX1REG='0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3402  06BF  3030               	movlw	48
  3403  06C0  0023               	movlb	3	; select bank3
  3404  06C1  009A               	movwf	26	;volatile
  3405  06C2  3006               	movlw	6
  3406  06C3  0020               	movlb	0	; select bank0
  3407  06C4  00A1               	movwf	??_sendFeedback_TO_Gateway
  3408  06C5  3030               	movlw	48
  3409  06C6                     u1647:	
  3410  06C6  0B89               	decfsz	9,f
  3411  06C7  2EC6               	goto	u1647
  3412  06C8  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3413  06C9  2EC6               	goto	u1647
  3414  06CA  0000               	nop
  3415                           
  3416                           ;master_eight.c: 1204: TX1REG=sw_numberN;_delay((unsigned long)((1)*(16000000/4000.0)));
  3417  06CB  0020               	movlb	0	; select bank0
  3418  06CC  0822               	movf	sendFeedback_TO_Gateway@sw_numberN,w
  3419  06CD  0023               	movlb	3	; select bank3
  3420  06CE  009A               	movwf	26	;volatile
  3421  06CF  3006               	movlw	6
  3422  06D0  0020               	movlb	0	; select bank0
  3423  06D1  00A1               	movwf	??_sendFeedback_TO_Gateway
  3424  06D2  3030               	movlw	48
  3425  06D3                     u1657:	
  3426  06D3  0B89               	decfsz	9,f
  3427  06D4  2ED3               	goto	u1657
  3428  06D5  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3429  06D6  2ED3               	goto	u1657
  3430  06D7  0000               	nop
  3431  06D8  0008               	return
  3432  06D9                     __end_of_sendFeedback_TO_Gateway:	
  3433                           
  3434                           	psect	text17
  3435  07D5                     __ptext17:	
  3436 ;; *************** function _GPIO_pin_Initialize *****************
  3437 ;; Defined at:
  3438 ;;		line 983 in file "../master_eight.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    3
  3459 ;; This function calls:
  3460 ;;		_clearAllPorts
  3461 ;;		_pinINIT_extra
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _GPIO_pin_Initialize
  3469  07D5                     _GPIO_pin_Initialize:	
  3470                           
  3471                           ;master_eight.c: 984: clearAllPorts();
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  3475  07D5  318F  27A4  3187   	fcall	_clearAllPorts
  3476                           
  3477                           ;master_eight.c: 985: pinINIT_extra();
  3478  07D8  3187  27EB  3187   	fcall	_pinINIT_extra
  3479                           
  3480                           ;master_eight.c: 988: TRISAbits.TRISA5 = 1;
  3481  07DB  0021               	movlb	1	; select bank1
  3482  07DC  168C               	bsf	12,5	;volatile
  3483                           
  3484                           ;master_eight.c: 989: TRISFbits.TRISF2 = 1;
  3485  07DD  0026               	movlb	6	; select bank6
  3486  07DE  150C               	bsf	12,2	;volatile
  3487                           
  3488                           ;master_eight.c: 993: TRISAbits.TRISA2 = 0;
  3489  07DF  0021               	movlb	1	; select bank1
  3490  07E0  110C               	bcf	12,2	;volatile
  3491                           
  3492                           ;master_eight.c: 994: TRISEbits.TRISE5 = 0;
  3493  07E1  1290               	bcf	16,5	;volatile
  3494                           
  3495                           ;master_eight.c: 997: TRISEbits.TRISE3 = 1;
  3496  07E2  1590               	bsf	16,3	;volatile
  3497                           
  3498                           ;master_eight.c: 999: TRISCbits.TRISC6 = 0;
  3499  07E3  130E               	bcf	14,6	;volatile
  3500                           
  3501                           ;master_eight.c: 1000: TRISCbits.TRISC7 = 1;
  3502  07E4  178E               	bsf	14,7	;volatile
  3503                           
  3504                           ;master_eight.c: 1002: TRISGbits.TRISG1=0;
  3505  07E5  0026               	movlb	6	; select bank6
  3506  07E6  108D               	bcf	13,1	;volatile
  3507                           
  3508                           ;master_eight.c: 1003: TRISGbits.TRISG2=1;
  3509  07E7  150D               	bsf	13,2	;volatile
  3510                           
  3511                           ;master_eight.c: 1005: clearAllPorts();
  3512  07E8  318F  27A4         	fcall	_clearAllPorts
  3513  07EA  0008               	return
  3514  07EB                     __end_of_GPIO_pin_Initialize:	
  3515                           
  3516                           	psect	text18
  3517  07EB                     __ptext18:	
  3518 ;; *************** function _pinINIT_extra *****************
  3519 ;; Defined at:
  3520 ;;		line 1258 in file "../master_eight.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		status,2
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    2
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_GPIO_pin_Initialize
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _pinINIT_extra
  3550  07EB                     _pinINIT_extra:	
  3551                           
  3552                           ;master_eight.c: 1259: ANSELG=0x00; WPUG = 0;
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _pinINIT_extra: [status,2]
  3556  07EB  0028               	movlb	8	; select bank8
  3557  07EC  018D               	clrf	13	;volatile
  3558  07ED  0029               	movlb	9	; select bank9
  3559  07EE  018D               	clrf	13	;volatile
  3560                           
  3561                           ;master_eight.c: 1261: ANSELF=0x00;
  3562  07EF  0028               	movlb	8	; select bank8
  3563  07F0  018C               	clrf	12	;volatile
  3564                           
  3565                           ;master_eight.c: 1263: ANSELE=0x00; WPUE=0x00;
  3566  07F1  0023               	movlb	3	; select bank3
  3567  07F2  0190               	clrf	16	;volatile
  3568  07F3  0024               	movlb	4	; select bank4
  3569  07F4  0190               	clrf	16	;volatile
  3570                           
  3571                           ;master_eight.c: 1265: ANSELD=0x00; WPUD=0x00;
  3572  07F5  0023               	movlb	3	; select bank3
  3573  07F6  018F               	clrf	15	;volatile
  3574  07F7  0024               	movlb	4	; select bank4
  3575  07F8  018F               	clrf	15	;volatile
  3576                           
  3577                           ;master_eight.c: 1267: ANSELB=0x00; WPUB=0x00;
  3578  07F9  0023               	movlb	3	; select bank3
  3579  07FA  018D               	clrf	13	;volatile
  3580  07FB  0024               	movlb	4	; select bank4
  3581  07FC  018D               	clrf	13	;volatile
  3582                           
  3583                           ;master_eight.c: 1269: ANSELA=0x00;
  3584  07FD  0023               	movlb	3	; select bank3
  3585  07FE  018C               	clrf	12	;volatile
  3586  07FF  0008               	return
  3587  0800                     __end_of_pinINIT_extra:	
  3588                           
  3589                           	psect	text19
  3590  0FA4                     __ptext19:	
  3591 ;; *************** function _clearAllPorts *****************
  3592 ;; Defined at:
  3593 ;;		line 1275 in file "../master_eight.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		None
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    2
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_GPIO_pin_Initialize
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _clearAllPorts
  3623  0FA4                     _clearAllPorts:	
  3624                           
  3625                           ;master_eight.c: 1279: PORTAbits.RA2=0;
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _clearAllPorts: []
  3629  0FA4  0020               	movlb	0	; select bank0
  3630  0FA5  110C               	bcf	12,2	;volatile
  3631                           
  3632                           ;master_eight.c: 1280: PORTEbits.RE5=1;
  3633  0FA6  1690               	bsf	16,5	;volatile
  3634  0FA7  0008               	return
  3635  0FA8                     __end_of_clearAllPorts:	
  3636                           
  3637                           	psect	intentry
  3638  0004                     __pintentry:	
  3639 ;; *************** function _isr *****************
  3640 ;; Defined at:
  3641 ;;		line 157 in file "../master_eight.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        2 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		_errorsISR
  3664 ;; This function is called by:
  3665 ;;		Interrupt level 1
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669  0004                     _isr:	
  3670                           
  3671                           ;incstack = 0
  3672  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3673                           
  3674                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3675  0005  3180               	pagesel	$
  3676  0006  0020               	movlb	0	; select bank0
  3677  0007  087F               	movf	127,w
  3678  0008  00FB               	movwf	??_isr+1
  3679                           
  3680                           ;master_eight.c: 162: if(RC2IF){
  3681  0009  1E94               	btfss	20,5	;volatile
  3682  000A  287E               	goto	i1l2530
  3683                           
  3684                           ;master_eight.c: 163: if(RC2STAbits.OERR){
  3685  000B  0029               	movlb	9	; select bank9
  3686  000C  1C95               	btfss	21,1	;volatile
  3687  000D  2824               	goto	i1l2498
  3688                           
  3689                           ;master_eight.c: 164: RC2STAbits.CREN = 0;
  3690  000E  1215               	bcf	21,4	;volatile
  3691                           
  3692                           ;master_eight.c: 165: RC2STAbits.CREN = 1;
  3693  000F  1615               	bsf	21,4	;volatile
  3694                           
  3695                           ;master_eight.c: 167: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  3696  0010  3045               	movlw	69
  3697  0011  00FA               	movwf	??_isr
  3698  0012  087A               	movf	??_isr,w
  3699  0013  00F1               	movwf	_ErrorNames
  3700  0014  3052               	movlw	82
  3701  0015  00FA               	movwf	??_isr
  3702  0016  087A               	movf	??_isr,w
  3703  0017  00F2               	movwf	_ErrorNames+1
  3704  0018  304F               	movlw	79
  3705  0019  00FA               	movwf	??_isr
  3706  001A  087A               	movf	??_isr,w
  3707  001B  00F3               	movwf	_ErrorNames+2
  3708  001C  3056               	movlw	86
  3709  001D  00FA               	movwf	??_isr
  3710  001E  087A               	movf	??_isr,w
  3711  001F  00F4               	movwf	_ErrorNames+3
  3712                           
  3713                           ;master_eight.c: 168: errorsISR(ErrorNames);
  3714  0020  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3715  0021  3187  2790  3180   	fcall	_errorsISR
  3716  0024                     i1l2498:	
  3717                           
  3718                           ;master_eight.c: 169: }
  3719                           ;master_eight.c: 170: if(RC2STAbits.FERR){
  3720  0024  0029               	movlb	9	; select bank9
  3721  0025  1D15               	btfss	21,2	;volatile
  3722  0026  283D               	goto	i1l2506
  3723                           
  3724                           ;master_eight.c: 171: RC2STAbits.CREN = 0;
  3725  0027  1215               	bcf	21,4	;volatile
  3726                           
  3727                           ;master_eight.c: 172: RC2STAbits.CREN = 1;
  3728  0028  1615               	bsf	21,4	;volatile
  3729                           
  3730                           ;master_eight.c: 174: ErrorNames[0]='R'; ErrorNames[1]='E'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='R';
  3731  0029  3052               	movlw	82
  3732  002A  00FA               	movwf	??_isr
  3733  002B  087A               	movf	??_isr,w
  3734  002C  00F1               	movwf	_ErrorNames
  3735  002D  3045               	movlw	69
  3736  002E  00FA               	movwf	??_isr
  3737  002F  087A               	movf	??_isr,w
  3738  0030  00F2               	movwf	_ErrorNames+1
  3739  0031  3052               	movlw	82
  3740  0032  00FA               	movwf	??_isr
  3741  0033  087A               	movf	??_isr,w
  3742  0034  00F3               	movwf	_ErrorNames+2
  3743  0035  3052               	movlw	82
  3744  0036  00FA               	movwf	??_isr
  3745  0037  087A               	movf	??_isr,w
  3746  0038  00F4               	movwf	_ErrorNames+3
  3747                           
  3748                           ;master_eight.c: 175: errorsISR(ErrorNames);
  3749  0039  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3750  003A  3187  2790  3180   	fcall	_errorsISR
  3751  003D                     i1l2506:	
  3752                           
  3753                           ;master_eight.c: 176: }
  3754                           ;master_eight.c: 178: touchpanleReceivedDatabuffer[touchpanelReceivedataPosition] = RC2R
      +                          EG;
  3755  003D  0029               	movlb	9	; select bank9
  3756  003E  0811               	movf	17,w	;volatile
  3757  003F  00FA               	movwf	??_isr
  3758  0040  0020               	movlb	0	; select bank0
  3759  0041  085A               	movf	_touchpanelReceivedataPosition,w
  3760  0042  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  3761  0043  0086               	movwf	6
  3762  0044  0187               	clrf	7
  3763  0045  087A               	movf	??_isr,w
  3764  0046  0081               	movwf	1
  3765                           
  3766                           ;master_eight.c: 179: if(touchpanleReceivedDatabuffer[0] == '(')
  3767  0047  3028               	movlw	40
  3768  0048  0021               	movlb	1	; select bank1
  3769  0049  0638               	xorwf	_touchpanleReceivedDatabuffer^(0+128),w
  3770  004A  1D03               	btfss	3,2
  3771  004B  2864               	goto	i1l232
  3772                           
  3773                           ;master_eight.c: 180: {
  3774                           ;master_eight.c: 181: touchpanelReceivedataPosition++;
  3775  004C  3001               	movlw	1
  3776  004D  0020               	movlb	0	; select bank0
  3777  004E  07DA               	addwf	_touchpanelReceivedataPosition,f
  3778  004F  3000               	movlw	0
  3779  0050  3DDB               	addwfc	_touchpanelReceivedataPosition+1,f
  3780                           
  3781                           ;master_eight.c: 182: if(touchpanelReceivedataPosition > 7)
  3782  0051  085B               	movf	_touchpanelReceivedataPosition+1,w
  3783  0052  3A80               	xorlw	128
  3784  0053  00FA               	movwf	??_isr
  3785  0054  3080               	movlw	128
  3786  0055  027A               	subwf	??_isr,w
  3787  0056  3008               	movlw	8
  3788  0057  1903               	btfsc	3,2
  3789  0058  025A               	subwf	_touchpanelReceivedataPosition,w
  3790  0059  1C03               	skipc
  3791  005A  287E               	goto	i1l2530
  3792                           
  3793                           ;master_eight.c: 183: {
  3794                           ;master_eight.c: 184: touchPanelDataReceived = 1;
  3795  005B  3001               	movlw	1
  3796  005C  0020               	movlb	0	; select bank0
  3797  005D  00D8               	movwf	_touchPanelDataReceived	;volatile
  3798  005E  3000               	movlw	0
  3799  005F  00D9               	movwf	_touchPanelDataReceived+1	;volatile
  3800                           
  3801                           ;master_eight.c: 186: touchpanelReceivedataPosition=0;
  3802  0060  01DA               	clrf	_touchpanelReceivedataPosition
  3803  0061  01DB               	clrf	_touchpanelReceivedataPosition+1
  3804                           
  3805                           ;master_eight.c: 187: RC2IF = 0;
  3806  0062  1294               	bcf	20,5	;volatile
  3807                           
  3808                           ;master_eight.c: 188: }
  3809                           ;master_eight.c: 189: }
  3810  0063  287E               	goto	i1l2530
  3811  0064                     i1l232:	
  3812                           
  3813                           ;master_eight.c: 190: else{
  3814                           ;master_eight.c: 191: RC2STAbits.CREN = 0;
  3815  0064  0029               	movlb	9	; select bank9
  3816  0065  1215               	bcf	21,4	;volatile
  3817                           
  3818                           ;master_eight.c: 192: RC2STAbits.CREN = 1;
  3819  0066  1615               	bsf	21,4	;volatile
  3820                           
  3821                           ;master_eight.c: 193: touchpanelReceivedataPosition=0;
  3822  0067  0020               	movlb	0	; select bank0
  3823  0068  01DA               	clrf	_touchpanelReceivedataPosition
  3824  0069  01DB               	clrf	_touchpanelReceivedataPosition+1
  3825                           
  3826                           ;master_eight.c: 195: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='T';
  3827  006A  3045               	movlw	69
  3828  006B  00FA               	movwf	??_isr
  3829  006C  087A               	movf	??_isr,w
  3830  006D  00F1               	movwf	_ErrorNames
  3831  006E  3052               	movlw	82
  3832  006F  00FA               	movwf	??_isr
  3833  0070  087A               	movf	??_isr,w
  3834  0071  00F2               	movwf	_ErrorNames+1
  3835  0072  3052               	movlw	82
  3836  0073  00FA               	movwf	??_isr
  3837  0074  087A               	movf	??_isr,w
  3838  0075  00F3               	movwf	_ErrorNames+2
  3839  0076  3054               	movlw	84
  3840  0077  00FA               	movwf	??_isr
  3841  0078  087A               	movf	??_isr,w
  3842  0079  00F4               	movwf	_ErrorNames+3
  3843                           
  3844                           ;master_eight.c: 196: errorsISR(ErrorNames);
  3845  007A  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3846  007B  3187  2790  3180   	fcall	_errorsISR
  3847  007E                     i1l2530:	
  3848                           
  3849                           ;master_eight.c: 197: }
  3850                           ;master_eight.c: 198: }
  3851                           ;master_eight.c: 201: if(RC1IF){
  3852  007E  0020               	movlb	0	; select bank0
  3853  007F  1E91               	btfss	17,5	;volatile
  3854  0080  28DD               	goto	i1l2564
  3855                           
  3856                           ;master_eight.c: 202: if(RC1STAbits.OERR){
  3857  0081  0023               	movlb	3	; select bank3
  3858  0082  1C9D               	btfss	29,1	;volatile
  3859  0083  289A               	goto	i1l2540
  3860                           
  3861                           ;master_eight.c: 203: RC1STAbits.CREN = 0;
  3862  0084  121D               	bcf	29,4	;volatile
  3863                           
  3864                           ;master_eight.c: 204: RC1STAbits.CREN = 1;
  3865  0085  161D               	bsf	29,4	;volatile
  3866                           
  3867                           ;master_eight.c: 206: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  3868  0086  3045               	movlw	69
  3869  0087  00FA               	movwf	??_isr
  3870  0088  087A               	movf	??_isr,w
  3871  0089  00F1               	movwf	_ErrorNames
  3872  008A  3052               	movlw	82
  3873  008B  00FA               	movwf	??_isr
  3874  008C  087A               	movf	??_isr,w
  3875  008D  00F2               	movwf	_ErrorNames+1
  3876  008E  304F               	movlw	79
  3877  008F  00FA               	movwf	??_isr
  3878  0090  087A               	movf	??_isr,w
  3879  0091  00F3               	movwf	_ErrorNames+2
  3880  0092  3056               	movlw	86
  3881  0093  00FA               	movwf	??_isr
  3882  0094  087A               	movf	??_isr,w
  3883  0095  00F4               	movwf	_ErrorNames+3
  3884                           
  3885                           ;master_eight.c: 207: errorsISR(ErrorNames);
  3886  0096  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3887  0097  3187  2790  3180   	fcall	_errorsISR
  3888  009A                     i1l2540:	
  3889                           
  3890                           ;master_eight.c: 208: }
  3891                           ;master_eight.c: 209: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  3892  009A  0023               	movlb	3	; select bank3
  3893  009B  0819               	movf	25,w	;volatile
  3894  009C  00FA               	movwf	??_isr
  3895  009D  0020               	movlb	0	; select bank0
  3896  009E  085E               	movf	_mainReceivedDataPosition,w
  3897  009F  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  3898  00A0  0086               	movwf	6
  3899  00A1  3001               	movlw	1	; select bank2/3
  3900  00A2  0087               	movwf	7
  3901  00A3  087A               	movf	??_isr,w
  3902  00A4  0081               	movwf	1
  3903                           
  3904                           ;master_eight.c: 212: if(mainReceivedDataBuffer[0]=='%'){
  3905  00A5  3025               	movlw	37
  3906  00A6  0022               	movlb	2	; select bank2
  3907  00A7  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  3908  00A8  1D03               	btfss	3,2
  3909  00A9  28C3               	goto	i1l237
  3910                           
  3911                           ;master_eight.c: 213: mainReceivedDataPosition++;
  3912  00AA  3001               	movlw	1
  3913  00AB  0020               	movlb	0	; select bank0
  3914  00AC  07DE               	addwf	_mainReceivedDataPosition,f
  3915  00AD  3000               	movlw	0
  3916  00AE  3DDF               	addwfc	_mainReceivedDataPosition+1,f
  3917                           
  3918                           ;master_eight.c: 214: if(mainReceivedDataPosition>15){
  3919  00AF  085F               	movf	_mainReceivedDataPosition+1,w
  3920  00B0  3A80               	xorlw	128
  3921  00B1  00FA               	movwf	??_isr
  3922  00B2  3080               	movlw	128
  3923  00B3  027A               	subwf	??_isr,w
  3924  00B4  1D03               	skipz
  3925  00B5  28B8               	goto	u94_25
  3926  00B6  3010               	movlw	16
  3927  00B7  025E               	subwf	_mainReceivedDataPosition,w
  3928  00B8                     u94_25:	
  3929  00B8  1C03               	skipc
  3930  00B9  28DD               	goto	i1l2564
  3931                           
  3932                           ;master_eight.c: 215: mainDataReceived=1;
  3933  00BA  3001               	movlw	1
  3934  00BB  0020               	movlb	0	; select bank0
  3935  00BC  00DC               	movwf	_mainDataReceived
  3936  00BD  3000               	movlw	0
  3937  00BE  00DD               	movwf	_mainDataReceived+1
  3938                           
  3939                           ;master_eight.c: 216: mainReceivedDataPosition=0;
  3940  00BF  01DE               	clrf	_mainReceivedDataPosition
  3941  00C0  01DF               	clrf	_mainReceivedDataPosition+1
  3942                           
  3943                           ;master_eight.c: 217: RC1IF=0;
  3944  00C1  1291               	bcf	17,5	;volatile
  3945                           
  3946                           ;master_eight.c: 218: }
  3947                           ;master_eight.c: 219: }
  3948  00C2  28DD               	goto	i1l2564
  3949  00C3                     i1l237:	
  3950                           
  3951                           ;master_eight.c: 220: else{
  3952                           ;master_eight.c: 221: RC1STAbits.CREN = 0;
  3953  00C3  0023               	movlb	3	; select bank3
  3954  00C4  121D               	bcf	29,4	;volatile
  3955                           
  3956                           ;master_eight.c: 222: RC1STAbits.CREN = 1;
  3957  00C5  161D               	bsf	29,4	;volatile
  3958                           
  3959                           ;master_eight.c: 223: mainReceivedDataPosition=0;
  3960  00C6  0020               	movlb	0	; select bank0
  3961  00C7  01DE               	clrf	_mainReceivedDataPosition
  3962  00C8  01DF               	clrf	_mainReceivedDataPosition+1
  3963                           
  3964                           ;master_eight.c: 225: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='X';
  3965  00C9  3045               	movlw	69
  3966  00CA  00FA               	movwf	??_isr
  3967  00CB  087A               	movf	??_isr,w
  3968  00CC  00F1               	movwf	_ErrorNames
  3969  00CD  3052               	movlw	82
  3970  00CE  00FA               	movwf	??_isr
  3971  00CF  087A               	movf	??_isr,w
  3972  00D0  00F2               	movwf	_ErrorNames+1
  3973  00D1  3052               	movlw	82
  3974  00D2  00FA               	movwf	??_isr
  3975  00D3  087A               	movf	??_isr,w
  3976  00D4  00F3               	movwf	_ErrorNames+2
  3977  00D5  3058               	movlw	88
  3978  00D6  00FA               	movwf	??_isr
  3979  00D7  087A               	movf	??_isr,w
  3980  00D8  00F4               	movwf	_ErrorNames+3
  3981                           
  3982                           ;master_eight.c: 226: errorsISR(ErrorNames);
  3983  00D9  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3984  00DA  3187  2790  3180   	fcall	_errorsISR
  3985  00DD                     i1l2564:	
  3986                           
  3987                           ;master_eight.c: 227: }
  3988                           ;master_eight.c: 228: }
  3989                           ;master_eight.c: 230: if(PIE3bits.TMR3IE==1 && PIR3bits.TMR3IF==1)
  3990  00DD  0021               	movlb	1	; select bank1
  3991  00DE  1C13               	btfss	19,0	;volatile
  3992  00DF  28E7               	goto	i1l240
  3993  00E0  0020               	movlb	0	; select bank0
  3994  00E1  1C13               	btfss	19,0	;volatile
  3995  00E2  28E7               	goto	i1l240
  3996                           
  3997                           ;master_eight.c: 231: {
  3998                           ;master_eight.c: 232: PIR3bits.TMR3IF=0;
  3999  00E3  1013               	bcf	19,0	;volatile
  4000                           
  4001                           ;master_eight.c: 233: PORTEbits.RE5 = 1;
  4002  00E4  1690               	bsf	16,5	;volatile
  4003                           
  4004                           ;master_eight.c: 234: T3CONbits.TMR3ON=0;
  4005  00E5  0028               	movlb	8	; select bank8
  4006  00E6  1013               	bcf	19,0	;volatile
  4007  00E7                     i1l240:	
  4008                           
  4009                           ;master_eight.c: 236: }
  4010                           ;master_eight.c: 240: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  4011  00E7  0021               	movlb	1	; select bank1
  4012  00E8  1C11               	btfss	17,0	;volatile
  4013  00E9  28F7               	goto	i1l2580
  4014  00EA  0020               	movlb	0	; select bank0
  4015  00EB  1C11               	btfss	17,0	;volatile
  4016  00EC  28F7               	goto	i1l2580
  4017                           
  4018                           ;master_eight.c: 241: {
  4019                           ;master_eight.c: 242: PIR1bits.TMR1IF=0;
  4020  00ED  1011               	bcf	17,0	;volatile
  4021                           
  4022                           ;master_eight.c: 244: PORTEbits.RE5 = 0;
  4023  00EE  1290               	bcf	16,5	;volatile
  4024                           
  4025                           ;master_eight.c: 245: TMR3H=0xFF;
  4026  00EF  30FF               	movlw	255
  4027  00F0  0028               	movlb	8	; select bank8
  4028  00F1  0092               	movwf	18	;volatile
  4029                           
  4030                           ;master_eight.c: 246: TMR3L=0xD8;
  4031  00F2  30D8               	movlw	216
  4032  00F3  0091               	movwf	17	;volatile
  4033                           
  4034                           ;master_eight.c: 247: T3CONbits.TMR3ON = 1;
  4035  00F4  1413               	bsf	19,0	;volatile
  4036                           
  4037                           ;master_eight.c: 248: T1CONbits.TMR1ON = 0;
  4038  00F5  0020               	movlb	0	; select bank0
  4039  00F6  1018               	bcf	24,0	;volatile
  4040  00F7                     i1l2580:	
  4041                           
  4042                           ;master_eight.c: 249: }
  4043                           ;master_eight.c: 252: if(CCP9IF){
  4044  00F7  0020               	movlb	0	; select bank0
  4045  00F8  1B14               	btfsc	20,6	;volatile
  4046                           
  4047                           ;master_eight.c: 253: if(CCP9IF == 1){
  4048  00F9  1F14               	btfss	20,6	;volatile
  4049  00FA  2A9B               	goto	i1l388
  4050                           
  4051                           ;master_eight.c: 254: CCP9IF=0;
  4052  00FB  1314               	bcf	20,6	;volatile
  4053                           
  4054                           ;master_eight.c: 255: if(start_PWM_Generation_in_ISR_FLAG == 1){
  4055  00FC  0356               	decf	_start_PWM_Generation_in_ISR_FLAG,w
  4056  00FD  0457               	iorwf	_start_PWM_Generation_in_ISR_FLAG+1,w
  4057  00FE  1903               	btfsc	3,2
  4058  00FF  2A8E               	goto	i1l3022
  4059  0100  2A9B               	goto	i1l388
  4060  0101                     i1l2590:	
  4061                           ;master_eight.c: 262: {
  4062                           ;master_eight.c: 263: case '0':
  4063                           
  4064                           ;master_eight.c: 261: switch(levelofDimmer_LSB)
  4065                           
  4066                           ;master_eight.c: 258: {
  4067                           ;master_eight.c: 259: case '0':
  4068                           
  4069                           ;master_eight.c: 257: switch(levelofDimmer_MSB)
  4070                           
  4071                           
  4072                           ;master_eight.c: 264: TMR1H=0x7B;
  4073  0101  307B               	movlw	123
  4074  0102  2A19               	goto	L34
  4075  0103                     i1l2594:	
  4076                           ;master_eight.c: 269: case '1':
  4077                           
  4078                           ;master_eight.c: 268: break;
  4079                           
  4080                           ;master_eight.c: 266: T1CONbits.TMR1ON = 1;
  4081                           
  4082                           ;master_eight.c: 265: TMR1L=0x30;
  4083                           
  4084                           
  4085                           ;master_eight.c: 270: TMR1H=0x7C;
  4086  0103  307C               	movlw	124
  4087  0104  2A1D               	goto	L35
  4088  0105                     i1l2598:	
  4089                           ;master_eight.c: 275: case '2':
  4090                           
  4091                           ;master_eight.c: 274: break;
  4092                           
  4093                           ;master_eight.c: 272: T1CONbits.TMR1ON = 1;
  4094                           
  4095                           ;master_eight.c: 271: TMR1L=0xC0;
  4096                           
  4097                           
  4098                           ;master_eight.c: 276: TMR1H=0x7D;
  4099  0105  307D               	movlw	125
  4100  0106  0097               	movwf	23	;volatile
  4101                           
  4102                           ;master_eight.c: 277: TMR1L=0x88;
  4103  0107  3088               	movlw	136
  4104  0108  2A7B               	goto	L3
  4105  0109                     i1l2602:	
  4106                           ;master_eight.c: 280: case '3':
  4107                           
  4108                           ;master_eight.c: 279: break;
  4109                           
  4110                           ;master_eight.c: 278: T1CONbits.TMR1ON = 1;
  4111                           
  4112                           
  4113                           ;master_eight.c: 281: TMR1H=0x7F;
  4114  0109  307F               	movlw	127
  4115  010A  0097               	movwf	23	;volatile
  4116                           
  4117                           ;master_eight.c: 282: TMR1L=0x18;
  4118  010B  3018               	movlw	24
  4119  010C  2A7B               	goto	L3
  4120  010D                     i1l2606:	
  4121                           ;master_eight.c: 285: case '4':
  4122                           
  4123                           ;master_eight.c: 284: break;
  4124                           
  4125                           ;master_eight.c: 283: T1CONbits.TMR1ON = 1;
  4126                           
  4127                           
  4128                           ;master_eight.c: 286: TMR1H=0x80;
  4129  010D  3080               	movlw	128
  4130  010E  2A37               	goto	L49
  4131  010F                     i1l2610:	
  4132                           ;master_eight.c: 290: case '5':
  4133                           
  4134                           ;master_eight.c: 289: break;
  4135                           
  4136                           ;master_eight.c: 288: T1CONbits.TMR1ON = 1;
  4137                           
  4138                           ;master_eight.c: 287: TMR1L=0xA8;
  4139                           
  4140                           
  4141                           ;master_eight.c: 291: TMR1H=0x81;
  4142  010F  3081               	movlw	129
  4143  0110  2A3B               	goto	L38
  4144  0111                     i1l2614:	
  4145                           ;master_eight.c: 295: case '6':
  4146                           
  4147                           ;master_eight.c: 294: break;
  4148                           
  4149                           ;master_eight.c: 293: T1CONbits.TMR1ON = 1;
  4150                           
  4151                           ;master_eight.c: 292: TMR1L=0x70;
  4152                           
  4153                           
  4154                           ;master_eight.c: 296: TMR1H=0x83;
  4155  0111  3083               	movlw	131
  4156  0112  2A43               	goto	L39
  4157  0113                     i1l2620:	
  4158                           ;master_eight.c: 300: case '7':
  4159                           
  4160                           ;master_eight.c: 299: break;
  4161                           
  4162                           ;master_eight.c: 298: T1CONbits.TMR1ON = 1;
  4163                           
  4164                           ;master_eight.c: 297: TMR1L=0x00;
  4165                           
  4166                           
  4167                           ;master_eight.c: 301: TMR1H=0x83;
  4168  0113  3083               	movlw	131
  4169  0114  0097               	movwf	23	;volatile
  4170                           
  4171                           ;master_eight.c: 302: TMR1L=0xC8;
  4172  0115  30C8               	movlw	200
  4173  0116  2A7B               	goto	L3
  4174  0117                     i1l2624:	
  4175                           ;master_eight.c: 305: case '8':
  4176                           
  4177                           ;master_eight.c: 304: break;
  4178                           
  4179                           ;master_eight.c: 303: T1CONbits.TMR1ON = 1;
  4180                           
  4181  0117  2930               	goto	i1l2644
  4182  0118                     i1l2628:	
  4183                           ;master_eight.c: 310: case '9':
  4184                           
  4185                           ;master_eight.c: 309: break;
  4186                           
  4187                           ;master_eight.c: 308: T1CONbits.TMR1ON = 1;
  4188                           
  4189                           ;master_eight.c: 307: TMR1L=0xB0;
  4190                           
  4191                           ;master_eight.c: 306: TMR1H=0x87;
  4192                           
  4193                           
  4194                           ;master_eight.c: 311: TMR1H=0x85;
  4195  0118  3085               	movlw	133
  4196  0119  0097               	movwf	23	;volatile
  4197                           
  4198                           ;master_eight.c: 312: TMR1L=0x58;
  4199  011A  3058               	movlw	88
  4200  011B  2A7B               	goto	L3
  4201  011C                     i1l2634:	
  4202                           ;master_eight.c: 318: }
  4203                           
  4204                           ;master_eight.c: 317: break;
  4205                           
  4206                           ;master_eight.c: 316: default:
  4207                           
  4208                           ;master_eight.c: 314: break;
  4209                           
  4210                           ;master_eight.c: 313: T1CONbits.TMR1ON = 1;
  4211                           
  4212  011C  0870               	movf	_levelofDimmer_LSB,w
  4213                           
  4214                           ; Switch size 1, requested type "space"
  4215                           ; Number of cases is 10, Range of values is 48 to 57
  4216                           ; switch strategies available:
  4217                           ; Name         Instructions Cycles
  4218                           ; direct_byte           29     9 (fixed)
  4219                           ; simple_byte           31    16 (average)
  4220                           ; jumptable            263     9 (fixed)
  4221                           ;	Chosen strategy is direct_byte
  4222  011D  3ED0               	addlw	-48
  4223  011E  1C03               	skipc
  4224  011F  2A9B               	goto	i1l388
  4225  0120  0084               	movwf	4
  4226  0121  300A               	movlw	10
  4227  0122  0204               	subwf	4,w
  4228  0123  1803               	skipnc
  4229  0124  2A9B               	goto	i1l388
  4230  0125  3188               	movlp	high i1S4082
  4231  0126  3504               	lslf	4,w
  4232  0127  3E00               	addlw	low i1S4082
  4233  0128  0082               	movwf	2
  4234                           
  4235                           ;master_eight.c: 319: break;
  4236  0129  2A9B               	goto	i1l388
  4237  012A                     i1l2636:	
  4238                           ;master_eight.c: 323: {
  4239                           ;master_eight.c: 324: case '0':
  4240                           
  4241                           ;master_eight.c: 322: switch(levelofDimmer_LSB)
  4242                           
  4243                           ;master_eight.c: 320: case '1':
  4244                           
  4245                           
  4246                           ;master_eight.c: 325: TMR1H=0x86;
  4247  012A  3086               	movlw	134
  4248  012B  2A4B               	goto	L41
  4249  012C                     i1l2640:	
  4250                           ;master_eight.c: 329: case '1':
  4251                           
  4252                           ;master_eight.c: 328: break;
  4253                           
  4254                           ;master_eight.c: 327: T1CONbits.TMR1ON = 1;
  4255                           
  4256                           ;master_eight.c: 326: TMR1L=0x20;
  4257                           
  4258                           
  4259                           ;master_eight.c: 330: TMR1H=0x86;
  4260  012C  3086               	movlw	134
  4261  012D  0097               	movwf	23	;volatile
  4262                           
  4263                           ;master_eight.c: 331: TMR1L=0xE8;
  4264  012E  30E8               	movlw	232
  4265  012F  2A7B               	goto	L3
  4266  0130                     i1l2644:	
  4267                           ;master_eight.c: 334: case '2':
  4268                           
  4269                           ;master_eight.c: 333: break;
  4270                           
  4271                           ;master_eight.c: 332: T1CONbits.TMR1ON = 1;
  4272                           
  4273                           
  4274                           ;master_eight.c: 335: TMR1H=0x87;
  4275  0130  3087               	movlw	135
  4276  0131  2A4F               	goto	L42
  4277  0132                     i1l2648:	
  4278                           ;master_eight.c: 339: case '3':
  4279                           
  4280                           ;master_eight.c: 338: break;
  4281                           
  4282                           ;master_eight.c: 337: T1CONbits.TMR1ON = 1;
  4283                           
  4284                           ;master_eight.c: 336: TMR1L=0xB0;
  4285                           
  4286                           
  4287                           ;master_eight.c: 340: TMR1H=0x88;
  4288  0132  3088               	movlw	136
  4289  0133  2A53               	goto	L50
  4290  0134                     i1l2652:	
  4291                           ;master_eight.c: 344: case '4':
  4292                           
  4293                           ;master_eight.c: 343: break;
  4294                           
  4295                           ;master_eight.c: 342: T1CONbits.TMR1ON = 1;
  4296                           
  4297                           ;master_eight.c: 341: TMR1L=0x78;
  4298                           
  4299                           
  4300                           ;master_eight.c: 345: TMR1H=0x89;
  4301  0134  3089               	movlw	137
  4302  0135  2A57               	goto	L43
  4303  0136                     i1l2656:	
  4304                           ;master_eight.c: 349: case '5':
  4305                           
  4306                           ;master_eight.c: 348: break;
  4307                           
  4308                           ;master_eight.c: 347: T1CONbits.TMR1ON = 1;
  4309                           
  4310                           ;master_eight.c: 346: TMR1L=0x40;
  4311                           
  4312                           
  4313                           ;master_eight.c: 350: TMR1H=0x8A;
  4314  0136  308A               	movlw	138
  4315  0137  0097               	movwf	23	;volatile
  4316                           
  4317                           ;master_eight.c: 351: TMR1L=0x08;
  4318  0138  3008               	movlw	8
  4319  0139  2A7B               	goto	L3
  4320  013A                     i1l2660:	
  4321                           ;master_eight.c: 354: case '6':
  4322                           
  4323                           ;master_eight.c: 353: break;
  4324                           
  4325                           ;master_eight.c: 352: T1CONbits.TMR1ON = 1;
  4326                           
  4327                           
  4328                           ;master_eight.c: 355: TMR1H=0x8A;
  4329  013A  308A               	movlw	138
  4330  013B  2A69               	goto	L44
  4331  013C                     i1l2664:	
  4332                           ;master_eight.c: 359: case '7':
  4333                           
  4334                           ;master_eight.c: 358: break;
  4335                           
  4336                           ;master_eight.c: 357: T1CONbits.TMR1ON = 1;
  4337                           
  4338                           ;master_eight.c: 356: TMR1L=0xD0;
  4339                           
  4340                           
  4341                           ;master_eight.c: 360: TMR1H=0x8B;
  4342  013C  308B               	movlw	139
  4343  013D  0097               	movwf	23	;volatile
  4344                           
  4345                           ;master_eight.c: 361: TMR1L=0x98;
  4346  013E  3098               	movlw	152
  4347  013F  2A7B               	goto	L3
  4348  0140                     i1l2668:	
  4349                           ;master_eight.c: 364: case '8':
  4350                           
  4351                           ;master_eight.c: 363: break;
  4352                           
  4353                           ;master_eight.c: 362: T1CONbits.TMR1ON = 1;
  4354                           
  4355                           
  4356                           ;master_eight.c: 365: TMR1H=0x8C;
  4357  0140  308C               	movlw	140
  4358  0141  2A6D               	goto	L45
  4359  0142                     i1l2672:	
  4360                           ;master_eight.c: 369: case '9':
  4361                           
  4362                           ;master_eight.c: 368: break;
  4363                           
  4364                           ;master_eight.c: 367: T1CONbits.TMR1ON = 1;
  4365                           
  4366                           ;master_eight.c: 366: TMR1L=0x60;
  4367                           
  4368                           
  4369                           ;master_eight.c: 370: TMR1H=0x8D;
  4370  0142  308D               	movlw	141
  4371  0143  0097               	movwf	23	;volatile
  4372                           
  4373                           ;master_eight.c: 371: TMR1L=0x28;
  4374  0144  3028               	movlw	40
  4375  0145  2A7B               	goto	L3
  4376  0146                     i1l2678:	
  4377                           ;master_eight.c: 377: }
  4378                           
  4379                           ;master_eight.c: 376: break;
  4380                           
  4381                           ;master_eight.c: 375: default:
  4382                           
  4383                           ;master_eight.c: 373: break;
  4384                           
  4385                           ;master_eight.c: 372: T1CONbits.TMR1ON = 1;
  4386                           
  4387  0146  0870               	movf	_levelofDimmer_LSB,w
  4388                           
  4389                           ; Switch size 1, requested type "space"
  4390                           ; Number of cases is 10, Range of values is 48 to 57
  4391                           ; switch strategies available:
  4392                           ; Name         Instructions Cycles
  4393                           ; direct_byte           29     9 (fixed)
  4394                           ; simple_byte           31    16 (average)
  4395                           ; jumptable            263     9 (fixed)
  4396                           ;	Chosen strategy is direct_byte
  4397  0147  3ED0               	addlw	-48
  4398  0148  1C03               	skipc
  4399  0149  2A9B               	goto	i1l388
  4400  014A  0084               	movwf	4
  4401  014B  300A               	movlw	10
  4402  014C  0204               	subwf	4,w
  4403  014D  1803               	skipnc
  4404  014E  2A9B               	goto	i1l388
  4405  014F  3188               	movlp	high i1S4084
  4406  0150  3504               	lslf	4,w
  4407  0151  3E14               	addlw	low i1S4084
  4408  0152  0082               	movwf	2
  4409                           
  4410                           ;master_eight.c: 378: break;
  4411  0153  2A9B               	goto	i1l388
  4412  0154                     i1l2680:	
  4413                           ;master_eight.c: 382: {
  4414                           ;master_eight.c: 383: case '0':
  4415                           
  4416                           ;master_eight.c: 381: switch(levelofDimmer_LSB)
  4417                           
  4418                           ;master_eight.c: 379: case '2':
  4419                           
  4420                           
  4421                           ;master_eight.c: 384: TMR1H=0x8D;
  4422  0154  308D               	movlw	141
  4423  0155  2A71               	goto	L46
  4424  0156                     i1l2684:	
  4425                           ;master_eight.c: 388: case '1':
  4426                           
  4427                           ;master_eight.c: 387: break;
  4428                           
  4429                           ;master_eight.c: 386: T1CONbits.TMR1ON = 1;
  4430                           
  4431                           ;master_eight.c: 385: TMR1L=0xF0;
  4432                           
  4433                           
  4434                           ;master_eight.c: 389: TMR1H=0x8E;
  4435  0156  308E               	movlw	142
  4436  0157  0097               	movwf	23	;volatile
  4437                           
  4438                           ;master_eight.c: 390: TMR1L=0xB8;
  4439  0158  30B8               	movlw	184
  4440  0159  2A7B               	goto	L3
  4441  015A                     i1l2688:	
  4442                           ;master_eight.c: 393: case '2':
  4443                           
  4444                           ;master_eight.c: 392: break;
  4445                           
  4446                           ;master_eight.c: 391: T1CONbits.TMR1ON = 1;
  4447                           
  4448                           
  4449                           ;master_eight.c: 394: TMR1H=0x8F;
  4450  015A  308F               	movlw	143
  4451  015B  2A75               	goto	L47
  4452  015C                     i1l2692:	
  4453                           ;master_eight.c: 398: case '3':
  4454                           
  4455                           ;master_eight.c: 397: break;
  4456                           
  4457                           ;master_eight.c: 396: T1CONbits.TMR1ON = 1;
  4458                           
  4459                           ;master_eight.c: 395: TMR1L=0x80;
  4460                           
  4461                           
  4462                           ;master_eight.c: 399: TMR1H=0x90;
  4463  015C  3090               	movlw	144
  4464  015D  0097               	movwf	23	;volatile
  4465                           
  4466                           ;master_eight.c: 400: TMR1L=0x48;
  4467  015E  3048               	movlw	72
  4468  015F  2A7B               	goto	L3
  4469  0160                     i1l2696:	
  4470                           ;master_eight.c: 403: case '4':
  4471                           
  4472                           ;master_eight.c: 402: break;
  4473                           
  4474                           ;master_eight.c: 401: T1CONbits.TMR1ON = 1;
  4475                           
  4476                           
  4477                           ;master_eight.c: 404: TMR1H=0x91;
  4478  0160  3091               	movlw	145
  4479  0161  2A79               	goto	L17
  4480  0162                     i1l2700:	
  4481                           ;master_eight.c: 408: case '5':
  4482                           
  4483                           ;master_eight.c: 407: break;
  4484                           
  4485                           ;master_eight.c: 406: T1CONbits.TMR1ON = 1;
  4486                           
  4487                           ;master_eight.c: 405: TMR1L=0x10;
  4488                           
  4489                           
  4490                           ;master_eight.c: 409: TMR1H=0x91;
  4491  0162  3091               	movlw	145
  4492  0163  0097               	movwf	23	;volatile
  4493                           
  4494                           ;master_eight.c: 410: TMR1L=0xD8;
  4495  0164  30D8               	movlw	216
  4496  0165  2A7B               	goto	L3
  4497  0166                     i1l2704:	
  4498                           ;master_eight.c: 413: case '6':
  4499                           
  4500                           ;master_eight.c: 412: break;
  4501                           
  4502                           ;master_eight.c: 411: T1CONbits.TMR1ON = 1;
  4503                           
  4504                           
  4505                           ;master_eight.c: 414: TMR1H=0x92;
  4506  0166  3092               	movlw	146
  4507  0167  2A15               	goto	L33
  4508  0168                     i1l2708:	
  4509                           ;master_eight.c: 418: case '7':
  4510                           
  4511                           ;master_eight.c: 417: break;
  4512                           
  4513                           ;master_eight.c: 416: T1CONbits.TMR1ON = 1;
  4514                           
  4515                           ;master_eight.c: 415: TMR1L=0xA0;
  4516                           
  4517                           
  4518                           ;master_eight.c: 419: TMR1H=0x93;
  4519  0168  3093               	movlw	147
  4520  0169  0097               	movwf	23	;volatile
  4521                           
  4522                           ;master_eight.c: 420: TMR1L=0x68;
  4523  016A  3068               	movlw	104
  4524  016B  2A7B               	goto	L3
  4525  016C                     i1l2712:	
  4526                           ;master_eight.c: 423: case '8':
  4527                           
  4528                           ;master_eight.c: 422: break;
  4529                           
  4530                           ;master_eight.c: 421: T1CONbits.TMR1ON = 1;
  4531                           
  4532                           
  4533                           ;master_eight.c: 424: TMR1H=0x94;
  4534  016C  3094               	movlw	148
  4535  016D  2A19               	goto	L34
  4536  016E                     i1l2716:	
  4537                           ;master_eight.c: 428: case '9':
  4538                           
  4539                           ;master_eight.c: 427: break;
  4540                           
  4541                           ;master_eight.c: 426: T1CONbits.TMR1ON = 1;
  4542                           
  4543                           ;master_eight.c: 425: TMR1L=0x30;
  4544                           
  4545                           
  4546                           ;master_eight.c: 429: TMR1H=0x94;
  4547  016E  3094               	movlw	148
  4548  016F  0097               	movwf	23	;volatile
  4549                           
  4550                           ;master_eight.c: 430: TMR1L=0xF8;
  4551  0170  30F8               	movlw	248
  4552  0171  2A7B               	goto	L3
  4553  0172                     i1l2722:	
  4554                           ;master_eight.c: 436: }
  4555                           
  4556                           ;master_eight.c: 435: break;
  4557                           
  4558                           ;master_eight.c: 434: default:
  4559                           
  4560                           ;master_eight.c: 432: break;
  4561                           
  4562                           ;master_eight.c: 431: T1CONbits.TMR1ON = 1;
  4563                           
  4564  0172  0870               	movf	_levelofDimmer_LSB,w
  4565                           
  4566                           ; Switch size 1, requested type "space"
  4567                           ; Number of cases is 10, Range of values is 48 to 57
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; direct_byte           29     9 (fixed)
  4571                           ; simple_byte           31    16 (average)
  4572                           ; jumptable            263     9 (fixed)
  4573                           ;	Chosen strategy is direct_byte
  4574  0173  3ED0               	addlw	-48
  4575  0174  1C03               	skipc
  4576  0175  2A9B               	goto	i1l388
  4577  0176  0084               	movwf	4
  4578  0177  300A               	movlw	10
  4579  0178  0204               	subwf	4,w
  4580  0179  1803               	skipnc
  4581  017A  2A9B               	goto	i1l388
  4582  017B  3188               	movlp	high i1S4086
  4583  017C  3504               	lslf	4,w
  4584  017D  3E28               	addlw	low i1S4086
  4585  017E  0082               	movwf	2
  4586                           
  4587                           ;master_eight.c: 437: break;
  4588  017F  2A9B               	goto	i1l388
  4589  0180                     i1l2724:	
  4590                           ;master_eight.c: 441: {
  4591                           ;master_eight.c: 442: case '0':
  4592                           
  4593                           ;master_eight.c: 440: switch(levelofDimmer_LSB)
  4594                           
  4595                           ;master_eight.c: 438: case '3':
  4596                           
  4597                           
  4598                           ;master_eight.c: 443: TMR1H=0x95;
  4599  0180  3095               	movlw	149
  4600  0181  2A1D               	goto	L35
  4601  0182                     i1l2728:	
  4602                           ;master_eight.c: 447: case '1':
  4603                           
  4604                           ;master_eight.c: 446: break;
  4605                           
  4606                           ;master_eight.c: 445: T1CONbits.TMR1ON = 1;
  4607                           
  4608                           ;master_eight.c: 444: TMR1L=0xC0;
  4609                           
  4610                           
  4611                           ;master_eight.c: 448: TMR1H=0x97;
  4612  0182  3097               	movlw	151
  4613  0183  2A21               	goto	L36
  4614  0184                     i1l2732:	
  4615                           ;master_eight.c: 452: case '2':
  4616                           
  4617                           ;master_eight.c: 451: break;
  4618                           
  4619                           ;master_eight.c: 450: T1CONbits.TMR1ON = 1;
  4620                           
  4621                           ;master_eight.c: 449: TMR1L=0x50;
  4622                           
  4623                           
  4624                           ;master_eight.c: 453: TMR1H=0x98;
  4625  0184  3098               	movlw	152
  4626  0185  2A33               	goto	L37
  4627  0186                     i1l2736:	
  4628                           ;master_eight.c: 457: case '3':
  4629                           
  4630                           ;master_eight.c: 456: break;
  4631                           
  4632                           ;master_eight.c: 455: T1CONbits.TMR1ON = 1;
  4633                           
  4634                           ;master_eight.c: 454: TMR1L=0xE0;
  4635                           
  4636                           
  4637                           ;master_eight.c: 458: TMR1H=0x9A;
  4638  0186  309A               	movlw	154
  4639  0187  2A3B               	goto	L38
  4640  0188                     i1l2740:	
  4641                           ;master_eight.c: 462: case '4':
  4642                           
  4643                           ;master_eight.c: 461: break;
  4644                           
  4645                           ;master_eight.c: 460: T1CONbits.TMR1ON = 1;
  4646                           
  4647                           ;master_eight.c: 459: TMR1L=0x70;
  4648                           
  4649                           
  4650                           ;master_eight.c: 463: TMR1H=0x9C;
  4651  0188  309C               	movlw	156
  4652  0189  2A43               	goto	L39
  4653  018A                     i1l2746:	
  4654                           ;master_eight.c: 467: case '5':
  4655                           
  4656                           ;master_eight.c: 466: break;
  4657                           
  4658                           ;master_eight.c: 465: T1CONbits.TMR1ON = 1;
  4659                           
  4660                           ;master_eight.c: 464: TMR1L=0x00;
  4661                           
  4662                           
  4663                           ;master_eight.c: 468: TMR1H=0x9D;
  4664  018A  309D               	movlw	157
  4665  018B  2A47               	goto	L40
  4666  018C                     i1l2750:	
  4667                           ;master_eight.c: 472: case '6':
  4668                           
  4669                           ;master_eight.c: 471: break;
  4670                           
  4671                           ;master_eight.c: 470: T1CONbits.TMR1ON = 1;
  4672                           
  4673                           ;master_eight.c: 469: TMR1L=0x90;
  4674                           
  4675                           
  4676                           ;master_eight.c: 473: TMR1H=0x9F;
  4677  018C  309F               	movlw	159
  4678  018D  2A4B               	goto	L41
  4679  018E                     i1l2754:	
  4680                           ;master_eight.c: 477: case '7':
  4681                           
  4682                           ;master_eight.c: 476: break;
  4683                           
  4684                           ;master_eight.c: 475: T1CONbits.TMR1ON = 1;
  4685                           
  4686                           ;master_eight.c: 474: TMR1L=0x20;
  4687                           
  4688                           
  4689                           ;master_eight.c: 478: TMR1H=0xA0;
  4690  018E  30A0               	movlw	160
  4691  018F  2A4F               	goto	L42
  4692  0190                     i1l2758:	
  4693                           ;master_eight.c: 482: case '8':
  4694                           
  4695                           ;master_eight.c: 481: break;
  4696                           
  4697                           ;master_eight.c: 480: T1CONbits.TMR1ON = 1;
  4698                           
  4699                           ;master_eight.c: 479: TMR1L=0xB0;
  4700                           
  4701                           
  4702                           ;master_eight.c: 483: TMR1H=0xA2;
  4703  0190  30A2               	movlw	162
  4704  0191  2A57               	goto	L43
  4705  0192                     i1l2762:	
  4706                           ;master_eight.c: 487: case '9':
  4707                           
  4708                           ;master_eight.c: 486: break;
  4709                           
  4710                           ;master_eight.c: 485: T1CONbits.TMR1ON = 1;
  4711                           
  4712                           ;master_eight.c: 484: TMR1L=0x40;
  4713                           
  4714                           
  4715                           ;master_eight.c: 488: TMR1H=0xA3;
  4716  0192  30A3               	movlw	163
  4717  0193  2A69               	goto	L44
  4718  0194                     i1l2768:	
  4719                           ;master_eight.c: 494: }
  4720                           
  4721                           ;master_eight.c: 493: break;
  4722                           
  4723                           ;master_eight.c: 492: default:
  4724                           
  4725                           ;master_eight.c: 491: break;
  4726                           
  4727                           ;master_eight.c: 490: T1CONbits.TMR1ON = 1;
  4728                           
  4729                           ;master_eight.c: 489: TMR1L=0xD0;
  4730                           
  4731  0194  0870               	movf	_levelofDimmer_LSB,w
  4732                           
  4733                           ; Switch size 1, requested type "space"
  4734                           ; Number of cases is 10, Range of values is 48 to 57
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; direct_byte           29     9 (fixed)
  4738                           ; simple_byte           31    16 (average)
  4739                           ; jumptable            263     9 (fixed)
  4740                           ;	Chosen strategy is direct_byte
  4741  0195  3ED0               	addlw	-48
  4742  0196  1C03               	skipc
  4743  0197  2A9B               	goto	i1l388
  4744  0198  0084               	movwf	4
  4745  0199  300A               	movlw	10
  4746  019A  0204               	subwf	4,w
  4747  019B  1803               	skipnc
  4748  019C  2A9B               	goto	i1l388
  4749  019D  3188               	movlp	high i1S4088
  4750  019E  3504               	lslf	4,w
  4751  019F  3E3C               	addlw	low i1S4088
  4752  01A0  0082               	movwf	2
  4753                           
  4754                           ;master_eight.c: 495: break;
  4755  01A1  2A9B               	goto	i1l388
  4756  01A2                     i1l2770:	
  4757                           ;master_eight.c: 499: {
  4758                           ;master_eight.c: 500: case '0':
  4759                           
  4760                           ;master_eight.c: 498: switch(levelofDimmer_LSB)
  4761                           
  4762                           ;master_eight.c: 496: case '4':
  4763                           
  4764                           
  4765                           ;master_eight.c: 501: TMR1H=0xA5;
  4766  01A2  30A5               	movlw	165
  4767  01A3  2A6D               	goto	L45
  4768  01A4                     i1l2774:	
  4769                           ;master_eight.c: 505: case '1':
  4770                           
  4771                           ;master_eight.c: 504: break;
  4772                           
  4773                           ;master_eight.c: 503: T1CONbits.TMR1ON = 1;
  4774                           
  4775                           ;master_eight.c: 502: TMR1L=0x60;
  4776                           
  4777                           
  4778                           ;master_eight.c: 506: TMR1H=0xA6;
  4779  01A4  30A6               	movlw	166
  4780  01A5  2A71               	goto	L46
  4781  01A6                     i1l2778:	
  4782                           ;master_eight.c: 510: case '2':
  4783                           
  4784                           ;master_eight.c: 509: break;
  4785                           
  4786                           ;master_eight.c: 508: T1CONbits.TMR1ON = 1;
  4787                           
  4788                           ;master_eight.c: 507: TMR1L=0xF0;
  4789                           
  4790                           
  4791                           ;master_eight.c: 511: TMR1H=0xA8;
  4792  01A6  30A8               	movlw	168
  4793  01A7  2A75               	goto	L47
  4794  01A8                     i1l2782:	
  4795                           ;master_eight.c: 515: case '3':
  4796                           
  4797                           ;master_eight.c: 514: break;
  4798                           
  4799                           ;master_eight.c: 513: T1CONbits.TMR1ON = 1;
  4800                           
  4801                           ;master_eight.c: 512: TMR1L=0x80;
  4802                           
  4803                           
  4804                           ;master_eight.c: 516: TMR1H=0xAA;
  4805  01A8  30AA               	movlw	170
  4806  01A9  2A79               	goto	L17
  4807  01AA                     i1l2786:	
  4808                           ;master_eight.c: 520: case '4':
  4809                           
  4810                           ;master_eight.c: 519: break;
  4811                           
  4812                           ;master_eight.c: 518: T1CONbits.TMR1ON = 1;
  4813                           
  4814                           ;master_eight.c: 517: TMR1L=0x10;
  4815                           
  4816                           
  4817                           ;master_eight.c: 521: TMR1H=0xAB;
  4818  01AA  30AB               	movlw	171
  4819  01AB  2A15               	goto	L33
  4820  01AC                     i1l2790:	
  4821                           ;master_eight.c: 525: case '5':
  4822                           
  4823                           ;master_eight.c: 524: break;
  4824                           
  4825                           ;master_eight.c: 523: T1CONbits.TMR1ON = 1;
  4826                           
  4827                           ;master_eight.c: 522: TMR1L=0xA0;
  4828                           
  4829                           
  4830                           ;master_eight.c: 526: TMR1H=0xAD;
  4831  01AC  30AD               	movlw	173
  4832  01AD  2A19               	goto	L34
  4833  01AE                     i1l2794:	
  4834                           ;master_eight.c: 530: case '6':
  4835                           
  4836                           ;master_eight.c: 529: break;
  4837                           
  4838                           ;master_eight.c: 528: T1CONbits.TMR1ON = 1;
  4839                           
  4840                           ;master_eight.c: 527: TMR1L=0x30;
  4841                           
  4842                           
  4843                           ;master_eight.c: 531: TMR1H=0xAE;
  4844  01AE  30AE               	movlw	174
  4845  01AF  2A1D               	goto	L35
  4846  01B0                     i1l2798:	
  4847                           ;master_eight.c: 535: case '7':
  4848                           
  4849                           ;master_eight.c: 534: break;
  4850                           
  4851                           ;master_eight.c: 533: T1CONbits.TMR1ON = 1;
  4852                           
  4853                           ;master_eight.c: 532: TMR1L=0xC0;
  4854                           
  4855                           
  4856                           ;master_eight.c: 536: TMR1H=0xB0;
  4857  01B0  30B0               	movlw	176
  4858  01B1  2A21               	goto	L36
  4859  01B2                     i1l2802:	
  4860                           ;master_eight.c: 540: case '8':
  4861                           
  4862                           ;master_eight.c: 539: break;
  4863                           
  4864                           ;master_eight.c: 538: T1CONbits.TMR1ON = 1;
  4865                           
  4866                           ;master_eight.c: 537: TMR1L=0x50;
  4867                           
  4868                           
  4869                           ;master_eight.c: 541: TMR1H=0xB1;
  4870  01B2  30B1               	movlw	177
  4871  01B3  2A33               	goto	L37
  4872  01B4                     i1l2806:	
  4873                           ;master_eight.c: 545: case '9':
  4874                           
  4875                           ;master_eight.c: 544: break;
  4876                           
  4877                           ;master_eight.c: 543: T1CONbits.TMR1ON = 1;
  4878                           
  4879                           ;master_eight.c: 542: TMR1L=0xE0;
  4880                           
  4881                           
  4882                           ;master_eight.c: 546: TMR1H=0xB3;
  4883  01B4  30B3               	movlw	179
  4884  01B5  2A3B               	goto	L38
  4885  01B6                     i1l2812:	
  4886                           ;master_eight.c: 552: }
  4887                           
  4888                           ;master_eight.c: 551: break;
  4889                           
  4890                           ;master_eight.c: 550: default:
  4891                           
  4892                           ;master_eight.c: 549: break;
  4893                           
  4894                           ;master_eight.c: 548: T1CONbits.TMR1ON = 1;
  4895                           
  4896                           ;master_eight.c: 547: TMR1L=0x70;
  4897                           
  4898  01B6  0870               	movf	_levelofDimmer_LSB,w
  4899                           
  4900                           ; Switch size 1, requested type "space"
  4901                           ; Number of cases is 10, Range of values is 48 to 57
  4902                           ; switch strategies available:
  4903                           ; Name         Instructions Cycles
  4904                           ; direct_byte           29     9 (fixed)
  4905                           ; simple_byte           31    16 (average)
  4906                           ; jumptable            263     9 (fixed)
  4907                           ;	Chosen strategy is direct_byte
  4908  01B7  3ED0               	addlw	-48
  4909  01B8  1C03               	skipc
  4910  01B9  2A9B               	goto	i1l388
  4911  01BA  0084               	movwf	4
  4912  01BB  300A               	movlw	10
  4913  01BC  0204               	subwf	4,w
  4914  01BD  1803               	skipnc
  4915  01BE  2A9B               	goto	i1l388
  4916  01BF  3188               	movlp	high i1S4090
  4917  01C0  3504               	lslf	4,w
  4918  01C1  3E50               	addlw	low i1S4090
  4919  01C2  0082               	movwf	2
  4920                           
  4921                           ;master_eight.c: 553: break;
  4922  01C3  2A9B               	goto	i1l388
  4923  01C4                     i1l2814:	
  4924                           ;master_eight.c: 557: {
  4925                           ;master_eight.c: 558: case '0':
  4926                           
  4927                           ;master_eight.c: 556: switch(levelofDimmer_LSB)
  4928                           
  4929                           ;master_eight.c: 554: case '5':
  4930                           
  4931                           
  4932                           ;master_eight.c: 559: TMR1H=0xB5;
  4933  01C4  30B5               	movlw	181
  4934  01C5  2A43               	goto	L39
  4935  01C6                     i1l2820:	
  4936                           ;master_eight.c: 563: case '1':
  4937                           
  4938                           ;master_eight.c: 562: break;
  4939                           
  4940                           ;master_eight.c: 561: T1CONbits.TMR1ON = 1;
  4941                           
  4942                           ;master_eight.c: 560: TMR1L=0x00;
  4943                           
  4944                           
  4945                           ;master_eight.c: 564: TMR1H=0xB6;
  4946  01C6  30B6               	movlw	182
  4947  01C7  2A47               	goto	L40
  4948  01C8                     i1l2824:	
  4949                           ;master_eight.c: 568: case '2':
  4950                           
  4951                           ;master_eight.c: 567: break;
  4952                           
  4953                           ;master_eight.c: 566: T1CONbits.TMR1ON = 1;
  4954                           
  4955                           ;master_eight.c: 565: TMR1L=0x90;
  4956                           
  4957                           
  4958                           ;master_eight.c: 569: TMR1H=0xB8;
  4959  01C8  30B8               	movlw	184
  4960  01C9  2A4B               	goto	L41
  4961  01CA                     i1l2828:	
  4962                           ;master_eight.c: 573: case '3':
  4963                           
  4964                           ;master_eight.c: 572: break;
  4965                           
  4966                           ;master_eight.c: 571: T1CONbits.TMR1ON = 1;
  4967                           
  4968                           ;master_eight.c: 570: TMR1L=0x20;
  4969                           
  4970                           
  4971                           ;master_eight.c: 574: TMR1H=0xB9;
  4972  01CA  30B9               	movlw	185
  4973  01CB  2A4F               	goto	L42
  4974  01CC                     i1l2832:	
  4975                           ;master_eight.c: 578: case '4':
  4976                           
  4977                           ;master_eight.c: 577: break;
  4978                           
  4979                           ;master_eight.c: 576: T1CONbits.TMR1ON = 1;
  4980                           
  4981                           ;master_eight.c: 575: TMR1L=0xB0;
  4982                           
  4983                           
  4984                           ;master_eight.c: 579: TMR1H=0xBB;
  4985  01CC  30BB               	movlw	187
  4986  01CD  2A57               	goto	L43
  4987  01CE                     i1l2836:	
  4988                           ;master_eight.c: 583: case '5':
  4989                           
  4990                           ;master_eight.c: 582: break;
  4991                           
  4992                           ;master_eight.c: 581: T1CONbits.TMR1ON = 1;
  4993                           
  4994                           ;master_eight.c: 580: TMR1L=0x40;
  4995                           
  4996                           
  4997                           ;master_eight.c: 584: TMR1H=0xBC;
  4998  01CE  30BC               	movlw	188
  4999  01CF  2A69               	goto	L44
  5000  01D0                     i1l2840:	
  5001                           ;master_eight.c: 588: case '6':
  5002                           
  5003                           ;master_eight.c: 587: break;
  5004                           
  5005                           ;master_eight.c: 586: T1CONbits.TMR1ON = 1;
  5006                           
  5007                           ;master_eight.c: 585: TMR1L=0xD0;
  5008                           
  5009                           
  5010                           ;master_eight.c: 589: TMR1H=0xBE;
  5011  01D0  30BE               	movlw	190
  5012  01D1  2A6D               	goto	L45
  5013  01D2                     i1l2844:	
  5014                           ;master_eight.c: 593: case '7':
  5015                           
  5016                           ;master_eight.c: 592: break;
  5017                           
  5018                           ;master_eight.c: 591: T1CONbits.TMR1ON = 1;
  5019                           
  5020                           ;master_eight.c: 590: TMR1L=0x60;
  5021                           
  5022                           
  5023                           ;master_eight.c: 594: TMR1H=0xBF;
  5024  01D2  30BF               	movlw	191
  5025  01D3  2A71               	goto	L46
  5026  01D4                     i1l2848:	
  5027                           ;master_eight.c: 598: case '8':
  5028                           
  5029                           ;master_eight.c: 597: break;
  5030                           
  5031                           ;master_eight.c: 596: T1CONbits.TMR1ON = 1;
  5032                           
  5033                           ;master_eight.c: 595: TMR1L=0xF0;
  5034                           
  5035                           
  5036                           ;master_eight.c: 599: TMR1H=0xC1;
  5037  01D4  30C1               	movlw	193
  5038  01D5  2A75               	goto	L47
  5039  01D6                     i1l2852:	
  5040                           ;master_eight.c: 603: case '9':
  5041                           
  5042                           ;master_eight.c: 602: break;
  5043                           
  5044                           ;master_eight.c: 601: T1CONbits.TMR1ON = 1;
  5045                           
  5046                           ;master_eight.c: 600: TMR1L=0x80;
  5047                           
  5048                           
  5049                           ;master_eight.c: 604: TMR1H=0xC3;
  5050  01D6  30C3               	movlw	195
  5051  01D7  2A79               	goto	L17
  5052  01D8                     i1l2858:	
  5053                           ;master_eight.c: 611: }
  5054                           
  5055                           ;master_eight.c: 610: break;
  5056                           
  5057                           ;master_eight.c: 609: default:
  5058                           
  5059                           ;master_eight.c: 607: break;
  5060                           
  5061                           ;master_eight.c: 606: T1CONbits.TMR1ON = 1;
  5062                           
  5063                           ;master_eight.c: 605: TMR1L=0x10;
  5064                           
  5065  01D8  0870               	movf	_levelofDimmer_LSB,w
  5066                           
  5067                           ; Switch size 1, requested type "space"
  5068                           ; Number of cases is 10, Range of values is 48 to 57
  5069                           ; switch strategies available:
  5070                           ; Name         Instructions Cycles
  5071                           ; direct_byte           29     9 (fixed)
  5072                           ; simple_byte           31    16 (average)
  5073                           ; jumptable            263     9 (fixed)
  5074                           ;	Chosen strategy is direct_byte
  5075  01D9  3ED0               	addlw	-48
  5076  01DA  1C03               	skipc
  5077  01DB  2A9B               	goto	i1l388
  5078  01DC  0084               	movwf	4
  5079  01DD  300A               	movlw	10
  5080  01DE  0204               	subwf	4,w
  5081  01DF  1803               	skipnc
  5082  01E0  2A9B               	goto	i1l388
  5083  01E1  3188               	movlp	high i1S4092
  5084  01E2  3504               	lslf	4,w
  5085  01E3  3E64               	addlw	low i1S4092
  5086  01E4  0082               	movwf	2
  5087                           
  5088                           ;master_eight.c: 612: break;
  5089  01E5  2A9B               	goto	i1l388
  5090  01E6                     i1l2860:	
  5091                           ;master_eight.c: 616: {
  5092                           ;master_eight.c: 617: case '0':
  5093                           
  5094                           ;master_eight.c: 615: switch(levelofDimmer_LSB)
  5095                           
  5096                           ;master_eight.c: 613: case '6':
  5097                           
  5098                           
  5099                           ;master_eight.c: 618: TMR1H=0xC4;
  5100  01E6  30C4               	movlw	196
  5101  01E7  2A15               	goto	L33
  5102  01E8                     i1l2864:	
  5103                           ;master_eight.c: 622: case '1':
  5104                           
  5105                           ;master_eight.c: 621: break;
  5106                           
  5107                           ;master_eight.c: 620: T1CONbits.TMR1ON = 1;
  5108                           
  5109                           ;master_eight.c: 619: TMR1L=0xA0;
  5110                           
  5111                           
  5112                           ;master_eight.c: 623: TMR1H=0xC6;
  5113  01E8  30C6               	movlw	198
  5114  01E9  2A19               	goto	L34
  5115  01EA                     i1l2868:	
  5116                           ;master_eight.c: 627: case '2':
  5117                           
  5118                           ;master_eight.c: 626: break;
  5119                           
  5120                           ;master_eight.c: 625: T1CONbits.TMR1ON = 1;
  5121                           
  5122                           ;master_eight.c: 624: TMR1L=0x30;
  5123                           
  5124                           
  5125                           ;master_eight.c: 628: TMR1H=0xC7;
  5126  01EA  30C7               	movlw	199
  5127  01EB  2A1D               	goto	L35
  5128  01EC                     i1l2872:	
  5129                           ;master_eight.c: 632: case '3':
  5130                           
  5131                           ;master_eight.c: 631: break;
  5132                           
  5133                           ;master_eight.c: 630: T1CONbits.TMR1ON = 1;
  5134                           
  5135                           ;master_eight.c: 629: TMR1L=0xC0;
  5136                           
  5137                           
  5138                           ;master_eight.c: 633: TMR1H=0xC9;
  5139  01EC  30C9               	movlw	201
  5140  01ED  2A21               	goto	L36
  5141  01EE                     i1l2876:	
  5142                           ;master_eight.c: 637: case '4':
  5143                           
  5144                           ;master_eight.c: 636: break;
  5145                           
  5146                           ;master_eight.c: 635: T1CONbits.TMR1ON = 1;
  5147                           
  5148                           ;master_eight.c: 634: TMR1L=0x50;
  5149                           
  5150                           
  5151                           ;master_eight.c: 638: TMR1H=0xCA;
  5152  01EE  30CA               	movlw	202
  5153  01EF  2A33               	goto	L37
  5154  01F0                     i1l2880:	
  5155                           ;master_eight.c: 642: case '5':
  5156                           
  5157                           ;master_eight.c: 641: break;
  5158                           
  5159                           ;master_eight.c: 640: T1CONbits.TMR1ON = 1;
  5160                           
  5161                           ;master_eight.c: 639: TMR1L=0xE0;
  5162                           
  5163                           
  5164                           ;master_eight.c: 643: TMR1H=0xCC;
  5165  01F0  30CC               	movlw	204
  5166  01F1  2A3B               	goto	L38
  5167  01F2                     i1l2884:	
  5168                           ;master_eight.c: 647: case '6':
  5169                           
  5170                           ;master_eight.c: 646: break;
  5171                           
  5172                           ;master_eight.c: 645: T1CONbits.TMR1ON = 1;
  5173                           
  5174                           ;master_eight.c: 644: TMR1L=0x70;
  5175                           
  5176                           
  5177                           ;master_eight.c: 648: TMR1H=0xCE;
  5178  01F2  30CE               	movlw	206
  5179  01F3  2A43               	goto	L39
  5180  01F4                     i1l2890:	
  5181                           ;master_eight.c: 652: case '7':
  5182                           
  5183                           ;master_eight.c: 651: break;
  5184                           
  5185                           ;master_eight.c: 650: T1CONbits.TMR1ON = 1;
  5186                           
  5187                           ;master_eight.c: 649: TMR1L=0x00;
  5188                           
  5189                           
  5190                           ;master_eight.c: 653: TMR1H=0xCF;
  5191  01F4  30CF               	movlw	207
  5192  01F5  2A47               	goto	L40
  5193  01F6                     i1l2894:	
  5194                           ;master_eight.c: 657: case '8':
  5195                           
  5196                           ;master_eight.c: 656: break;
  5197                           
  5198                           ;master_eight.c: 655: T1CONbits.TMR1ON = 1;
  5199                           
  5200                           ;master_eight.c: 654: TMR1L=0x90;
  5201                           
  5202                           
  5203                           ;master_eight.c: 658: TMR1H=0xD1;
  5204  01F6  30D1               	movlw	209
  5205  01F7  2A4B               	goto	L41
  5206  01F8                     i1l2898:	
  5207                           ;master_eight.c: 662: case '9':
  5208                           
  5209                           ;master_eight.c: 661: break;
  5210                           
  5211                           ;master_eight.c: 660: T1CONbits.TMR1ON = 1;
  5212                           
  5213                           ;master_eight.c: 659: TMR1L=0x20;
  5214                           
  5215                           
  5216                           ;master_eight.c: 663: TMR1H=0xD2;
  5217  01F8  30D2               	movlw	210
  5218  01F9  2A4F               	goto	L42
  5219  01FA                     i1l2904:	
  5220                           ;master_eight.c: 669: }
  5221                           
  5222                           ;master_eight.c: 668: break;
  5223                           
  5224                           ;master_eight.c: 667: default:
  5225                           
  5226                           ;master_eight.c: 666: break;
  5227                           
  5228                           ;master_eight.c: 665: T1CONbits.TMR1ON = 1;
  5229                           
  5230                           ;master_eight.c: 664: TMR1L=0xB0;
  5231                           
  5232  01FA  0870               	movf	_levelofDimmer_LSB,w
  5233                           
  5234                           ; Switch size 1, requested type "space"
  5235                           ; Number of cases is 10, Range of values is 48 to 57
  5236                           ; switch strategies available:
  5237                           ; Name         Instructions Cycles
  5238                           ; direct_byte           29     9 (fixed)
  5239                           ; simple_byte           31    16 (average)
  5240                           ; jumptable            263     9 (fixed)
  5241                           ;	Chosen strategy is direct_byte
  5242  01FB  3ED0               	addlw	-48
  5243  01FC  1C03               	skipc
  5244  01FD  2A9B               	goto	i1l388
  5245  01FE  0084               	movwf	4
  5246  01FF  300A               	movlw	10
  5247  0200  0204               	subwf	4,w
  5248  0201  1803               	skipnc
  5249  0202  2A9B               	goto	i1l388
  5250  0203  3188               	movlp	high i1S4094
  5251  0204  3504               	lslf	4,w
  5252  0205  3E78               	addlw	low i1S4094
  5253  0206  0082               	movwf	2
  5254                           
  5255                           ;master_eight.c: 670: break;
  5256  0207  2A9B               	goto	i1l388
  5257  0208                     i1l2906:	
  5258                           ;master_eight.c: 674: {
  5259                           ;master_eight.c: 675: case '0':
  5260                           
  5261                           ;master_eight.c: 673: switch(levelofDimmer_LSB)
  5262                           
  5263                           ;master_eight.c: 671: case '7':
  5264                           
  5265                           
  5266                           ;master_eight.c: 676: TMR1H=0xD4;
  5267  0208  30D4               	movlw	212
  5268  0209  2A57               	goto	L43
  5269  020A                     i1l2910:	
  5270                           ;master_eight.c: 680: case '1':
  5271                           
  5272                           ;master_eight.c: 679: break;
  5273                           
  5274                           ;master_eight.c: 678: T1CONbits.TMR1ON = 1;
  5275                           
  5276                           ;master_eight.c: 677: TMR1L=0x40;
  5277                           
  5278                           
  5279                           ;master_eight.c: 681: TMR1H=0xD5;
  5280  020A  30D5               	movlw	213
  5281  020B  2A69               	goto	L44
  5282  020C                     i1l2914:	
  5283                           ;master_eight.c: 685: case '2':
  5284                           
  5285                           ;master_eight.c: 684: break;
  5286                           
  5287                           ;master_eight.c: 683: T1CONbits.TMR1ON = 1;
  5288                           
  5289                           ;master_eight.c: 682: TMR1L=0xD0;
  5290                           
  5291                           
  5292                           ;master_eight.c: 686: TMR1H=0xD7;
  5293  020C  30D7               	movlw	215
  5294  020D  2A6D               	goto	L45
  5295  020E                     i1l2918:	
  5296                           ;master_eight.c: 690: case '3':
  5297                           
  5298                           ;master_eight.c: 689: break;
  5299                           
  5300                           ;master_eight.c: 688: T1CONbits.TMR1ON = 1;
  5301                           
  5302                           ;master_eight.c: 687: TMR1L=0x60;
  5303                           
  5304                           
  5305                           ;master_eight.c: 691: TMR1H=0xD8;
  5306  020E  30D8               	movlw	216
  5307  020F  2A71               	goto	L46
  5308  0210                     i1l2922:	
  5309                           ;master_eight.c: 695: case '4':
  5310                           
  5311                           ;master_eight.c: 694: break;
  5312                           
  5313                           ;master_eight.c: 693: T1CONbits.TMR1ON = 1;
  5314                           
  5315                           ;master_eight.c: 692: TMR1L=0xF0;
  5316                           
  5317                           
  5318                           ;master_eight.c: 696: TMR1H=0xDA;
  5319  0210  30DA               	movlw	218
  5320  0211  2A75               	goto	L47
  5321  0212                     i1l2926:	
  5322                           ;master_eight.c: 700: case '5':
  5323                           
  5324                           ;master_eight.c: 699: break;
  5325                           
  5326                           ;master_eight.c: 698: T1CONbits.TMR1ON = 1;
  5327                           
  5328                           ;master_eight.c: 697: TMR1L=0x80;
  5329                           
  5330                           
  5331                           ;master_eight.c: 701: TMR1H=0xDC;
  5332  0212  30DC               	movlw	220
  5333  0213  2A79               	goto	L17
  5334  0214                     i1l2930:	
  5335                           ;master_eight.c: 705: case '6':
  5336                           
  5337                           ;master_eight.c: 704: break;
  5338                           
  5339                           ;master_eight.c: 703: T1CONbits.TMR1ON = 1;
  5340                           
  5341                           ;master_eight.c: 702: TMR1L=0x10;
  5342                           
  5343                           
  5344                           ;master_eight.c: 706: TMR1H=0xDD;
  5345  0214  30DD               	movlw	221
  5346  0215                     L33:	
  5347  0215  0097               	movwf	23	;volatile
  5348                           
  5349                           ;master_eight.c: 707: TMR1L=0xA0;
  5350  0216  30A0               	movlw	160
  5351  0217  2A7B               	goto	L3
  5352  0218                     i1l2934:	
  5353                           ;master_eight.c: 710: case '7':
  5354                           
  5355                           ;master_eight.c: 709: break;
  5356                           
  5357                           ;master_eight.c: 708: T1CONbits.TMR1ON = 1;
  5358                           
  5359                           
  5360                           ;master_eight.c: 711: TMR1H=0xDF;
  5361  0218  30DF               	movlw	223
  5362  0219                     L34:	
  5363  0219  0097               	movwf	23	;volatile
  5364                           
  5365                           ;master_eight.c: 712: TMR1L=0x30;
  5366  021A  3030               	movlw	48
  5367  021B  2A7B               	goto	L3
  5368  021C                     i1l2938:	
  5369                           ;master_eight.c: 715: case '8':
  5370                           
  5371                           ;master_eight.c: 714: break;
  5372                           
  5373                           ;master_eight.c: 713: T1CONbits.TMR1ON = 1;
  5374                           
  5375                           
  5376                           ;master_eight.c: 716: TMR1H=0xE0;
  5377  021C  30E0               	movlw	224
  5378  021D                     L35:	
  5379  021D  0097               	movwf	23	;volatile
  5380                           
  5381                           ;master_eight.c: 717: TMR1L=0xC0;
  5382  021E  30C0               	movlw	192
  5383  021F  2A7B               	goto	L3
  5384  0220                     i1l2942:	
  5385                           ;master_eight.c: 720: case '9':
  5386                           
  5387                           ;master_eight.c: 719: break;
  5388                           
  5389                           ;master_eight.c: 718: T1CONbits.TMR1ON = 1;
  5390                           
  5391                           
  5392                           ;master_eight.c: 721: TMR1H=0xE2;
  5393  0220  30E2               	movlw	226
  5394  0221                     L36:	
  5395  0221  0097               	movwf	23	;volatile
  5396                           
  5397                           ;master_eight.c: 722: TMR1L=0x50;
  5398  0222  3050               	movlw	80
  5399  0223  2A7B               	goto	L3
  5400  0224                     i1l2948:	
  5401                           ;master_eight.c: 727: }
  5402                           
  5403                           ;master_eight.c: 726: break;
  5404                           
  5405                           ;master_eight.c: 725: default:
  5406                           
  5407                           ;master_eight.c: 724: break;
  5408                           
  5409                           ;master_eight.c: 723: T1CONbits.TMR1ON = 1;
  5410                           
  5411  0224  0870               	movf	_levelofDimmer_LSB,w
  5412                           
  5413                           ; Switch size 1, requested type "space"
  5414                           ; Number of cases is 10, Range of values is 48 to 57
  5415                           ; switch strategies available:
  5416                           ; Name         Instructions Cycles
  5417                           ; direct_byte           29     9 (fixed)
  5418                           ; simple_byte           31    16 (average)
  5419                           ; jumptable            263     9 (fixed)
  5420                           ;	Chosen strategy is direct_byte
  5421  0225  3ED0               	addlw	-48
  5422  0226  1C03               	skipc
  5423  0227  2A9B               	goto	i1l388
  5424  0228  0084               	movwf	4
  5425  0229  300A               	movlw	10
  5426  022A  0204               	subwf	4,w
  5427  022B  1803               	skipnc
  5428  022C  2A9B               	goto	i1l388
  5429  022D  3188               	movlp	high i1S4096
  5430  022E  3504               	lslf	4,w
  5431  022F  3E8C               	addlw	low i1S4096
  5432  0230  0082               	movwf	2
  5433                           
  5434                           ;master_eight.c: 728: break;
  5435  0231  2A9B               	goto	i1l388
  5436  0232                     i1l2950:	
  5437                           ;master_eight.c: 732: {
  5438                           ;master_eight.c: 733: case '0':
  5439                           
  5440                           ;master_eight.c: 731: switch(levelofDimmer_LSB)
  5441                           
  5442                           ;master_eight.c: 729: case '8':
  5443                           
  5444                           
  5445                           ;master_eight.c: 734: TMR1H=0xE3;
  5446  0232  30E3               	movlw	227
  5447  0233                     L37:	
  5448  0233  0097               	movwf	23	;volatile
  5449                           
  5450                           ;master_eight.c: 735: TMR1L=0xE0;
  5451  0234  30E0               	movlw	224
  5452  0235  2A7B               	goto	L3
  5453  0236                     i1l2954:	
  5454                           ;master_eight.c: 738: case '1':
  5455                           
  5456                           ;master_eight.c: 737: break;
  5457                           
  5458                           ;master_eight.c: 736: T1CONbits.TMR1ON = 1;
  5459                           
  5460                           
  5461                           ;master_eight.c: 739: TMR1H=0xE4;
  5462  0236  30E4               	movlw	228
  5463  0237                     L49:	
  5464  0237  0097               	movwf	23	;volatile
  5465                           
  5466                           ;master_eight.c: 740: TMR1L=0xA8;
  5467  0238  30A8               	movlw	168
  5468  0239  2A7B               	goto	L3
  5469  023A                     i1l2958:	
  5470                           ;master_eight.c: 743: case '2':
  5471                           
  5472                           ;master_eight.c: 742: break;
  5473                           
  5474                           ;master_eight.c: 741: T1CONbits.TMR1ON = 1;
  5475                           
  5476                           
  5477                           ;master_eight.c: 744: TMR1H=0xE5;
  5478  023A  30E5               	movlw	229
  5479  023B                     L38:	
  5480  023B  0097               	movwf	23	;volatile
  5481                           
  5482                           ;master_eight.c: 745: TMR1L=0x70;
  5483  023C  3070               	movlw	112
  5484  023D  2A7B               	goto	L3
  5485  023E                     i1l2962:	
  5486                           ;master_eight.c: 748: case '3':
  5487                           
  5488                           ;master_eight.c: 747: break;
  5489                           
  5490                           ;master_eight.c: 746: T1CONbits.TMR1ON = 1;
  5491                           
  5492                           
  5493                           ;master_eight.c: 749: TMR1H=0xE6;
  5494  023E  30E6               	movlw	230
  5495  023F  0097               	movwf	23	;volatile
  5496                           
  5497                           ;master_eight.c: 750: TMR1L=0x38;
  5498  0240  3038               	movlw	56
  5499  0241  2A7B               	goto	L3
  5500  0242                     i1l2966:	
  5501                           ;master_eight.c: 753: case '4':
  5502                           
  5503                           ;master_eight.c: 752: break;
  5504                           
  5505                           ;master_eight.c: 751: T1CONbits.TMR1ON = 1;
  5506                           
  5507                           
  5508                           ;master_eight.c: 754: TMR1H=0xE7;
  5509  0242  30E7               	movlw	231
  5510  0243                     L39:	
  5511  0243  0097               	movwf	23	;volatile
  5512                           
  5513                           ;master_eight.c: 755: TMR1L=0x00;
  5514  0244  0196               	clrf	22	;volatile
  5515  0245  2A7C               	goto	i1l3014
  5516  0246                     i1l2972:	
  5517                           ;master_eight.c: 758: case '5':
  5518                           
  5519                           ;master_eight.c: 757: break;
  5520                           
  5521                           ;master_eight.c: 756: T1CONbits.TMR1ON = 1;
  5522                           
  5523                           
  5524                           ;master_eight.c: 759: TMR1H=0xE8;
  5525  0246  30E8               	movlw	232
  5526  0247                     L40:	
  5527  0247  0097               	movwf	23	;volatile
  5528                           
  5529                           ;master_eight.c: 760: TMR1L=0x90;
  5530  0248  3090               	movlw	144
  5531  0249  2A7B               	goto	L3
  5532  024A                     i1l2976:	
  5533                           ;master_eight.c: 763: case '6':
  5534                           
  5535                           ;master_eight.c: 762: break;
  5536                           
  5537                           ;master_eight.c: 761: T1CONbits.TMR1ON = 1;
  5538                           
  5539                           
  5540                           ;master_eight.c: 764: TMR1H=0xEA;
  5541  024A  30EA               	movlw	234
  5542  024B                     L41:	
  5543  024B  0097               	movwf	23	;volatile
  5544                           
  5545                           ;master_eight.c: 765: TMR1L=0x20;
  5546  024C  3020               	movlw	32
  5547  024D  2A7B               	goto	L3
  5548  024E                     i1l2980:	
  5549                           ;master_eight.c: 768: case '7':
  5550                           
  5551                           ;master_eight.c: 767: break;
  5552                           
  5553                           ;master_eight.c: 766: T1CONbits.TMR1ON = 1;
  5554                           
  5555                           
  5556                           ;master_eight.c: 769: TMR1H=0xEB;
  5557  024E  30EB               	movlw	235
  5558  024F                     L42:	
  5559  024F  0097               	movwf	23	;volatile
  5560                           
  5561                           ;master_eight.c: 770: TMR1L=0xB0;
  5562  0250  30B0               	movlw	176
  5563  0251  2A7B               	goto	L3
  5564  0252                     i1l2984:	
  5565                           ;master_eight.c: 773: case '8':
  5566                           
  5567                           ;master_eight.c: 772: break;
  5568                           
  5569                           ;master_eight.c: 771: T1CONbits.TMR1ON = 1;
  5570                           
  5571                           
  5572                           ;master_eight.c: 774: TMR1H=0xEC;
  5573  0252  30EC               	movlw	236
  5574  0253                     L50:	
  5575  0253  0097               	movwf	23	;volatile
  5576                           
  5577                           ;master_eight.c: 775: TMR1L=0x78;
  5578  0254  3078               	movlw	120
  5579  0255  2A7B               	goto	L3
  5580  0256                     i1l2988:	
  5581                           ;master_eight.c: 778: case '9':
  5582                           
  5583                           ;master_eight.c: 777: break;
  5584                           
  5585                           ;master_eight.c: 776: T1CONbits.TMR1ON = 1;
  5586                           
  5587                           
  5588                           ;master_eight.c: 779: TMR1H=0xED;
  5589  0256  30ED               	movlw	237
  5590  0257                     L43:	
  5591  0257  0097               	movwf	23	;volatile
  5592                           
  5593                           ;master_eight.c: 780: TMR1L=0x40;
  5594  0258  3040               	movlw	64
  5595  0259  2A7B               	goto	L3
  5596  025A                     i1l2994:	
  5597                           ;master_eight.c: 785: }
  5598                           
  5599                           ;master_eight.c: 784: break;
  5600                           
  5601                           ;master_eight.c: 783: default:
  5602                           
  5603                           ;master_eight.c: 782: break;
  5604                           
  5605                           ;master_eight.c: 781: T1CONbits.TMR1ON = 1;
  5606                           
  5607  025A  0870               	movf	_levelofDimmer_LSB,w
  5608                           
  5609                           ; Switch size 1, requested type "space"
  5610                           ; Number of cases is 10, Range of values is 48 to 57
  5611                           ; switch strategies available:
  5612                           ; Name         Instructions Cycles
  5613                           ; direct_byte           29     9 (fixed)
  5614                           ; simple_byte           31    16 (average)
  5615                           ; jumptable            263     9 (fixed)
  5616                           ;	Chosen strategy is direct_byte
  5617  025B  3ED0               	addlw	-48
  5618  025C  1C03               	skipc
  5619  025D  2A9B               	goto	i1l388
  5620  025E  0084               	movwf	4
  5621  025F  300A               	movlw	10
  5622  0260  0204               	subwf	4,w
  5623  0261  1803               	skipnc
  5624  0262  2A9B               	goto	i1l388
  5625  0263  3188               	movlp	high i1S4098
  5626  0264  3504               	lslf	4,w
  5627  0265  3EA0               	addlw	low i1S4098
  5628  0266  0082               	movwf	2
  5629                           
  5630                           ;master_eight.c: 786: break;
  5631  0267  2A9B               	goto	i1l388
  5632  0268                     i1l2996:	
  5633                           ;master_eight.c: 790: {
  5634                           ;master_eight.c: 791: case '0':
  5635                           
  5636                           ;master_eight.c: 789: switch(levelofDimmer_LSB)
  5637                           
  5638                           ;master_eight.c: 787: case '9':
  5639                           
  5640                           
  5641                           ;master_eight.c: 792: TMR1H=0xEE;
  5642  0268  30EE               	movlw	238
  5643  0269                     L44:	
  5644  0269  0097               	movwf	23	;volatile
  5645                           
  5646                           ;master_eight.c: 793: TMR1L=0xD0;
  5647  026A  30D0               	movlw	208
  5648  026B  2A7B               	goto	L3
  5649  026C                     i1l3000:	
  5650                           ;master_eight.c: 796: case '1':
  5651                           
  5652                           ;master_eight.c: 795: break;
  5653                           
  5654                           ;master_eight.c: 794: T1CONbits.TMR1ON = 1;
  5655                           
  5656                           
  5657                           ;master_eight.c: 797: TMR1H=0xF0;
  5658  026C  30F0               	movlw	240
  5659  026D                     L45:	
  5660  026D  0097               	movwf	23	;volatile
  5661                           
  5662                           ;master_eight.c: 798: TMR1L=0x60;
  5663  026E  3060               	movlw	96
  5664  026F  2A7B               	goto	L3
  5665  0270                     i1l3004:	
  5666                           ;master_eight.c: 801: case '2':
  5667                           
  5668                           ;master_eight.c: 800: break;
  5669                           
  5670                           ;master_eight.c: 799: T1CONbits.TMR1ON = 1;
  5671                           
  5672                           
  5673                           ;master_eight.c: 802: TMR1H=0xF1;
  5674  0270  30F1               	movlw	241
  5675  0271                     L46:	
  5676  0271  0097               	movwf	23	;volatile
  5677                           
  5678                           ;master_eight.c: 803: TMR1L=0xF0;
  5679  0272  30F0               	movlw	240
  5680  0273  2A7B               	goto	L3
  5681  0274                     i1l3008:	
  5682                           ;master_eight.c: 806: case '3':
  5683                           
  5684                           ;master_eight.c: 805: break;
  5685                           
  5686                           ;master_eight.c: 804: T1CONbits.TMR1ON = 1;
  5687                           
  5688                           
  5689                           ;master_eight.c: 807: TMR1H=0xF3;
  5690  0274  30F3               	movlw	243
  5691  0275                     L47:	
  5692  0275  0097               	movwf	23	;volatile
  5693                           
  5694                           ;master_eight.c: 808: TMR1L=0x80;
  5695  0276  3080               	movlw	128
  5696  0277  2A7B               	goto	L3
  5697  0278                     i1l3012:	
  5698                           ;master_eight.c: 811: case '4':
  5699                           
  5700                           ;master_eight.c: 810: break;
  5701                           
  5702                           ;master_eight.c: 809: T1CONbits.TMR1ON = 1;
  5703                           
  5704                           
  5705                           ;master_eight.c: 812: TMR1H=0xF5;
  5706  0278  30F5               	movlw	245
  5707  0279                     L17:	
  5708  0279  0097               	movwf	23	;volatile
  5709                           
  5710                           ;master_eight.c: 813: TMR1L=0x10;
  5711  027A  3010               	movlw	16
  5712  027B                     L3:	
  5713  027B  0096               	movwf	22	;volatile
  5714  027C                     i1l3014:	
  5715                           
  5716                           ;master_eight.c: 814: T1CONbits.TMR1ON = 1;
  5717  027C  1418               	bsf	24,0	;volatile
  5718                           
  5719                           ;master_eight.c: 815: break;
  5720  027D  2A9B               	goto	i1l388
  5721  027E                     i1l381:	
  5722                           ;master_eight.c: 816: case '5':
  5723                           
  5724  027E                     i1l382:	
  5725                           ;master_eight.c: 822: case '6':
  5726                           
  5727                           ;master_eight.c: 821: break;
  5728                           
  5729                           ;master_eight.c: 820: PORTEbits.RE5=0;
  5730                           
  5731  027E                     i1l383:	
  5732                           ;master_eight.c: 828: case '7':
  5733                           
  5734                           ;master_eight.c: 827: break;
  5735                           
  5736                           ;master_eight.c: 826: PORTEbits.RE5=0;
  5737                           
  5738  027E                     i1l384:	
  5739                           ;master_eight.c: 834: case '8':
  5740                           
  5741                           ;master_eight.c: 833: break;
  5742                           
  5743                           ;master_eight.c: 832: PORTEbits.RE5=0;
  5744                           
  5745  027E                     i1l385:	
  5746                           ;master_eight.c: 840: case '9':
  5747                           
  5748                           ;master_eight.c: 839: break;
  5749                           
  5750                           ;master_eight.c: 838: PORTEbits.RE5=0;
  5751                           
  5752                           
  5753                           ;master_eight.c: 844: PORTEbits.RE5=0;
  5754  027E  1290               	bcf	16,5	;volatile
  5755                           
  5756                           ;master_eight.c: 848: }
  5757                           
  5758                           ;master_eight.c: 847: break;
  5759                           
  5760                           ;master_eight.c: 846: default:
  5761                           
  5762                           ;master_eight.c: 845: break;
  5763  027F  2A9B               	goto	i1l388
  5764  0280                     i1l3018:	
  5765  0280  0870               	movf	_levelofDimmer_LSB,w
  5766                           
  5767                           ; Switch size 1, requested type "space"
  5768                           ; Number of cases is 10, Range of values is 48 to 57
  5769                           ; switch strategies available:
  5770                           ; Name         Instructions Cycles
  5771                           ; direct_byte           29     9 (fixed)
  5772                           ; simple_byte           31    16 (average)
  5773                           ; jumptable            263     9 (fixed)
  5774                           ;	Chosen strategy is direct_byte
  5775  0281  3ED0               	addlw	-48
  5776  0282  1C03               	skipc
  5777  0283  2A9B               	goto	i1l388
  5778  0284  0084               	movwf	4
  5779  0285  300A               	movlw	10
  5780  0286  0204               	subwf	4,w
  5781  0287  1803               	skipnc
  5782  0288  2A9B               	goto	i1l388
  5783  0289  3188               	movlp	high i1S4100
  5784  028A  3504               	lslf	4,w
  5785  028B  3EB4               	addlw	low i1S4100
  5786  028C  0082               	movwf	2
  5787                           
  5788                           ;master_eight.c: 852: }
  5789                           
  5790                           ;master_eight.c: 851: break;
  5791                           
  5792                           ;master_eight.c: 850: default:
  5793                           
  5794                           ;master_eight.c: 849: break;
  5795  028D  2A9B               	goto	i1l388
  5796  028E                     i1l3022:	
  5797  028E  0855               	movf	_levelofDimmer_MSB,w
  5798                           
  5799                           ; Switch size 1, requested type "space"
  5800                           ; Number of cases is 10, Range of values is 48 to 57
  5801                           ; switch strategies available:
  5802                           ; Name         Instructions Cycles
  5803                           ; direct_byte           29     9 (fixed)
  5804                           ; simple_byte           31    16 (average)
  5805                           ; jumptable            263     9 (fixed)
  5806                           ;	Chosen strategy is direct_byte
  5807  028F  3ED0               	addlw	-48
  5808  0290  1C03               	skipc
  5809  0291  2A9B               	goto	i1l388
  5810  0292  0084               	movwf	4
  5811  0293  300A               	movlw	10
  5812  0294  0204               	subwf	4,w
  5813  0295  1803               	skipnc
  5814  0296  2A9B               	goto	i1l388
  5815  0297  3188               	movlp	high i1S4102
  5816  0298  3504               	lslf	4,w
  5817  0299  3EC8               	addlw	low i1S4102
  5818  029A  0082               	movwf	2
  5819  029B                     i1l388:	
  5820  029B  087B               	movf	??_isr+1,w
  5821  029C  00FF               	movwf	127
  5822  029D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5823  029E  0009               	retfie
  5824  029F                     __end_of_isr:	
  5825                           
  5826                           	psect	swtext1
  5827  0800                     __pswtext1:	
  5828  0800                     i1S4082:	
  5829  0800  3181  2901         	ljmp	i1l2590
  5830  0802  3181  2903         	ljmp	i1l2594
  5831  0804  3181  2905         	ljmp	i1l2598
  5832  0806  3181  2909         	ljmp	i1l2602
  5833  0808  3181  290D         	ljmp	i1l2606
  5834  080A  3181  290F         	ljmp	i1l2610
  5835  080C  3181  2911         	ljmp	i1l2614
  5836  080E  3181  2913         	ljmp	i1l2620
  5837  0810  3181  2917         	ljmp	i1l2624
  5838  0812  3181  2918         	ljmp	i1l2628
  5839                           
  5840                           	psect	swtext2
  5841  0814                     __pswtext2:	
  5842  0814                     i1S4084:	
  5843  0814  3181  292A         	ljmp	i1l2636
  5844  0816  3181  292C         	ljmp	i1l2640
  5845  0818  3181  2930         	ljmp	i1l2644
  5846  081A  3181  2932         	ljmp	i1l2648
  5847  081C  3181  2934         	ljmp	i1l2652
  5848  081E  3181  2936         	ljmp	i1l2656
  5849  0820  3181  293A         	ljmp	i1l2660
  5850  0822  3181  293C         	ljmp	i1l2664
  5851  0824  3181  2940         	ljmp	i1l2668
  5852  0826  3181  2942         	ljmp	i1l2672
  5853                           
  5854                           	psect	swtext3
  5855  0828                     __pswtext3:	
  5856  0828                     i1S4086:	
  5857  0828  3181  2954         	ljmp	i1l2680
  5858  082A  3181  2956         	ljmp	i1l2684
  5859  082C  3181  295A         	ljmp	i1l2688
  5860  082E  3181  295C         	ljmp	i1l2692
  5861  0830  3181  2960         	ljmp	i1l2696
  5862  0832  3181  2962         	ljmp	i1l2700
  5863  0834  3181  2966         	ljmp	i1l2704
  5864  0836  3181  2968         	ljmp	i1l2708
  5865  0838  3181  296C         	ljmp	i1l2712
  5866  083A  3181  296E         	ljmp	i1l2716
  5867                           
  5868                           	psect	swtext4
  5869  083C                     __pswtext4:	
  5870  083C                     i1S4088:	
  5871  083C  3181  2980         	ljmp	i1l2724
  5872  083E  3181  2982         	ljmp	i1l2728
  5873  0840  3181  2984         	ljmp	i1l2732
  5874  0842  3181  2986         	ljmp	i1l2736
  5875  0844  3181  2988         	ljmp	i1l2740
  5876  0846  3181  298A         	ljmp	i1l2746
  5877  0848  3181  298C         	ljmp	i1l2750
  5878  084A  3181  298E         	ljmp	i1l2754
  5879  084C  3181  2990         	ljmp	i1l2758
  5880  084E  3181  2992         	ljmp	i1l2762
  5881                           
  5882                           	psect	swtext5
  5883  0850                     __pswtext5:	
  5884  0850                     i1S4090:	
  5885  0850  3181  29A2         	ljmp	i1l2770
  5886  0852  3181  29A4         	ljmp	i1l2774
  5887  0854  3181  29A6         	ljmp	i1l2778
  5888  0856  3181  29A8         	ljmp	i1l2782
  5889  0858  3181  29AA         	ljmp	i1l2786
  5890  085A  3181  29AC         	ljmp	i1l2790
  5891  085C  3181  29AE         	ljmp	i1l2794
  5892  085E  3181  29B0         	ljmp	i1l2798
  5893  0860  3181  29B2         	ljmp	i1l2802
  5894  0862  3181  29B4         	ljmp	i1l2806
  5895                           
  5896                           	psect	swtext6
  5897  0864                     __pswtext6:	
  5898  0864                     i1S4092:	
  5899  0864  3181  29C4         	ljmp	i1l2814
  5900  0866  3181  29C6         	ljmp	i1l2820
  5901  0868  3181  29C8         	ljmp	i1l2824
  5902  086A  3181  29CA         	ljmp	i1l2828
  5903  086C  3181  29CC         	ljmp	i1l2832
  5904  086E  3181  29CE         	ljmp	i1l2836
  5905  0870  3181  29D0         	ljmp	i1l2840
  5906  0872  3181  29D2         	ljmp	i1l2844
  5907  0874  3181  29D4         	ljmp	i1l2848
  5908  0876  3181  29D6         	ljmp	i1l2852
  5909                           
  5910                           	psect	swtext7
  5911  0878                     __pswtext7:	
  5912  0878                     i1S4094:	
  5913  0878  3181  29E6         	ljmp	i1l2860
  5914  087A  3181  29E8         	ljmp	i1l2864
  5915  087C  3181  29EA         	ljmp	i1l2868
  5916  087E  3181  29EC         	ljmp	i1l2872
  5917  0880  3181  29EE         	ljmp	i1l2876
  5918  0882  3181  29F0         	ljmp	i1l2880
  5919  0884  3181  29F2         	ljmp	i1l2884
  5920  0886  3181  29F4         	ljmp	i1l2890
  5921  0888  3181  29F6         	ljmp	i1l2894
  5922  088A  3181  29F8         	ljmp	i1l2898
  5923                           
  5924                           	psect	swtext8
  5925  088C                     __pswtext8:	
  5926  088C                     i1S4096:	
  5927  088C  3182  2A08         	ljmp	i1l2906
  5928  088E  3182  2A0A         	ljmp	i1l2910
  5929  0890  3182  2A0C         	ljmp	i1l2914
  5930  0892  3182  2A0E         	ljmp	i1l2918
  5931  0894  3182  2A10         	ljmp	i1l2922
  5932  0896  3182  2A12         	ljmp	i1l2926
  5933  0898  3182  2A14         	ljmp	i1l2930
  5934  089A  3182  2A18         	ljmp	i1l2934
  5935  089C  3182  2A1C         	ljmp	i1l2938
  5936  089E  3182  2A20         	ljmp	i1l2942
  5937                           
  5938                           	psect	swtext9
  5939  08A0                     __pswtext9:	
  5940  08A0                     i1S4098:	
  5941  08A0  3182  2A32         	ljmp	i1l2950
  5942  08A2  3182  2A36         	ljmp	i1l2954
  5943  08A4  3182  2A3A         	ljmp	i1l2958
  5944  08A6  3182  2A3E         	ljmp	i1l2962
  5945  08A8  3182  2A42         	ljmp	i1l2966
  5946  08AA  3182  2A46         	ljmp	i1l2972
  5947  08AC  3182  2A4A         	ljmp	i1l2976
  5948  08AE  3182  2A4E         	ljmp	i1l2980
  5949  08B0  3182  2A52         	ljmp	i1l2984
  5950  08B2  3182  2A56         	ljmp	i1l2988
  5951                           
  5952                           	psect	swtext10
  5953  08B4                     __pswtext10:	
  5954  08B4                     i1S4100:	
  5955  08B4  3182  2A68         	ljmp	i1l2996
  5956  08B6  3182  2A6C         	ljmp	i1l3000
  5957  08B8  3182  2A70         	ljmp	i1l3004
  5958  08BA  3182  2A74         	ljmp	i1l3008
  5959  08BC  3182  2A78         	ljmp	i1l3012
  5960  08BE  3182  2A7E         	ljmp	i1l381
  5961  08C0  3182  2A7E         	ljmp	i1l382
  5962  08C2  3182  2A7E         	ljmp	i1l383
  5963  08C4  3182  2A7E         	ljmp	i1l384
  5964  08C6  3182  2A7E         	ljmp	i1l385
  5965                           
  5966                           	psect	swtext11
  5967  08C8                     __pswtext11:	
  5968  08C8                     i1S4102:	
  5969  08C8  3181  291C         	ljmp	i1l2634
  5970  08CA  3181  2946         	ljmp	i1l2678
  5971  08CC  3181  2972         	ljmp	i1l2722
  5972  08CE  3181  2994         	ljmp	i1l2768
  5973  08D0  3181  29B6         	ljmp	i1l2812
  5974  08D2  3181  29D8         	ljmp	i1l2858
  5975  08D4  3181  29FA         	ljmp	i1l2904
  5976  08D6  3182  2A24         	ljmp	i1l2948
  5977  08D8  3182  2A5A         	ljmp	i1l2994
  5978  08DA  3182  2A80         	ljmp	i1l3018
  5979                           
  5980                           	psect	text21
  5981  0790                     __ptext21:	
  5982 ;; *************** function _errorsISR *****************
  5983 ;; Defined at:
  5984 ;;		line 1206 in file "../master_eight.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  errNum          1    wreg     PTR unsigned char 
  5987 ;;		 -> ErrorNames(5), 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  errNum          1    3[COMMON] PTR unsigned char 
  5990 ;;		 -> ErrorNames(5), 
  5991 ;;  Tx_count        2    1[COMMON] int 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6002 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0
  6003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  6004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0
  6005 ;;Total ram usage:        4 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_isr
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _errorsISR
  6016  0790                     _errorsISR:	
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _errorsISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6020                           ;errorsISR@errNum stored from wreg
  6021  0790  00F9               	movwf	errorsISR@errNum
  6022                           
  6023                           ;master_eight.c: 1207: int Tx_count=0;
  6024  0791  01F7               	clrf	errorsISR@Tx_count
  6025  0792  01F8               	clrf	errorsISR@Tx_count+1
  6026  0793                     i1l2430:	
  6027                           ;master_eight.c: 1208: while(Tx_count!=4)
  6028                           
  6029  0793  3004               	movlw	4
  6030  0794  0677               	xorwf	errorsISR@Tx_count,w
  6031  0795  0478               	iorwf	errorsISR@Tx_count+1,w
  6032  0796  1903               	btfsc	3,2
  6033  0797  0008               	return
  6034  0798                     i1l442:	
  6035                           ;master_eight.c: 1209: {
  6036                           ;master_eight.c: 1210: while (!TX1STAbits.TRMT);
  6037                           
  6038  0798  0023               	movlb	3	; select bank3
  6039  0799  1C9E               	btfss	30,1	;volatile
  6040  079A  2F98               	goto	i1l442
  6041                           
  6042                           ;master_eight.c: 1211: TX1REG = *errNum;
  6043  079B  0879               	movf	errorsISR@errNum,w
  6044  079C  0086               	movwf	6
  6045  079D  0187               	clrf	7
  6046  079E  0801               	movf	1,w
  6047  079F  009A               	movwf	26	;volatile
  6048                           
  6049                           ;master_eight.c: 1212: *errNum++;
  6050  07A0  3001               	movlw	1
  6051  07A1  00F6               	movwf	??_errorsISR
  6052  07A2  0876               	movf	??_errorsISR,w
  6053  07A3  07F9               	addwf	errorsISR@errNum,f
  6054                           
  6055                           ;master_eight.c: 1213: Tx_count++;
  6056  07A4  3001               	movlw	1
  6057  07A5  07F7               	addwf	errorsISR@Tx_count,f
  6058  07A6  3000               	movlw	0
  6059  07A7  3DF8               	addwfc	errorsISR@Tx_count+1,f
  6060  07A8  2F93               	goto	i1l2430
  6061  07A9                     __end_of_errorsISR:	
  6062  007E                     btemp	set	126	;btemp
  6063  007E                     int$flags	set	126
  6064  007E                     wtemp0	set	126


Data Sizes:
    Strings     2
    Constant    0
    Data        153
    BSS         12
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     41      74
    BANK1            80      8      70
    BANK2            80      0      74
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK0[2]), applianceControl@switchNumberStringBuffer(BANK0[2]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(1) Largest target is 42
		 -> currentStateBuffer(BANK2[42]), 

    errorsMain@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 

    errorsISR@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _applianceControl->_atoi
    _atoi->___wmul
    _actiontouchPanel->_sendFeedback_TO_Gateway

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    3742
                                             35 BANK0      6     6      0
                                              0 BANK1      8     8      0
                _GPIO_pin_Initialize
                   _actiontouchPanel
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
    _copyTouchpanelReceiveDataBuffer
                         _errorsMain
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           4     4      0     137
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _copyTouchpanelReceiveDataBuffer                      3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    21    15      6    2412
                                             14 BANK0     21    15      6
                               _atoi
                 _sendAcknowledgment
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     4      0     104
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     789
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                    _CCP9_Initialize
                 _EUSART2_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP9_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _actiontouchPanel                                    11     9      2     661
                                              3 BANK0     11     9      2
            _sendFeedback_TO_Gateway
 ---------------------------------------------------------------------------------
 (2) _sendFeedback_TO_Gateway                              3     2      1     216
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     197
                                              4 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (5) _errorsISR                                            4     4      0     197
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _actiontouchPanel
     _sendFeedback_TO_Gateway
   _allPeripheralInit
     _CCP9_Initialize
     _EUSART2_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
   _applianceControl
     _atoi
       ___wmul
       _isdigit
     _sendAcknowledgment
   _copyReceivedDataBuffer
   _copyTouchpanelReceiveDataBuffer
   _errorsMain

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4A      10       92.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0      E6      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Dec 06 13:10:05 2018

                      __size_of_allPeripheralInit 000F                                                 pc 0002  
                                     __CFG_CP$OFF 0000                                                _M1 0068  
                                              _M2 0066                                                _M3 0064  
                                              _M4 0062                                                _M5 00E4  
                             ___wmul@multiplicand 0022                      applianceControl@integerSpeed 0036  
                                             l212 0411                                               l207 03EA  
                                             l224 05B2                                               l404 0531  
                                             l451 0760                                               l460 0742  
                                             l484 077D                                               l398 04C0  
                                             _GIE 005F                         __size_of_applianceControl 0132  
                                             _isr 0004                                      __CFG_BORV$LO 0000  
                                             wreg 0009                                      __CFG_FOSC$HS 0000  
                                    __CFG_LVP$OFF 0000                                              l3410 0777  
                                            l3430 0FFE                                              l3440 05C1  
                                            l4080 0409                                              l3436 05BC  
                                            l3620 03DE                                              l3454 05DE  
                                            l3438 05B5                                              l4078 03FA  
                                            l3622 03E5                                              l3464 0619  
                                            l3456 05E2                                              l3448 05D7  
                                            l3624 03EC                                              l3632 0403  
                                            l3458 0609                                              l3652 0568  
                                            l3476 073D                                              l3628 03F5  
                                            l3812 0514                                              l3726 075B  
                                            l3664 0585                                              l3680 05A8  
                                            l3746 0431                                              l3764 047A  
                                            l3784 04C3                                              l3778 04A2  
                                            l3798 04EC                                              ?_isr 0076  
                                            STR_1 1000                                              u1165 077E  
                                            u1175 0783                                              u1355 06EB  
                                            u1525 0512                                              u1607 03C9  
                                            u1535 052F                                              u1617 03D5  
                                            u1465 04A0                                              u1627 06AD  
                                            u1547 037E                                              u1395 071C  
                                            u1475 04BE                                              u1637 06BA  
                                            u1557 038A                                              u1647 06C6  
                                            u1567 0396                                              u1657 06D3  
                                            u1577 03A4                                              u1587 03B1  
                                            u1597 03BD                                              _PEIE 005E  
                                            _WPUB 020D                                              _WPUD 020F  
                                            _WPUE 0210                                              _WPUG 048D  
                                    __CFG_WRT$OFF 0000                                              _atoi 05B3  
                                            _main 0412                                              fsr0h 0005  
                                            fsr1h 0007                                              fsr0l 0004  
                                            indf1 0001                                              fsr1l 0006  
                                            btemp 007E                           _copy_parentalLockBuffer 00C8  
                                            start 029F                                     __CFG_IESO$OFF 0000  
                                 _TMR3_Initialize 0FC9                            __size_of_pinINIT_extra 0015  
                       ??_sendFeedback_TO_Gateway 0021                                             ??_isr 007A  
             applianceControl@charParentalControl 0032                                      main@end_flag 00DE  
                                           ?_atoi 0026                                             ?_main 0076  
                                   __CFG_WDTE$OFF 0000                                             _T1CON 0018  
                                           _T3CON 0413                                             _RC1IF 008D  
                                           _RC2IF 00A5                                             i1l240 00E7  
                                           i1l232 0064                                             i1l237 00C3  
                                           i1l442 0798                                             i1l381 027E  
                                           i1l382 027E                                             i1l383 027E  
                                           i1l384 027E                                             i1l385 027E  
                                           i1l388 029B                                             _TMR1H 0017  
                                           _TMR3H 0412                                             _TMR1L 0016  
                                           _TMR3L 0411                                             u94_25 00B8  
                                  __CFG_FCMEN$OFF 0000                                   __end_of_isdigit 1000  
                                           atoi@a 002B                                             atoi@s 002D  
                         __end_of_TMR1_Initialize 0FC9                                    __CFG_BOREN$OFF 0000  
                        actiontouchPanel@Sw_speed 0024                                             status 0003  
                                           wtemp0 007E                                 ?_actiontouchPanel 0023  
                           __end_of_clearAllPorts 0FA8                               _GPIO_pin_Initialize 07D5  
                                  __CFG_MCLRE$OFF 0000                                ??_actiontouchPanel 0025  
                                 __initialization 02A1                           ?_copyReceivedDataBuffer 0076  
                                    __end_of_atoi 061E                                      __end_of_main 0535  
copyTouchpanelReceiveDataBuffer@dataBufferCounter 0021                                        _ErrorNames 0071  
                                  __CFG_LPBOR$OFF 0000                                            ??_atoi 0028  
                                          ??_main 0043                              ?_GPIO_pin_Initialize 0076  
                                   _pinINIT_extra 07EB                         main@dataBufferCounter_709 00E2  
                 __end_of_sendFeedback_TO_Gateway 06D9                        __end_of_EUSART2_Initialize 07D5  
                                 _CCP9_Initialize 0FB4                                            i1S4100 08B4  
                                          i1S4102 08C8                                            _CCP9IF 00A6  
                                          i1S4090 0850                                            i1S4082 0800  
                                          i1S4092 0864                                            i1S4084 0814  
                                          i1S4094 0878                                            i1S4086 0828  
                                          i1S4096 088C                                            i1S4088 083C  
                                          i1S4098 08A0                                            _CCPR9H 061B  
                                          _CCPR9L 061A                                            _ANSELA 018C  
                                          _ANSELB 018D                                            _ANSELD 018F  
                                          _ANSELE 0190                                            _ANSELF 040C  
                                          _ANSELG 040D                                            _T1GCON 0019  
                                          _T3GCON 0414                                            _RC1REG 0199  
                                          _RC2REG 0491                                            _RC1STA 019D  
                                          _RC2STA 0495                      _touchpanleReceivedDatabuffer 00B8  
                                          i1l3000 026C                                            i1l3012 0278  
                                          i1l3004 0270                                            i1l3014 027C  
                                          i1l3022 028E                                            i1l3008 0274  
                                          i1l3018 0280                                            i1l2430 0793  
                                          i1l2610 010F                                            i1l2602 0109  
                                          i1l2506 003D                                            i1l2530 007E  
                                          i1l2700 0162                                            i1l2620 0113  
                                          i1l2540 009A                                            i1l2614 0111  
                                          i1l2606 010D                                            i1l2712 016C  
                                          i1l2704 0166                                            i1l2640 012C  
                                          i1l2624 0117                                            i1l2802 01B2  
                                          i1l2722 0172                                            i1l2634 011C  
                                          i1l2820 01C6                                            i1l2812 01B6  
                                          i1l2740 0188                                            i1l2732 0184  
                                          i1l2724 0180                                            i1l2716 016E  
                                          i1l2708 0168                                            i1l2660 013A  
                                          i1l2652 0134                                            i1l2644 0130  
                                          i1l2636 012A                                            i1l2628 0118  
                                          i1l2580 00F7                                            i1l2564 00DD  
                         __end_of_TMR3_Initialize 0FD5                                            i1l2910 020A  
                                          i1l2814 01C4                                            i1l2806 01B4  
                                          i1l2750 018C                                            i1l2590 0101  
                                          i1l2904 01FA                                            i1l2840 01D0  
                                          i1l2832 01CC                                            i1l2824 01C8  
                                          i1l2736 0186                                            i1l2728 0182  
                                          i1l2680 0154                                            i1l2672 0142  
                                          i1l2664 013C                                            i1l2656 0136  
                                          i1l2648 0132                                            i1l2930 0214  
                                          i1l2922 0210                                            i1l2914 020C  
                                          i1l2906 0208                                            i1l2770 01A2  
                                          i1l2762 0192                                            i1l2754 018E  
                                          i1l2746 018A                                            i1l2594 0103  
                                          i1l2498 0024                                            i1l2860 01E6  
                                          i1l2852 01D6                                            i1l2844 01D2  
                                          i1l2836 01CE                                            i1l2828 01CA  
                                          i1l2692 015C                                            i1l2684 0156  
                                          i1l2668 0140                                            i1l2950 0232  
                                          i1l2942 0220                                            i1l2934 0218  
                                          i1l2926 0212                                            i1l2918 020E  
                                          i1l2790 01AC                                            i1l2782 01A8  
                                          i1l2774 01A4                                            i1l2758 0190  
                                          i1l2678 0146                                            i1l2598 0105  
                                          i1l2880 01F0                                            i1l2872 01EC  
                                          i1l2864 01E8                                            i1l2848 01D4  
                                          i1l2768 0194                                            i1l2696 0160  
                                          i1l2688 015A                                            i1l2962 023E  
                                          i1l2954 0236                                            i1l2938 021C  
                                          i1l2890 01F4                                            i1l2858 01D8  
                                          i1l2794 01AE                                            i1l2786 01AA  
                                          i1l2778 01A6                                            i1l2980 024E  
                                          i1l2972 0246                                            i1l2948 0224  
                                          i1l2884 01F2                                            i1l2876 01EE  
                                          i1l2868 01EA                                            i1l2966 0242  
                                          i1l2958 023A                                            i1l2894 01F6  
                                          i1l2798 01B0                                            i1l2984 0252  
                                          i1l2976 024A                                            i1l2994 025A  
                                          i1l2898 01F8                                            i1l2996 0268  
                                          i1l2988 0256                                            _TX1REG 019A  
                                          _TX2REG 0492                                            _TX1STA 019E  
                                          _TX2STA 0496                                    __CFG_PWRTE$OFF 0000  
                  __end_of_copyReceivedDataBuffer 070A                       __size_of_sendAcknowledgment 001E  
                                          ___wmul 0774                             ??_GPIO_pin_Initialize 0020  
                        _mainReceivedDataPosition 005E                                  _applianceControl 02E0  
                                    __pdataCOMMON 0070                                         ??_isdigit 0020  
                                  ?_pinINIT_extra 0076           __end_of_copyTouchpanelReceiveDataBuffer 0739  
        __size_of_copyTouchpanelReceiveDataBuffer 002F                 ??_copyTouchpanelReceiveDataBuffer 0020  
                ?_copyTouchpanelReceiveDataBuffer 0076                   _copyTouchpanelReceiveDataBuffer 070A  
                   _touchpanelReceivedataPosition 005A                        actiontouchPanel@Switch_Num 002B  
                                ?_TMR1_Initialize 0076                           __end_of__initialization 02DC  
                                  __pcstackCOMMON 0076                                      __pidataBANK0 0FD5  
                                    __pidataBANK1 0668                                      __pidataBANK2 061E  
                         __end_of_CCP9_Initialize 0FBE                                        __pbssBANK0 0056  
                                ?_TMR3_Initialize 0076                                   __CFG_VCAPEN$OFF 0000  
                              __size_of_errorsISR 0019                                        __pmaintext 0412  
                                         ?___wmul 0020                                        __pintentry 0004  
                      sendAcknowledgment@Tx_count 0021                                           _CCP9CON 061C  
                                 ??_pinINIT_extra 0020                                           _SP1BRGH 019C  
                                         _SP1BRGL 019B                                           _SP2BRGH 0494  
                                         _SP2BRGL 0493                                        __pswtext10 08B4  
                                      __pswtext11 08C8       applianceControl@currentStateBufferPositions 0041  
                applianceControl@chDimmerSpeedLSB 0031                  applianceControl@chDimmerSpeedMSB 0030  
                                 __size_of___wmul 001C                                   __CFG_STVREN$OFF 0000  
                                      _errorsMain 0757                                           __ptext1 0757  
                                         __ptext2 070A                                           __ptext3 06D9  
                                         __ptext4 02E0                                           __ptext5 0739  
                                         __ptext6 05B3                                           __ptext7 0FF1  
                                         __ptext8 0774                                           __ptext9 0FE2  
                       __size_of_actiontouchPanel 007E                                         _T1CONbits 0018  
                                ?_CCP9_Initialize 0076                                           _isdigit 0FF1  
                                    __size_of_isr 029B                                         _T3CONbits 0413  
                               __end_of_errorsISR 07A9              sendAcknowledgment@currentStateBuffer 0023  
                            end_of_initialization 02DC                                           init_ram 0FA8  
                                         initloop 0FA9                                 _EUSART_Initialize 07A9  
                               _levelofDimmer_LSB 0070                                 _levelofDimmer_MSB 0055  
                        ?_sendFeedback_TO_Gateway 0020                          __end_of_applianceControl 0412  
              applianceControl@integerSwitchState 003D                                _EUSART2_Initialize 07BF  
                              ?_EUSART_Initialize 0076                            _touchPanelDataReceived 0058  
                                  main@start_flag 00DC                               ?_EUSART2_Initialize 0076  
                             ??_EUSART_Initialize 0020                                         _PORTAbits 000C  
                                       _PORTEbits 0010                                         _TRISAbits 008C  
                          __size_of_clearAllPorts 0004                                         _TRISCbits 008E  
                                       _TRISEbits 0090                                         _TRISFbits 030C  
                                       _TRISGbits 030D                              ??_EUSART2_Initialize 0020  
                       __end_of_EUSART_Initialize 07BF          applianceControl@switchNumberStringBuffer 0039  
               sendFeedback_TO_Gateway@sw_numberN 0022                        __end_of_sendAcknowledgment 0757  
               sendFeedback_TO_Gateway@sw_statusS 0020                       __end_of_GPIO_pin_Initialize 07EB  
                                  __end_of___wmul 0790                            _mainReceivedDataBuffer 0120  
                                   __pidataCOMMON 0FAE                                       ?_errorsMain 0076  
                             start_initialization 02A1                                       __end_of_isr 029F  
                           applianceControl@F3724 0053                             applianceControl@F3726 0051  
                                   _clearAllPorts 0FA4                          __size_of_TMR1_Initialize 000B  
         copyReceivedDataBuffer@dataBufferCounter 0021                                          ??___wmul 0024  
                                     __pdataBANK0 0049                                       __pdataBANK1 00A0  
                                     __pdataBANK2 0120                                  _actiontouchPanel 0535  
                                _mainDataReceived 005C                                         ___latbits 0002  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00DC  
                               errorsISR@Tx_count 0077                          ??_copyReceivedDataBuffer 0020  
                      __size_of_EUSART_Initialize 0016                                         _checkFlag 0060  
                              errorsMain@Tx_count 0021                               __size_of_errorsMain 001D  
                                       __pnvBANK0 0062                                         __pnvBANK1 00E4  
                                  ?_clearAllPorts 0076                                   errorsISR@errNum 0079  
                        __size_of_TMR3_Initialize 000C                                  errorsMain@errNum 0023  
                                       __pswtext1 0800                                         __pswtext2 0814  
                                       __pswtext3 0828                                         __pswtext4 083C  
                                       __pswtext5 0850                                         __pswtext6 0864  
                                       __pswtext7 0878                                         __pswtext8 088C  
                                       __pswtext9 08A0                                          _BAUD1CON 019F  
                                        _BAUD2CON 0497                             __end_of_pinINIT_extra 0800  
                                        ?_isdigit 0076               applianceControl@charFinalFrameState 0033  
                                       _errorsISR 0790                     actiontouchPanel@switch_status 002C  
         applianceControl@dimmerSpeedStringBuffer 003B                                    ___wmul@product 0024  
                                        _PIE1bits 0091                                          _PIE3bits 0093  
                                        _PIE4bits 0094                                 ?_applianceControl 002E  
                                        _PIR1bits 0011                                          _PIR3bits 0013  
                                        _PIR4bits 0014                                ??_applianceControl 0034  
                               ??_TMR1_Initialize 0020                                 ___wmul@multiplier 0020  
                __size_of_sendFeedback_TO_Gateway 0035                     applianceControl@charSwitchLSB 002E  
                   applianceControl@charSwitchMSB 0038                                        ?_errorsISR 0076  
                        __size_of_CCP9_Initialize 000A                   __size_of_copyReceivedDataBuffer 0031  
                                 ??_clearAllPorts 0020                       actiontouchPanel@int_swSpeed 0026  
                _start_PWM_Generation_in_ISR_FLAG 0056                                 _allPeripheralInit 0FE2  
                                    ??_errorsMain 0020                                _sendAcknowledgment 0739  
                               ??_TMR3_Initialize 0020                                       _isdigit$944 0020  
                              ?_allPeripheralInit 0076                                  __size_of_isdigit 000F  
                             ?_sendAcknowledgment 0076                                          __ptext10 0FC9  
                                        __ptext11 0FBE                                          __ptext12 07A9  
                                        __ptext21 0790                                          __ptext13 07BF  
                                        __ptext14 0FB4                                          __ptext15 0535  
                                        __ptext16 06A4                                          __ptext17 07D5  
                                        __ptext18 07EB                                          __ptext19 0FA4  
                             ??_allPeripheralInit 0020                   applianceControl@charSwitchSTATE 002F  
                     __size_of_EUSART2_Initialize 0016                             main@dataBufferCounter 00E0  
                                   __size_of_atoi 006B                                     __size_of_main 0123  
                        __end_of_actiontouchPanel 05B3                         actiontouchPanel@ch_sw_num 0028  
                              __end_of_errorsMain 0774                                _currentStateBuffer 0140  
                                      _RC1STAbits 019D                              ??_sendAcknowledgment 0020  
                                      _RC2STAbits 0495                         __end_of_allPeripheralInit 0FF1  
                                        int$flags 007E                                          atoi@sign 002A  
                          _copyReceivedDataBuffer 06D9                             actiontouchPanel@SwNum 0029  
                          _tempReceivedDataBuffer 00A0                      __size_of_GPIO_pin_Initialize 0016  
                                        isdigit@c 0021                                       ??_errorsISR 0076  
                                        intlevel1 0000                                 __CFG_CLKOUTEN$OFF 0000  
             applianceControl@integerSwitchNumber 003F                                 ??_CCP9_Initialize 0020  
                              _parentalLockBuffer 00D2                           _sendFeedback_TO_Gateway 06A4  
                                   __pstringtext1 1000                                     __pstringtext2 0000  
                       actiontouchPanel@sw_status 0023                   _tempReceiveTouchpanelDataBuffer 0049  
                                      _TX1STAbits 019E                                        _TX2STAbits 0496  
                                 _TMR1_Initialize 0FBE  
