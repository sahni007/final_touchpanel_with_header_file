

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Dec 06 12:33:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext1,global,class=STRCODE,delta=2
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	swtext1,local,class=CONST,delta=2
    44                           	psect	swtext2,local,class=CONST,delta=2
    45                           	psect	swtext3,local,class=CONST,delta=2
    46                           	psect	swtext4,local,class=CONST,delta=2
    47                           	psect	swtext5,local,class=CONST,delta=2
    48                           	psect	swtext6,local,class=CONST,delta=2
    49                           	psect	swtext7,local,class=CONST,delta=2
    50                           	psect	swtext8,local,class=CONST,delta=2
    51                           	psect	swtext9,local,class=CONST,delta=2
    52                           	psect	swtext10,local,class=CONST,delta=2
    53                           	psect	swtext11,local,class=CONST,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 1.45
    58                           ; Generated 16/11/2017 GMT
    59                           ; 
    60                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1526 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0110                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  011D                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020D                     	;# 
   185  020F                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0219                     	;# 
   203  021A                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029D                     	;# 
   220  029E                     	;# 
   221  029F                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  040C                     	;# 
   242  040D                     	;# 
   243  0411                     	;# 
   244  0411                     	;# 
   245  0412                     	;# 
   246  0413                     	;# 
   247  0414                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  0418                     	;# 
   252  0418                     	;# 
   253  0419                     	;# 
   254  041A                     	;# 
   255  041B                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  048D                     	;# 
   260  0491                     	;# 
   261  0491                     	;# 
   262  0492                     	;# 
   263  0492                     	;# 
   264  0493                     	;# 
   265  0493                     	;# 
   266  0493                     	;# 
   267  0494                     	;# 
   268  0494                     	;# 
   269  0495                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  0496                     	;# 
   273  0497                     	;# 
   274  0497                     	;# 
   275  0595                     	;# 
   276  0596                     	;# 
   277  0597                     	;# 
   278  059C                     	;# 
   279  059D                     	;# 
   280  059E                     	;# 
   281  0611                     	;# 
   282  0611                     	;# 
   283  0612                     	;# 
   284  0613                     	;# 
   285  0614                     	;# 
   286  0614                     	;# 
   287  0615                     	;# 
   288  0616                     	;# 
   289  0617                     	;# 
   290  0617                     	;# 
   291  0618                     	;# 
   292  0619                     	;# 
   293  061A                     	;# 
   294  061A                     	;# 
   295  061B                     	;# 
   296  061C                     	;# 
   297  061D                     	;# 
   298  061D                     	;# 
   299  061E                     	;# 
   300  061F                     	;# 
   301  0FE4                     	;# 
   302  0FE5                     	;# 
   303  0FE6                     	;# 
   304  0FE7                     	;# 
   305  0FE8                     	;# 
   306  0FE9                     	;# 
   307  0FEA                     	;# 
   308  0FEB                     	;# 
   309  0FED                     	;# 
   310  0FEE                     	;# 
   311  0FEF                     	;# 
   312                           
   313                           	psect	idataCOMMON
   314  0F4D                     __pidataCOMMON:	
   315                           
   316                           ;initializer for _levelofDimmer_LSB
   317  0F4D  3430               	retlw	48
   318                           
   319                           ;initializer for _ErrorNames
   320  0F4E  3423               	retlw	35
   321  0F4F  3423               	retlw	35
   322  0F50  3423               	retlw	35
   323  0F51  3423               	retlw	35
   324  0F52  3400               	retlw	0
   325                           
   326                           	psect	idataBANK0
   327  0F74                     __pidataBANK0:	
   328                           
   329                           ;initializer for _tempReceiveTouchpanelDataBuffer
   330  0F74  3423               	retlw	35
   331  0F75  3400               	retlw	0
   332  0F76  3400               	retlw	0
   333  0F77  3400               	retlw	0
   334  0F78  3400               	retlw	0
   335  0F79  3400               	retlw	0
   336  0F7A  3400               	retlw	0
   337  0F7B  3400               	retlw	0
   338                           
   339                           ;initializer for applianceControl@F3726
   340  0F7C  3423               	retlw	35
   341  0F7D  3400               	retlw	0
   342                           
   343                           ;initializer for applianceControl@F3724
   344  0F7E  3423               	retlw	35
   345  0F7F  3400               	retlw	0
   346                           
   347                           ;initializer for _levelofDimmer_MSB
   348  0F80  3430               	retlw	48
   349                           
   350                           	psect	idataBANK1
   351  06C9                     __pidataBANK1:	
   352                           
   353                           ;initializer for _tempReceivedDataBuffer
   354  06C9  3423               	retlw	35
   355  06CA  3400               	retlw	0
   356  06CB  3400               	retlw	0
   357  06CC  3400               	retlw	0
   358  06CD  3400               	retlw	0
   359  06CE  3400               	retlw	0
   360  06CF  3400               	retlw	0
   361  06D0  3400               	retlw	0
   362  06D1  3400               	retlw	0
   363  06D2  3400               	retlw	0
   364  06D3  3400               	retlw	0
   365  06D4  3400               	retlw	0
   366  06D5  3400               	retlw	0
   367  06D6  3400               	retlw	0
   368  06D7  3400               	retlw	0
   369  06D8  3400               	retlw	0
   370  06D9  3400               	retlw	0
   371  06DA  3400               	retlw	0
   372  06DB  3400               	retlw	0
   373  06DC  3400               	retlw	0
   374  06DD  3400               	retlw	0
   375  06DE  3400               	retlw	0
   376  06DF  3400               	retlw	0
   377  06E0  3400               	retlw	0
   378                           
   379                           ;initializer for _touchpanleReceivedDatabuffer
   380  06E1  3423               	retlw	35
   381  06E2  3400               	retlw	0
   382  06E3  3400               	retlw	0
   383  06E4  3400               	retlw	0
   384  06E5  3400               	retlw	0
   385  06E6  3400               	retlw	0
   386  06E7  3400               	retlw	0
   387  06E8  3400               	retlw	0
   388  06E9  3400               	retlw	0
   389  06EA  3400               	retlw	0
   390  06EB  3400               	retlw	0
   391  06EC  3400               	retlw	0
   392  06ED  3400               	retlw	0
   393  06EE  3400               	retlw	0
   394  06EF  3400               	retlw	0
   395  06F0  3400               	retlw	0
   396                           
   397                           ;initializer for _copy_parentalLockBuffer
   398  06F1  3430               	retlw	48
   399  06F2  3430               	retlw	48
   400  06F3  3430               	retlw	48
   401  06F4  3430               	retlw	48
   402  06F5  3430               	retlw	48
   403  06F6  3430               	retlw	48
   404  06F7  3430               	retlw	48
   405  06F8  3430               	retlw	48
   406  06F9  3430               	retlw	48
   407  06FA  3400               	retlw	0
   408                           
   409                           ;initializer for _parentalLockBuffer
   410  06FB  3430               	retlw	48
   411  06FC  3430               	retlw	48
   412  06FD  3430               	retlw	48
   413  06FE  3430               	retlw	48
   414  06FF  3430               	retlw	48
   415  0700  3430               	retlw	48
   416  0701  3430               	retlw	48
   417  0702  3430               	retlw	48
   418  0703  3400               	retlw	0
   419  0704  3400               	retlw	0
   420                           
   421                           	psect	idataBANK2
   422  067F                     __pidataBANK2:	
   423                           
   424                           ;initializer for _mainReceivedDataBuffer
   425  067F  3423               	retlw	35
   426  0680  3400               	retlw	0
   427  0681  3400               	retlw	0
   428  0682  3400               	retlw	0
   429  0683  3400               	retlw	0
   430  0684  3400               	retlw	0
   431  0685  3400               	retlw	0
   432  0686  3400               	retlw	0
   433  0687  3400               	retlw	0
   434  0688  3400               	retlw	0
   435  0689  3400               	retlw	0
   436  068A  3400               	retlw	0
   437  068B  3400               	retlw	0
   438  068C  3400               	retlw	0
   439  068D  3400               	retlw	0
   440  068E  3400               	retlw	0
   441  068F  3400               	retlw	0
   442  0690  3400               	retlw	0
   443  0691  3400               	retlw	0
   444  0692  3400               	retlw	0
   445  0693  3400               	retlw	0
   446  0694  3400               	retlw	0
   447  0695  3400               	retlw	0
   448  0696  3400               	retlw	0
   449  0697  3400               	retlw	0
   450  0698  3400               	retlw	0
   451  0699  3400               	retlw	0
   452  069A  3400               	retlw	0
   453  069B  3400               	retlw	0
   454  069C  3400               	retlw	0
   455  069D  3400               	retlw	0
   456  069E  3400               	retlw	0
   457                           
   458                           ;initializer for _currentStateBuffer
   459  069F  3423               	retlw	35
   460  06A0  3400               	retlw	0
   461  06A1  3400               	retlw	0
   462  06A2  3400               	retlw	0
   463  06A3  3400               	retlw	0
   464  06A4  3400               	retlw	0
   465  06A5  3400               	retlw	0
   466  06A6  3400               	retlw	0
   467  06A7  3400               	retlw	0
   468  06A8  3400               	retlw	0
   469  06A9  3400               	retlw	0
   470  06AA  3400               	retlw	0
   471  06AB  3400               	retlw	0
   472  06AC  3400               	retlw	0
   473  06AD  3400               	retlw	0
   474  06AE  3400               	retlw	0
   475  06AF  3400               	retlw	0
   476  06B0  3400               	retlw	0
   477  06B1  3400               	retlw	0
   478  06B2  3400               	retlw	0
   479  06B3  3400               	retlw	0
   480  06B4  3400               	retlw	0
   481  06B5  3400               	retlw	0
   482  06B6  3400               	retlw	0
   483  06B7  3400               	retlw	0
   484  06B8  3400               	retlw	0
   485  06B9  3400               	retlw	0
   486  06BA  3400               	retlw	0
   487  06BB  3400               	retlw	0
   488  06BC  3400               	retlw	0
   489  06BD  3400               	retlw	0
   490  06BE  3400               	retlw	0
   491  06BF  3400               	retlw	0
   492  06C0  3400               	retlw	0
   493  06C1  3400               	retlw	0
   494  06C2  3400               	retlw	0
   495  06C3  3400               	retlw	0
   496  06C4  3400               	retlw	0
   497  06C5  3400               	retlw	0
   498  06C6  3400               	retlw	0
   499  06C7  3400               	retlw	0
   500  06C8  3400               	retlw	0
   501                           
   502                           	psect	nvBANK0
   503  0062                     __pnvBANK0:	
   504  0062                     _M5:	
   505  0062                     	ds	2
   506  0064                     _M4:	
   507  0064                     	ds	2
   508  0066                     _M2:	
   509  0066                     	ds	2
   510  0068                     _M1:	
   511  0068                     	ds	2
   512                           
   513                           	psect	nvBANK1
   514  00E4                     __pnvBANK1:	
   515  00E4                     _M3:	
   516  00E4                     	ds	2
   517  0014                     _PIR4bits	set	20
   518  0019                     _T1GCON	set	25
   519  0018                     _T1CON	set	24
   520  0016                     _TMR1L	set	22
   521  0017                     _TMR1H	set	23
   522  0018                     _T1CONbits	set	24
   523  0011                     _PIR1bits	set	17
   524  0013                     _PIR3bits	set	19
   525  0010                     _PORTEbits	set	16
   526  000C                     _PORTAbits	set	12
   527  005E                     _PEIE	set	94
   528  005F                     _GIE	set	95
   529  00A6                     _CCP9IF	set	166
   530  008D                     _RC1IF	set	141
   531  00A5                     _RC2IF	set	165
   532  0094                     _PIE4bits	set	148
   533  008E                     _TRISCbits	set	142
   534  0090                     _TRISEbits	set	144
   535  008C                     _TRISAbits	set	140
   536  0091                     _PIE1bits	set	145
   537  0093                     _PIE3bits	set	147
   538  018C                     _ANSELA	set	396
   539  018D                     _ANSELB	set	397
   540  018F                     _ANSELD	set	399
   541  0190                     _ANSELE	set	400
   542  019A                     _TX1REG	set	410
   543  019E                     _TX1STAbits	set	414
   544  019C                     _SP1BRGH	set	412
   545  019B                     _SP1BRGL	set	411
   546  019E                     _TX1STA	set	414
   547  019D                     _RC1STA	set	413
   548  019F                     _BAUD1CON	set	415
   549  0199                     _RC1REG	set	409
   550  019D                     _RC1STAbits	set	413
   551  020D                     _WPUB	set	525
   552  020F                     _WPUD	set	527
   553  0210                     _WPUE	set	528
   554  028C                     _PORTFbits	set	652
   555  030D                     _TRISGbits	set	781
   556  030C                     _TRISFbits	set	780
   557  040C                     _ANSELF	set	1036
   558  040D                     _ANSELG	set	1037
   559  0414                     _T3GCON	set	1044
   560  0413                     _T3CON	set	1043
   561  0411                     _TMR3L	set	1041
   562  0412                     _TMR3H	set	1042
   563  0413                     _T3CONbits	set	1043
   564  048D                     _WPUG	set	1165
   565  0496                     _TX2STAbits	set	1174
   566  0494                     _SP2BRGH	set	1172
   567  0493                     _SP2BRGL	set	1171
   568  0496                     _TX2STA	set	1174
   569  0495                     _RC2STA	set	1173
   570  0497                     _BAUD2CON	set	1175
   571  0491                     _RC2REG	set	1169
   572  0495                     _RC2STAbits	set	1173
   573  0492                     _TX2REG	set	1170
   574  061A                     _CCPR9L	set	1562
   575  061B                     _CCPR9H	set	1563
   576  061C                     _CCP9CON	set	1564
   577                           
   578                           	psect	stringtext1
   579  1000                     __pstringtext1:	
   580  1000                     STR_1:	
   581  1000  3423               	retlw	35	;'#'
   582  1001  3400               	retlw	0
   583                           
   584                           	psect	stringtext2
   585  0000                     __pstringtext2:	
   586                           
   587                           ; #config settings
   588  0000                     
   589                           	psect	cinit
   590  02A1                     start_initialization:	
   591  02A1                     __initialization:	
   592                           
   593                           ; Initialize objects allocated to COMMON
   594  02A1  304D               	movlw	low __pidataCOMMON
   595  02A2  0084               	movwf	4
   596  02A3  308F               	movlw	(high __pidataCOMMON)| (0+128)
   597  02A4  0085               	movwf	5
   598  02A5  3070               	movlw	low __pdataCOMMON
   599  02A6  0086               	movwf	6
   600  02A7  3000               	movlw	high __pdataCOMMON
   601  02A8  0087               	movwf	7
   602  02A9  3006               	movlw	6
   603  02AA  318F  2747  3182   	fcall	init_ram
   604                           
   605                           ; Initialize objects allocated to BANK0
   606  02AD  3074               	movlw	low __pidataBANK0
   607  02AE  0084               	movwf	4
   608  02AF  308F               	movlw	(high __pidataBANK0)| (0+128)
   609  02B0  0085               	movwf	5
   610  02B1  3049               	movlw	low __pdataBANK0
   611  02B2  0086               	movwf	6
   612  02B3  3000               	movlw	high __pdataBANK0
   613  02B4  0087               	movwf	7
   614  02B5  300D               	movlw	13
   615  02B6  318F  2747  3182   	fcall	init_ram
   616                           
   617                           ; Initialize objects allocated to BANK1
   618  02B9  30C9               	movlw	low __pidataBANK1
   619  02BA  0084               	movwf	4
   620  02BB  3086               	movlw	(high __pidataBANK1)| (0+128)
   621  02BC  0085               	movwf	5
   622  02BD  30A0               	movlw	low __pdataBANK1
   623  02BE  0086               	movwf	6
   624  02BF  3000               	movlw	high __pdataBANK1
   625  02C0  0087               	movwf	7
   626  02C1  303C               	movlw	60
   627  02C2  318F  2747  3182   	fcall	init_ram
   628                           
   629                           ; Initialize objects allocated to BANK2
   630  02C5  307F               	movlw	low __pidataBANK2
   631  02C6  0084               	movwf	4
   632  02C7  3086               	movlw	(high __pidataBANK2)| (0+128)
   633  02C8  0085               	movwf	5
   634  02C9  3020               	movlw	low __pdataBANK2
   635  02CA  0086               	movwf	6
   636  02CB  3001               	movlw	high __pdataBANK2
   637  02CC  0087               	movwf	7
   638  02CD  304A               	movlw	74
   639  02CE  318F  2747         	fcall	init_ram
   640                           
   641                           ; Clear objects allocated to BANK0
   642  02D0  01D6               	clrf	__pbssBANK0& (0+127)
   643  02D1  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   644  02D2  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   645  02D3  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   646  02D4  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   647  02D5  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   648  02D6  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   649  02D7  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   650  02D8  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   651  02D9  01DF               	clrf	(__pbssBANK0+9)& (0+127)
   652  02DA  01E0               	clrf	(__pbssBANK0+10)& (0+127)
   653  02DB  01E1               	clrf	(__pbssBANK0+11)& (0+127)
   654  02DC                     end_of_initialization:	
   655                           ;End of C runtime variable initialization code
   656                           
   657  02DC                     __end_of__initialization:	
   658  02DC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   659  02DD  0020               	movlb	0
   660  02DE  3182  2AE0         	ljmp	_main	;jump to C main() function
   661                           
   662                           	psect	dataCOMMON
   663  0070                     __pdataCOMMON:	
   664  0070                     _levelofDimmer_LSB:	
   665  0070                     	ds	1
   666  0071                     _ErrorNames:	
   667  0071                     	ds	5
   668                           
   669                           	psect	bssBANK0
   670  0056                     __pbssBANK0:	
   671  0056                     _start_PWM_Generation_in_ISR_FLAG:	
   672  0056                     	ds	2
   673  0058                     _touchPanelDataReceived:	
   674  0058                     	ds	2
   675  005A                     _touchpanelReceivedataPosition:	
   676  005A                     	ds	2
   677  005C                     _mainDataReceived:	
   678  005C                     	ds	2
   679  005E                     _mainReceivedDataPosition:	
   680  005E                     	ds	2
   681  0060                     _checkFlag:	
   682  0060                     	ds	2
   683                           
   684                           	psect	dataBANK0
   685  0049                     __pdataBANK0:	
   686  0049                     _tempReceiveTouchpanelDataBuffer:	
   687  0049                     	ds	8
   688  0051                     applianceControl@F3726:	
   689  0051                     	ds	2
   690  0053                     applianceControl@F3724:	
   691  0053                     	ds	2
   692  0055                     _levelofDimmer_MSB:	
   693  0055                     	ds	1
   694                           
   695                           	psect	dataBANK1
   696  00A0                     __pdataBANK1:	
   697  00A0                     _tempReceivedDataBuffer:	
   698  00A0                     	ds	24
   699  00B8                     _touchpanleReceivedDatabuffer:	
   700  00B8                     	ds	16
   701  00C8                     _copy_parentalLockBuffer:	
   702  00C8                     	ds	10
   703  00D2                     _parentalLockBuffer:	
   704  00D2                     	ds	10
   705                           
   706                           	psect	dataBANK2
   707  0120                     __pdataBANK2:	
   708  0120                     _mainReceivedDataBuffer:	
   709  0120                     	ds	32
   710  0140                     _currentStateBuffer:	
   711  0140                     	ds	42
   712                           
   713                           	psect	inittext
   714  0F47                     init_ram:	
   715  0F47  00FE               	movwf	126
   716  0F48                     initloop:	
   717  0F48  0012               	moviw fsr0++
   718  0F49  001E               	movwi fsr1++
   719  0F4A  0BFE               	decfsz	126,f
   720  0F4B  2F48               	goto	initloop
   721  0F4C  3400               	retlw	0
   722                           
   723                           	psect	cstackBANK1
   724  00DC                     __pcstackBANK1:	
   725  00DC                     main@start_flag:	
   726                           
   727                           ; 2 bytes @ 0x0
   728  00DC                     	ds	2
   729  00DE                     main@end_flag:	
   730                           
   731                           ; 2 bytes @ 0x2
   732  00DE                     	ds	2
   733  00E0                     main@dataBufferCounter:	
   734                           
   735                           ; 2 bytes @ 0x4
   736  00E0                     	ds	2
   737  00E2                     main@dataBufferCounter_730:	
   738                           
   739                           ; 2 bytes @ 0x6
   740  00E2                     	ds	2
   741                           
   742                           	psect	cstackCOMMON
   743  0076                     __pcstackCOMMON:	
   744  0076                     ?_isdigit:	
   745  0076                     ?_sendAcknowledgment:	
   746                           ; 1 bit 
   747                           
   748  0076                     ?_errorsISR:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0076                     ??_errorsISR:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0076                     ?_GPIO_pin_Initialize:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0076                     ?_allPeripheralInit:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0076                     ?_copyReceivedDataBuffer:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0076                     ?_errorsMain:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0076                     ?_copyTouchpanelReceiveDataBuffer:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0076                     ?_clearAllPorts:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0076                     ?_pinINIT_extra:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0076                     ?_EUSART_Initialize:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0076                     ?_EUSART2_Initialize:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0076                     ?_TMR1_Initialize:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0076                     ?_TMR3_Initialize:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0076                     ?_CCP9_Initialize:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0076                     ?_isr:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0076                     ?_main:	
   794                           ; 1 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0076                     	ds	1
   799  0077                     errorsISR@Tx_count:	
   800                           
   801                           ; 2 bytes @ 0x1
   802  0077                     	ds	2
   803  0079                     errorsISR@errNum:	
   804                           
   805                           ; 1 bytes @ 0x3
   806  0079                     	ds	1
   807  007A                     ??_isr:	
   808                           
   809                           ; 1 bytes @ 0x4
   810  007A                     	ds	2
   811                           
   812                           	psect	cstackBANK0
   813  0020                     __pcstackBANK0:	
   814  0020                     ??_sendAcknowledgment:	
   815  0020                     ?_sendFeedback_TO_Gateway:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     ??_GPIO_pin_Initialize:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     ??_allPeripheralInit:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0020                     ??_copyReceivedDataBuffer:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0020                     ??_errorsMain:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     ??_copyTouchpanelReceiveDataBuffer:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     ??_clearAllPorts:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     ??_pinINIT_extra:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0020                     ??_EUSART_Initialize:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     ??_EUSART2_Initialize:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     ??_TMR1_Initialize:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     ??_TMR3_Initialize:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     ??_CCP9_Initialize:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     ??_isdigit:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ?___wmul:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     sendFeedback_TO_Gateway@sw_status:	
   861                           ; 2 bytes @ 0x0
   862                           
   863  0020                     _isdigit$973:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0020                     ___wmul@multiplier:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 2 bytes @ 0x0
   871  0020                     	ds	1
   872  0021                     ??_sendFeedback_TO_Gateway:	
   873  0021                     isdigit@c:	
   874                           ; 1 bytes @ 0x1
   875                           
   876  0021                     errorsMain@Tx_count:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0021                     sendAcknowledgment@Tx_count:	
   880                           ; 2 bytes @ 0x1
   881                           
   882  0021                     copyReceivedDataBuffer@dataBufferCounter:	
   883                           ; 2 bytes @ 0x1
   884                           
   885  0021                     copyTouchpanelReceiveDataBuffer@dataBufferCounter:	
   886                           ; 2 bytes @ 0x1
   887                           
   888                           
   889                           ; 2 bytes @ 0x1
   890  0021                     	ds	1
   891  0022                     sendFeedback_TO_Gateway@sw_number:	
   892  0022                     ___wmul@multiplicand:	
   893                           ; 1 bytes @ 0x2
   894                           
   895                           
   896                           ; 2 bytes @ 0x2
   897  0022                     	ds	1
   898  0023                     ?_actiontouchPanel:	
   899  0023                     actiontouchPanel@sw_status:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0023                     errorsMain@errNum:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0023                     sendAcknowledgment@currentStateBuffer:	
   906                           ; 1 bytes @ 0x3
   907                           
   908                           
   909                           ; 1 bytes @ 0x3
   910  0023                     	ds	1
   911  0024                     ??___wmul:	
   912  0024                     actiontouchPanel@Sw_speed:	
   913                           ; 1 bytes @ 0x4
   914                           
   915  0024                     ___wmul@product:	
   916                           ; 1 bytes @ 0x4
   917                           
   918                           
   919                           ; 2 bytes @ 0x4
   920  0024                     	ds	1
   921  0025                     ??_actiontouchPanel:	
   922                           
   923                           ; 1 bytes @ 0x5
   924  0025                     	ds	1
   925  0026                     ?_atoi:	
   926  0026                     actiontouchPanel@int_swSpeed:	
   927                           ; 2 bytes @ 0x6
   928                           
   929                           
   930                           ; 2 bytes @ 0x6
   931  0026                     	ds	2
   932  0028                     ??_atoi:	
   933  0028                     actiontouchPanel@ch_sw_num:	
   934                           ; 1 bytes @ 0x8
   935                           
   936                           
   937                           ; 1 bytes @ 0x8
   938  0028                     	ds	1
   939  0029                     actiontouchPanel@SwNum:	
   940                           
   941                           ; 2 bytes @ 0x9
   942  0029                     	ds	1
   943  002A                     atoi@sign:	
   944                           
   945                           ; 1 bytes @ 0xA
   946  002A                     	ds	1
   947  002B                     actiontouchPanel@Switch_Num:	
   948  002B                     atoi@a:	
   949                           ; 1 bytes @ 0xB
   950                           
   951                           
   952                           ; 2 bytes @ 0xB
   953  002B                     	ds	1
   954  002C                     actiontouchPanel@switch_status:	
   955                           
   956                           ; 2 bytes @ 0xC
   957  002C                     	ds	1
   958  002D                     atoi@s:	
   959                           
   960                           ; 1 bytes @ 0xD
   961  002D                     	ds	1
   962  002E                     ?_applianceControl:	
   963  002E                     applianceControl@charSwitchLSB:	
   964                           ; 1 bytes @ 0xE
   965                           
   966                           
   967                           ; 1 bytes @ 0xE
   968  002E                     	ds	1
   969  002F                     applianceControl@charSwitchSTATE:	
   970                           
   971                           ; 1 bytes @ 0xF
   972  002F                     	ds	1
   973  0030                     applianceControl@chDimmerSpeedMSB:	
   974                           
   975                           ; 1 bytes @ 0x10
   976  0030                     	ds	1
   977  0031                     applianceControl@chDimmerSpeedLSB:	
   978                           
   979                           ; 1 bytes @ 0x11
   980  0031                     	ds	1
   981  0032                     applianceControl@charParentalControl:	
   982                           
   983                           ; 1 bytes @ 0x12
   984  0032                     	ds	1
   985  0033                     applianceControl@charFinalFrameState:	
   986                           
   987                           ; 1 bytes @ 0x13
   988  0033                     	ds	1
   989  0034                     ??_applianceControl:	
   990                           
   991                           ; 1 bytes @ 0x14
   992  0034                     	ds	2
   993  0036                     applianceControl@integerSpeed:	
   994                           
   995                           ; 2 bytes @ 0x16
   996  0036                     	ds	2
   997  0038                     applianceControl@charSwitchMSB:	
   998                           
   999                           ; 1 bytes @ 0x18
  1000  0038                     	ds	1
  1001  0039                     applianceControl@switchNumberStringBuffer:	
  1002                           
  1003                           ; 2 bytes @ 0x19
  1004  0039                     	ds	2
  1005  003B                     applianceControl@dimmerSpeedStringBuffer:	
  1006                           
  1007                           ; 2 bytes @ 0x1B
  1008  003B                     	ds	2
  1009  003D                     applianceControl@integerSwitchState:	
  1010                           
  1011                           ; 2 bytes @ 0x1D
  1012  003D                     	ds	2
  1013  003F                     applianceControl@integerSwitchNumber:	
  1014                           
  1015                           ; 2 bytes @ 0x1F
  1016  003F                     	ds	2
  1017  0041                     applianceControl@currentStateBufferPositions:	
  1018                           
  1019                           ; 2 bytes @ 0x21
  1020  0041                     	ds	2
  1021  0043                     ??_main:	
  1022                           
  1023                           ; 1 bytes @ 0x23
  1024  0043                     	ds	6
  1025                           
  1026                           	psect	maintext
  1027  02E0                     __pmaintext:	
  1028 ;;
  1029 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1030 ;;
  1031 ;; *************** function _main *****************
  1032 ;; Defined at:
  1033 ;;		line 869 in file "../master_eight.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  dataBufferCo    2    6[BANK1 ] int 
  1038 ;;  dataBufferCo    2    4[BANK1 ] int 
  1039 ;;  end_flag        2    2[BANK1 ] int 
  1040 ;;  start_flag      2    0[BANK1 ] int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  394[None  ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : B1F/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:       14 bytes
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		_GPIO_pin_Initialize
  1058 ;;		_actiontouchPanel
  1059 ;;		_allPeripheralInit
  1060 ;;		_applianceControl
  1061 ;;		_copyReceivedDataBuffer
  1062 ;;		_copyTouchpanelReceiveDataBuffer
  1063 ;;		_errorsMain
  1064 ;;		_sendFeedback_TO_Gateway
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _main
  1072  02E0                     _main:	
  1073                           
  1074                           ;master_eight.c: 871: M1=1; M2=1; M3=1; M4=1; M5=1;
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1078  02E0  3001               	movlw	1
  1079  02E1  0020               	movlb	0	; select bank0
  1080  02E2  00E8               	movwf	_M1
  1081  02E3  3000               	movlw	0
  1082  02E4  00E9               	movwf	_M1+1
  1083  02E5  3001               	movlw	1
  1084  02E6  00E6               	movwf	_M2
  1085  02E7  3000               	movlw	0
  1086  02E8  00E7               	movwf	_M2+1
  1087  02E9  3001               	movlw	1
  1088  02EA  0021               	movlb	1	; select bank1
  1089  02EB  00E4               	movwf	_M3^(0+128)
  1090  02EC  3000               	movlw	0
  1091  02ED  00E5               	movwf	(_M3^(0+128)+1)
  1092  02EE  3001               	movlw	1
  1093  02EF  0020               	movlb	0	; select bank0
  1094  02F0  00E4               	movwf	_M4
  1095  02F1  3000               	movlw	0
  1096  02F2  00E5               	movwf	_M4+1
  1097  02F3  3001               	movlw	1
  1098  02F4  00E2               	movwf	_M5
  1099  02F5  3000               	movlw	0
  1100  02F6  00E3               	movwf	_M5+1
  1101                           
  1102                           ;master_eight.c: 872: PORTAbits.RA2 = 0;PORTEbits.RE5 = 1;
  1103  02F7  110C               	bcf	12,2	;volatile
  1104  02F8  1690               	bsf	16,5	;volatile
  1105                           
  1106                           ;master_eight.c: 873: GPIO_pin_Initialize();
  1107  02F9  318F  27A5  3182   	fcall	_GPIO_pin_Initialize
  1108                           
  1109                           ;master_eight.c: 874: allPeripheralInit();
  1110  02FC  318F  2781  3182   	fcall	_allPeripheralInit
  1111  02FF                     l3836:	
  1112                           ;master_eight.c: 877: while(1){
  1113                           
  1114                           
  1115                           ;master_eight.c: 879: if(mainDataReceived==1){
  1116  02FF  0020               	movlb	0	; select bank0
  1117  0300  035C               	decf	_mainDataReceived,w
  1118  0301  045D               	iorwf	_mainDataReceived+1,w
  1119  0302  1D03               	btfss	3,2
  1120  0303  2B91               	goto	l3874
  1121                           
  1122                           ;master_eight.c: 880: mainDataReceived=0;
  1123  0304  01DC               	clrf	_mainDataReceived
  1124  0305  01DD               	clrf	_mainDataReceived+1
  1125                           
  1126                           ;master_eight.c: 881: checkFlag=1;
  1127  0306  3001               	movlw	1
  1128  0307  00E0               	movwf	_checkFlag
  1129  0308  3000               	movlw	0
  1130  0309  00E1               	movwf	_checkFlag+1
  1131                           
  1132                           ;master_eight.c: 882: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%
      +                          ' && mainReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1133  030A  3025               	movlw	37
  1134  030B  0022               	movlb	2	; select bank2
  1135  030C  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1136  030D  1D03               	btfss	3,2
  1137  030E  2B48               	goto	l3854
  1138  030F  3025               	movlw	37
  1139  0310  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1140  0311  1D03               	btfss	3,2
  1141  0312  2B48               	goto	l3854
  1142  0313  3040               	movlw	64
  1143  0314  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1144  0315  1D03               	btfss	3,2
  1145  0316  2B48               	goto	l3854
  1146  0317  3040               	movlw	64
  1147  0318  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1148  0319  1D03               	btfss	3,2
  1149  031A  2B48               	goto	l3854
  1150                           
  1151                           ;master_eight.c: 883: copyReceivedDataBuffer();
  1152  031B  3187  273A  3182   	fcall	_copyReceivedDataBuffer
  1153                           
  1154                           ;master_eight.c: 885: applianceControl(tempReceivedDataBuffer[0],
  1155                           ;master_eight.c: 886: tempReceivedDataBuffer[1],
  1156                           ;master_eight.c: 887: tempReceivedDataBuffer[2],
  1157                           ;master_eight.c: 888: tempReceivedDataBuffer[3],
  1158                           ;master_eight.c: 889: tempReceivedDataBuffer[4],
  1159                           ;master_eight.c: 890: tempReceivedDataBuffer[5],
  1160                           ;master_eight.c: 891: tempReceivedDataBuffer[6]);
  1161  031E  0021               	movlb	1	; select bank1
  1162  031F  0821               	movf	(_tempReceivedDataBuffer^(0+128)+1),w
  1163  0320  0020               	movlb	0	; select bank0
  1164  0321  00C3               	movwf	??_main
  1165  0322  0843               	movf	??_main,w
  1166  0323  00AE               	movwf	applianceControl@charSwitchLSB
  1167  0324  0021               	movlb	1	; select bank1
  1168  0325  0822               	movf	(_tempReceivedDataBuffer^(0+128)+2),w
  1169  0326  0020               	movlb	0	; select bank0
  1170  0327  00C4               	movwf	??_main+1
  1171  0328  0844               	movf	??_main+1,w
  1172  0329  00AF               	movwf	applianceControl@charSwitchSTATE
  1173  032A  0021               	movlb	1	; select bank1
  1174  032B  0823               	movf	(_tempReceivedDataBuffer^(0+128)+3),w
  1175  032C  0020               	movlb	0	; select bank0
  1176  032D  00C5               	movwf	??_main+2
  1177  032E  0845               	movf	??_main+2,w
  1178  032F  00B0               	movwf	applianceControl@chDimmerSpeedMSB
  1179  0330  0021               	movlb	1	; select bank1
  1180  0331  0824               	movf	(_tempReceivedDataBuffer^(0+128)+4),w
  1181  0332  0020               	movlb	0	; select bank0
  1182  0333  00C6               	movwf	??_main+3
  1183  0334  0846               	movf	??_main+3,w
  1184  0335  00B1               	movwf	applianceControl@chDimmerSpeedLSB
  1185  0336  0021               	movlb	1	; select bank1
  1186  0337  0825               	movf	(_tempReceivedDataBuffer^(0+128)+5),w
  1187  0338  0020               	movlb	0	; select bank0
  1188  0339  00C7               	movwf	??_main+4
  1189  033A  0847               	movf	??_main+4,w
  1190  033B  00B2               	movwf	applianceControl@charParentalControl
  1191  033C  0021               	movlb	1	; select bank1
  1192  033D  0826               	movf	(_tempReceivedDataBuffer^(0+128)+6),w
  1193  033E  0020               	movlb	0	; select bank0
  1194  033F  00C8               	movwf	??_main+5
  1195  0340  0848               	movf	??_main+5,w
  1196  0341  00B3               	movwf	applianceControl@charFinalFrameState
  1197  0342  0021               	movlb	1	; select bank1
  1198  0343  0820               	movf	_tempReceivedDataBuffer^(0+128),w
  1199  0344  3184  2469  3182   	fcall	_applianceControl
  1200                           
  1201                           ;master_eight.c: 893: }
  1202  0347  2B91               	goto	l3874
  1203  0348                     l3854:	
  1204                           
  1205                           ;master_eight.c: 894: else{
  1206                           ;master_eight.c: 895: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1207  0348  3045               	movlw	69
  1208  0349  0020               	movlb	0	; select bank0
  1209  034A  00C3               	movwf	??_main
  1210  034B  0843               	movf	??_main,w
  1211  034C  00F1               	movwf	_ErrorNames
  1212  034D  3052               	movlw	82
  1213  034E  00C3               	movwf	??_main
  1214  034F  0843               	movf	??_main,w
  1215  0350  00F2               	movwf	_ErrorNames+1
  1216  0351  304C               	movlw	76
  1217  0352  00C3               	movwf	??_main
  1218  0353  0843               	movf	??_main,w
  1219  0354  00F3               	movwf	_ErrorNames+2
  1220  0355  3053               	movlw	83
  1221  0356  00C3               	movwf	??_main
  1222  0357  0843               	movf	??_main,w
  1223  0358  00F4               	movwf	_ErrorNames+3
  1224                           
  1225                           ;master_eight.c: 896: errorsMain(ErrorNames);
  1226  0359  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1227  035A  3187  27B8  3182   	fcall	_errorsMain
  1228                           
  1229                           ;master_eight.c: 897: RC1STAbits.SPEN=0;
  1230  035D  0023               	movlb	3	; select bank3
  1231  035E  139D               	bcf	29,7	;volatile
  1232                           
  1233                           ;master_eight.c: 898: RC1STAbits.CREN = 0;
  1234  035F  121D               	bcf	29,4	;volatile
  1235                           
  1236                           ;master_eight.c: 899: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCo
      +                          unter++)
  1237  0360  0021               	movlb	1	; select bank1
  1238  0361  01E0               	clrf	main@dataBufferCounter^(0+128)
  1239  0362  01E1               	clrf	(main@dataBufferCounter+1)^(0+128)
  1240  0363  0861               	movf	(main@dataBufferCounter+1)^(0+128),w
  1241  0364  3A80               	xorlw	128
  1242  0365  0020               	movlb	0	; select bank0
  1243  0366  00C3               	movwf	??_main
  1244  0367  3080               	movlw	128
  1245  0368  0243               	subwf	??_main,w
  1246  0369  1D03               	skipz
  1247  036A  2B6E               	goto	u1705
  1248  036B  300F               	movlw	15
  1249  036C  0021               	movlb	1	; select bank1
  1250  036D  0260               	subwf	main@dataBufferCounter^(0+128),w
  1251  036E                     u1705:	
  1252  036E  1803               	btfsc	3,0
  1253  036F  2B8E               	goto	l400
  1254  0370                     l3868:	
  1255                           
  1256                           ;master_eight.c: 900: {
  1257                           ;master_eight.c: 901: mainReceivedDataBuffer[dataBufferCounter] = '#';
  1258  0370  3023               	movlw	35
  1259  0371  0020               	movlb	0	; select bank0
  1260  0372  00C3               	movwf	??_main
  1261  0373  0021               	movlb	1	; select bank1
  1262  0374  0860               	movf	main@dataBufferCounter^(0+128),w
  1263  0375  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1264  0376  0086               	movwf	6
  1265  0377  3001               	movlw	1	; select bank2/3
  1266  0378  0087               	movwf	7
  1267  0379  0020               	movlb	0	; select bank0
  1268  037A  0843               	movf	??_main,w
  1269  037B  0081               	movwf	1
  1270  037C  3001               	movlw	1
  1271  037D  0021               	movlb	1	; select bank1
  1272  037E  07E0               	addwf	main@dataBufferCounter^(0+128),f
  1273  037F  3000               	movlw	0
  1274  0380  3DE1               	addwfc	(main@dataBufferCounter+1)^(0+128),f
  1275  0381  0861               	movf	(main@dataBufferCounter+1)^(0+128),w
  1276  0382  3A80               	xorlw	128
  1277  0383  0020               	movlb	0	; select bank0
  1278  0384  00C3               	movwf	??_main
  1279  0385  3080               	movlw	128
  1280  0386  0243               	subwf	??_main,w
  1281  0387  1D03               	skipz
  1282  0388  2B8C               	goto	u1715
  1283  0389  300F               	movlw	15
  1284  038A  0021               	movlb	1	; select bank1
  1285  038B  0260               	subwf	main@dataBufferCounter^(0+128),w
  1286  038C                     u1715:	
  1287  038C  1C03               	skipc
  1288  038D  2B70               	goto	l3868
  1289  038E                     l400:	
  1290                           
  1291                           ;master_eight.c: 902: }
  1292                           ;master_eight.c: 903: RC1STAbits.CREN = 1;
  1293  038E  0023               	movlb	3	; select bank3
  1294  038F  161D               	bsf	29,4	;volatile
  1295                           
  1296                           ;master_eight.c: 904: RC1STAbits.SPEN=1;
  1297  0390  179D               	bsf	29,7	;volatile
  1298  0391                     l3874:	
  1299                           
  1300                           ;master_eight.c: 905: }
  1301                           ;master_eight.c: 906: }
  1302                           ;master_eight.c: 909: if(touchPanelDataReceived == 1)
  1303  0391  0020               	movlb	0	; select bank0
  1304  0392  0358               	decf	_touchPanelDataReceived,w	;volatile
  1305  0393  0459               	iorwf	_touchPanelDataReceived+1,w	;volatile
  1306  0394  1D03               	btfss	3,2
  1307  0395  2C02               	goto	l3908
  1308                           
  1309                           ;master_eight.c: 910: {
  1310                           ;master_eight.c: 912: touchPanelDataReceived = 0;
  1311  0396  01D8               	clrf	_touchPanelDataReceived	;volatile
  1312  0397  01D9               	clrf	_touchPanelDataReceived+1	;volatile
  1313                           
  1314                           ;master_eight.c: 913: int start_flag = 0;
  1315  0398  0021               	movlb	1	; select bank1
  1316  0399  01DC               	clrf	main@start_flag^(0+128)
  1317  039A  01DD               	clrf	(main@start_flag+1)^(0+128)
  1318                           
  1319                           ;master_eight.c: 914: int end_flag = 0;
  1320  039B  01DE               	clrf	main@end_flag^(0+128)
  1321  039C  01DF               	clrf	(main@end_flag+1)^(0+128)
  1322                           
  1323                           ;master_eight.c: 915: if(touchpanleReceivedDatabuffer[0] == '(' && touchpanleReceivedDat
      +                          abuffer[7] == ')')
  1324  039D  3028               	movlw	40
  1325  039E  0638               	xorwf	_touchpanleReceivedDatabuffer^(0+128),w
  1326  039F  1D03               	btfss	3,2
  1327  03A0  2BBA               	goto	l3888
  1328  03A1  3029               	movlw	41
  1329  03A2  063F               	xorwf	(_touchpanleReceivedDatabuffer^(0+128)+7),w
  1330  03A3  1D03               	btfss	3,2
  1331  03A4  2BBA               	goto	l3888
  1332                           
  1333                           ;master_eight.c: 916: {
  1334                           ;master_eight.c: 917: copyTouchpanelReceiveDataBuffer();
  1335  03A5  3187  276B  3182   	fcall	_copyTouchpanelReceiveDataBuffer
  1336                           
  1337                           ;master_eight.c: 918: if(tempReceiveTouchpanelDataBuffer[0] != '@')
  1338  03A8  3040               	movlw	64
  1339  03A9  0020               	movlb	0	; select bank0
  1340  03AA  0649               	xorwf	_tempReceiveTouchpanelDataBuffer,w
  1341  03AB  1903               	btfsc	3,2
  1342  03AC  2C02               	goto	l3908
  1343                           
  1344                           ;master_eight.c: 919: {
  1345                           ;master_eight.c: 920: actiontouchPanel(tempReceiveTouchpanelDataBuffer[0]
  1346                           ;master_eight.c: 921: ,tempReceiveTouchpanelDataBuffer[1]
  1347                           ;master_eight.c: 922: ,tempReceiveTouchpanelDataBuffer[2]);
  1348  03AD  084A               	movf	_tempReceiveTouchpanelDataBuffer+1,w
  1349  03AE  00C3               	movwf	??_main
  1350  03AF  0843               	movf	??_main,w
  1351  03B0  00A3               	movwf	actiontouchPanel@sw_status
  1352  03B1  084B               	movf	_tempReceiveTouchpanelDataBuffer+2,w
  1353  03B2  00C4               	movwf	??_main+1
  1354  03B3  0844               	movf	??_main+1,w
  1355  03B4  00A4               	movwf	actiontouchPanel@Sw_speed
  1356  03B5  0849               	movf	_tempReceiveTouchpanelDataBuffer,w
  1357  03B6  3185  259B  3182   	fcall	_actiontouchPanel
  1358                           
  1359                           ;master_eight.c: 924: }
  1360                           ;master_eight.c: 928: }
  1361  03B9  2C02               	goto	l3908
  1362  03BA                     l3888:	
  1363                           
  1364                           ;master_eight.c: 929: else
  1365                           ;master_eight.c: 930: {
  1366                           ;master_eight.c: 931: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='L'; ErrorName
      +                          s[3]='S';
  1367  03BA  3045               	movlw	69
  1368  03BB  0020               	movlb	0	; select bank0
  1369  03BC  00C3               	movwf	??_main
  1370  03BD  0843               	movf	??_main,w
  1371  03BE  00F1               	movwf	_ErrorNames
  1372  03BF  3052               	movlw	82
  1373  03C0  00C3               	movwf	??_main
  1374  03C1  0843               	movf	??_main,w
  1375  03C2  00F2               	movwf	_ErrorNames+1
  1376  03C3  304C               	movlw	76
  1377  03C4  00C3               	movwf	??_main
  1378  03C5  0843               	movf	??_main,w
  1379  03C6  00F3               	movwf	_ErrorNames+2
  1380  03C7  3053               	movlw	83
  1381  03C8  00C3               	movwf	??_main
  1382  03C9  0843               	movf	??_main,w
  1383  03CA  00F4               	movwf	_ErrorNames+3
  1384                           
  1385                           ;master_eight.c: 932: errorsMain(ErrorNames);
  1386  03CB  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  1387  03CC  3187  27B8  3182   	fcall	_errorsMain
  1388                           
  1389                           ;master_eight.c: 933: RC2STAbits.SPEN = 0;
  1390  03CF  0029               	movlb	9	; select bank9
  1391  03D0  1395               	bcf	21,7	;volatile
  1392                           
  1393                           ;master_eight.c: 934: RC2STAbits.CREN = 0;
  1394  03D1  1215               	bcf	21,4	;volatile
  1395                           
  1396                           ;master_eight.c: 935: for(int dataBufferCounter = 0; dataBufferCounter< 8; dataBufferCou
      +                          nter++)
  1397  03D2  0021               	movlb	1	; select bank1
  1398  03D3  01E2               	clrf	main@dataBufferCounter_730^(0+128)
  1399  03D4  01E3               	clrf	(main@dataBufferCounter_730+1)^(0+128)
  1400  03D5  0863               	movf	(main@dataBufferCounter_730+1)^(0+128),w
  1401  03D6  3A80               	xorlw	128
  1402  03D7  0020               	movlb	0	; select bank0
  1403  03D8  00C3               	movwf	??_main
  1404  03D9  3080               	movlw	128
  1405  03DA  0243               	subwf	??_main,w
  1406  03DB  1D03               	skipz
  1407  03DC  2BE0               	goto	u1765
  1408  03DD  3008               	movlw	8
  1409  03DE  0021               	movlb	1	; select bank1
  1410  03DF  0262               	subwf	main@dataBufferCounter_730^(0+128),w
  1411  03E0                     u1765:	
  1412  03E0  1803               	btfsc	3,0
  1413  03E1  2BFF               	goto	l406
  1414  03E2                     l3902:	
  1415                           
  1416                           ;master_eight.c: 936: {
  1417                           ;master_eight.c: 937: touchpanleReceivedDatabuffer[dataBufferCounter] = '#';
  1418  03E2  3023               	movlw	35
  1419  03E3  0020               	movlb	0	; select bank0
  1420  03E4  00C3               	movwf	??_main
  1421  03E5  0021               	movlb	1	; select bank1
  1422  03E6  0862               	movf	main@dataBufferCounter_730^(0+128),w
  1423  03E7  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1424  03E8  0086               	movwf	6
  1425  03E9  0187               	clrf	7
  1426  03EA  0020               	movlb	0	; select bank0
  1427  03EB  0843               	movf	??_main,w
  1428  03EC  0081               	movwf	1
  1429  03ED  3001               	movlw	1
  1430  03EE  0021               	movlb	1	; select bank1
  1431  03EF  07E2               	addwf	main@dataBufferCounter_730^(0+128),f
  1432  03F0  3000               	movlw	0
  1433  03F1  3DE3               	addwfc	(main@dataBufferCounter_730+1)^(0+128),f
  1434  03F2  0863               	movf	(main@dataBufferCounter_730+1)^(0+128),w
  1435  03F3  3A80               	xorlw	128
  1436  03F4  0020               	movlb	0	; select bank0
  1437  03F5  00C3               	movwf	??_main
  1438  03F6  3080               	movlw	128
  1439  03F7  0243               	subwf	??_main,w
  1440  03F8  1D03               	skipz
  1441  03F9  2BFD               	goto	u1775
  1442  03FA  3008               	movlw	8
  1443  03FB  0021               	movlb	1	; select bank1
  1444  03FC  0262               	subwf	main@dataBufferCounter_730^(0+128),w
  1445  03FD                     u1775:	
  1446  03FD  1C03               	skipc
  1447  03FE  2BE2               	goto	l3902
  1448  03FF                     l406:	
  1449                           
  1450                           ;master_eight.c: 938: }
  1451                           ;master_eight.c: 939: RC2STAbits.CREN = 1;
  1452  03FF  0029               	movlb	9	; select bank9
  1453  0400  1615               	bsf	21,4	;volatile
  1454                           
  1455                           ;master_eight.c: 940: RC2STAbits.SPEN=1;
  1456  0401  1795               	bsf	21,7	;volatile
  1457  0402                     l3908:	
  1458                           
  1459                           ;master_eight.c: 941: }
  1460                           ;master_eight.c: 943: }
  1461                           ;master_eight.c: 946: if(copy_parentalLockBuffer[1] == '0' && M4 == 1 && PORTAbits.RA5 =
      +                          = 1)
  1462  0402  3030               	movlw	48
  1463  0403  0021               	movlb	1	; select bank1
  1464  0404  0649               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1465  0405  1D03               	btfss	3,2
  1466  0406  2C19               	goto	l3920
  1467  0407  0020               	movlb	0	; select bank0
  1468  0408  0364               	decf	_M4,w
  1469  0409  0465               	iorwf	_M4+1,w
  1470  040A  1903               	btfsc	3,2
  1471  040B  1E8C               	btfss	12,5	;volatile
  1472  040C  2C19               	goto	l3920
  1473                           
  1474                           ;master_eight.c: 947: {
  1475                           ;master_eight.c: 949: sendFeedback_TO_Gateway('1','1');
  1476  040D  3031               	movlw	49
  1477  040E  00C3               	movwf	??_main
  1478  040F  0843               	movf	??_main,w
  1479  0410  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  1480  0411  3031               	movlw	49
  1481  0412  3187  2705  3182   	fcall	_sendFeedback_TO_Gateway
  1482                           
  1483                           ;master_eight.c: 950: PORTEbits.RE5= 1;
  1484  0415  0020               	movlb	0	; select bank0
  1485  0416  1690               	bsf	16,5	;volatile
  1486                           
  1487                           ;master_eight.c: 951: M4 = 0;
  1488  0417  01E4               	clrf	_M4
  1489  0418  01E5               	clrf	_M4+1
  1490  0419                     l3920:	
  1491                           
  1492                           ;master_eight.c: 952: }
  1493                           ;master_eight.c: 953: if(copy_parentalLockBuffer[1] == '0' && M4 == 0 && PORTAbits.RA5 =
      +                          = 0)
  1494  0419  3030               	movlw	48
  1495  041A  0021               	movlb	1	; select bank1
  1496  041B  0649               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1497  041C  1D03               	btfss	3,2
  1498  041D  2C32               	goto	l3932
  1499  041E  0020               	movlb	0	; select bank0
  1500  041F  0864               	movf	_M4,w
  1501  0420  0465               	iorwf	_M4+1,w
  1502  0421  1903               	btfsc	3,2
  1503  0422  1A8C               	btfsc	12,5	;volatile
  1504  0423  2C32               	goto	l3932
  1505                           
  1506                           ;master_eight.c: 954: {
  1507                           ;master_eight.c: 956: sendFeedback_TO_Gateway('1','0');
  1508  0424  3030               	movlw	48
  1509  0425  00C3               	movwf	??_main
  1510  0426  0843               	movf	??_main,w
  1511  0427  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  1512  0428  3031               	movlw	49
  1513  0429  3187  2705  3182   	fcall	_sendFeedback_TO_Gateway
  1514                           
  1515                           ;master_eight.c: 957: PORTEbits.RE5= 0;
  1516  042C  0020               	movlb	0	; select bank0
  1517  042D  1290               	bcf	16,5	;volatile
  1518                           
  1519                           ;master_eight.c: 958: M4 = 1;
  1520  042E  3001               	movlw	1
  1521  042F  00E4               	movwf	_M4
  1522  0430  3000               	movlw	0
  1523  0431  00E5               	movwf	_M4+1
  1524  0432                     l3932:	
  1525                           
  1526                           ;master_eight.c: 959: }
  1527                           ;master_eight.c: 961: if(copy_parentalLockBuffer[2] == '0' && M5 == 1 && PORTFbits.RF2 =
      +                          = 1)
  1528  0432  3030               	movlw	48
  1529  0433  0021               	movlb	1	; select bank1
  1530  0434  064A               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  1531  0435  1D03               	btfss	3,2
  1532  0436  2C4C               	goto	l3944
  1533  0437  0020               	movlb	0	; select bank0
  1534  0438  0362               	decf	_M5,w
  1535  0439  0463               	iorwf	_M5+1,w
  1536  043A  1D03               	btfss	3,2
  1537  043B  2C4C               	goto	l3944
  1538  043C  0025               	movlb	5	; select bank5
  1539  043D  1D0C               	btfss	12,2	;volatile
  1540  043E  2C4C               	goto	l3944
  1541                           
  1542                           ;master_eight.c: 962: {
  1543                           ;master_eight.c: 964: sendFeedback_TO_Gateway('2','1');
  1544  043F  3031               	movlw	49
  1545  0440  0020               	movlb	0	; select bank0
  1546  0441  00C3               	movwf	??_main
  1547  0442  0843               	movf	??_main,w
  1548  0443  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  1549  0444  3032               	movlw	50
  1550  0445  3187  2705  3182   	fcall	_sendFeedback_TO_Gateway
  1551                           
  1552                           ;master_eight.c: 965: PORTAbits.RA2= 1;
  1553  0448  0020               	movlb	0	; select bank0
  1554  0449  150C               	bsf	12,2	;volatile
  1555                           
  1556                           ;master_eight.c: 966: M5 = 0;
  1557  044A  01E2               	clrf	_M5
  1558  044B  01E3               	clrf	_M5+1
  1559  044C                     l3944:	
  1560                           
  1561                           ;master_eight.c: 967: }
  1562                           ;master_eight.c: 968: if(copy_parentalLockBuffer[1] == '0' && M5 == 0 && PORTFbits.RF2 =
      +                          = 0)
  1563  044C  3030               	movlw	48
  1564  044D  0021               	movlb	1	; select bank1
  1565  044E  0649               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1566  044F  1D03               	btfss	3,2
  1567  0450  2AFF               	goto	l3836
  1568  0451  0020               	movlb	0	; select bank0
  1569  0452  0862               	movf	_M5,w
  1570  0453  0463               	iorwf	_M5+1,w
  1571  0454  1D03               	btfss	3,2
  1572  0455  2AFF               	goto	l3836
  1573  0456  0025               	movlb	5	; select bank5
  1574  0457  190C               	btfsc	12,2	;volatile
  1575  0458  2AFF               	goto	l3836
  1576                           
  1577                           ;master_eight.c: 969: {
  1578                           ;master_eight.c: 971: sendFeedback_TO_Gateway('2','0');
  1579  0459  3030               	movlw	48
  1580  045A  0020               	movlb	0	; select bank0
  1581  045B  00C3               	movwf	??_main
  1582  045C  0843               	movf	??_main,w
  1583  045D  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  1584  045E  3032               	movlw	50
  1585  045F  3187  2705  3182   	fcall	_sendFeedback_TO_Gateway
  1586                           
  1587                           ;master_eight.c: 972: PORTAbits.RA2= 0;
  1588  0462  0020               	movlb	0	; select bank0
  1589  0463  110C               	bcf	12,2	;volatile
  1590                           
  1591                           ;master_eight.c: 973: M5 = 1;
  1592  0464  3001               	movlw	1
  1593  0465  00E2               	movwf	_M5
  1594  0466  3000               	movlw	0
  1595  0467  00E3               	movwf	_M5+1
  1596  0468  2AFF               	goto	l3836
  1597  0469                     __end_of_main:	
  1598                           
  1599                           	psect	text1
  1600  07B8                     __ptext1:	
  1601 ;; *************** function _errorsMain *****************
  1602 ;; Defined at:
  1603 ;;		line 1216 in file "../master_eight.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  errNum          1    wreg     PTR unsigned char 
  1606 ;;		 -> ErrorNames(5), 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  errNum          1    3[BANK0 ] PTR unsigned char 
  1609 ;;		 -> ErrorNames(5), 
  1610 ;;  Tx_count        2    1[BANK0 ] int 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1621 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  1622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1623 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  1624 ;;Total ram usage:        4 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    2
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _errorsMain
  1636  07B8                     _errorsMain:	
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _errorsMain: [wreg+fsr1l+fsr1h+status,2+status,0]
  1640                           ;errorsMain@errNum stored from wreg
  1641  07B8  0020               	movlb	0	; select bank0
  1642  07B9  00A3               	movwf	errorsMain@errNum
  1643                           
  1644                           ;master_eight.c: 1217: int Tx_count=0;
  1645  07BA  01A1               	clrf	errorsMain@Tx_count
  1646  07BB  01A2               	clrf	errorsMain@Tx_count+1
  1647  07BC                     l3816:	
  1648                           ;master_eight.c: 1218: while(Tx_count!=4)
  1649                           
  1650  07BC  3004               	movlw	4
  1651  07BD  0621               	xorwf	errorsMain@Tx_count,w
  1652  07BE  0422               	iorwf	errorsMain@Tx_count+1,w
  1653  07BF  1903               	btfsc	3,2
  1654  07C0  0008               	return
  1655  07C1                     l457:	
  1656                           ;master_eight.c: 1219: {
  1657                           ;master_eight.c: 1220: while (!TX1STAbits.TRMT);
  1658                           
  1659  07C1  0023               	movlb	3	; select bank3
  1660  07C2  1C9E               	btfss	30,1	;volatile
  1661  07C3  2FC1               	goto	l457
  1662                           
  1663                           ;master_eight.c: 1221: TX1REG = *errNum;
  1664  07C4  0020               	movlb	0	; select bank0
  1665  07C5  0823               	movf	errorsMain@errNum,w
  1666  07C6  0086               	movwf	6
  1667  07C7  0187               	clrf	7
  1668  07C8  0801               	movf	1,w
  1669  07C9  0023               	movlb	3	; select bank3
  1670  07CA  009A               	movwf	26	;volatile
  1671                           
  1672                           ;master_eight.c: 1222: *errNum++;
  1673  07CB  3001               	movlw	1
  1674  07CC  0020               	movlb	0	; select bank0
  1675  07CD  00A0               	movwf	??_errorsMain
  1676  07CE  0820               	movf	??_errorsMain,w
  1677  07CF  07A3               	addwf	errorsMain@errNum,f
  1678                           
  1679                           ;master_eight.c: 1223: Tx_count++;
  1680  07D0  3001               	movlw	1
  1681  07D1  07A1               	addwf	errorsMain@Tx_count,f
  1682  07D2  3000               	movlw	0
  1683  07D3  3DA2               	addwfc	errorsMain@Tx_count+1,f
  1684  07D4  2FBC               	goto	l3816
  1685  07D5                     __end_of_errorsMain:	
  1686                           
  1687                           	psect	text2
  1688  076B                     __ptext2:	
  1689 ;; *************** function _copyTouchpanelReceiveDataBuffer *****************
  1690 ;; Defined at:
  1691 ;;		line 1245 in file "../master_eight.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  dataBufferCo    2    1[BANK0 ] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1708 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    2
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _copyTouchpanelReceiveDataBuffer
  1721  076B                     _copyTouchpanelReceiveDataBuffer:	
  1722                           
  1723                           ;master_eight.c: 1247: int dataBufferCounter=2;
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _copyTouchpanelReceiveDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1727  076B  3002               	movlw	2
  1728  076C  0020               	movlb	0	; select bank0
  1729  076D  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1730  076E  3000               	movlw	0
  1731  076F  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1732                           
  1733                           ;master_eight.c: 1248: for(dataBufferCounter=2; dataBufferCounter<5;dataBufferCounter++)
  1734  0770  3002               	movlw	2
  1735  0771  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1736  0772  3000               	movlw	0
  1737  0773  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1738  0774                     L1:	
  1739  0774  0822               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,w
  1740  0775  3A80               	xorlw	128
  1741  0776  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1742  0777  3080               	movlw	128
  1743  0778  0220               	subwf	??_copyTouchpanelReceiveDataBuffer,w
  1744  0779  1D03               	skipz
  1745  077A  2F7D               	goto	u1635
  1746  077B  3005               	movlw	5
  1747  077C  0221               	subwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1748  077D                     u1635:	
  1749  077D  1803               	btfsc	3,0
  1750  077E  0008               	return
  1751                           
  1752                           ;master_eight.c: 1249: {
  1753                           ;master_eight.c: 1250: tempReceiveTouchpanelDataBuffer[dataBufferCounter-2] = touchpanle
      +                          ReceivedDatabuffer[dataBufferCounter];
  1754  077F  0020               	movlb	0	; select bank0
  1755  0780  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1756  0781  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1757  0782  0086               	movwf	6
  1758  0783  0187               	clrf	7
  1759  0784  0801               	movf	1,w
  1760  0785  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1761  0786  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1762  0787  3EFE               	addlw	254
  1763  0788  3E49               	addlw	(low (_tempReceiveTouchpanelDataBuffer| 0))& (0+255)
  1764  0789  0086               	movwf	6
  1765  078A  0187               	clrf	7
  1766  078B  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  1767  078C  0081               	movwf	1
  1768                           
  1769                           ;master_eight.c: 1251: touchpanleReceivedDatabuffer[dataBufferCounter] = "#";
  1770  078D  3000               	movlw	(low (STR_1| (0+32768)))& (0+255)
  1771  078E  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1772  078F  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1773  0790  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  1774  0791  0086               	movwf	6
  1775  0792  0187               	clrf	7
  1776  0793  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  1777  0794  0081               	movwf	1
  1778  0795  3001               	movlw	1
  1779  0796  07A1               	addwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,f
  1780  0797  3000               	movlw	0
  1781  0798  3DA2               	addwfc	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,f
  1782  0799  2F74               	goto	L1
  1783  079A                     __end_of_copyTouchpanelReceiveDataBuffer:	
  1784                           
  1785                           	psect	text3
  1786  073A                     __ptext3:	
  1787 ;; *************** function _copyReceivedDataBuffer *****************
  1788 ;; Defined at:
  1789 ;;		line 1238 in file "../master_eight.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  dataBufferCo    2    1[BANK0 ] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        3 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _copyReceivedDataBuffer
  1819  073A                     _copyReceivedDataBuffer:	
  1820                           
  1821                           ;master_eight.c: 1239: int dataBufferCounter=2;
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1825  073A  3002               	movlw	2
  1826  073B  0020               	movlb	0	; select bank0
  1827  073C  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  1828  073D  3000               	movlw	0
  1829  073E  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  1830                           
  1831                           ;master_eight.c: 1240: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  1832  073F  3002               	movlw	2
  1833  0740  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  1834  0741  3000               	movlw	0
  1835  0742  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  1836  0743                     L2:	
  1837  0743  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  1838  0744  3A80               	xorlw	128
  1839  0745  00A0               	movwf	??_copyReceivedDataBuffer
  1840  0746  3080               	movlw	128
  1841  0747  0220               	subwf	??_copyReceivedDataBuffer,w
  1842  0748  1D03               	skipz
  1843  0749  2F4C               	goto	u1595
  1844  074A  3009               	movlw	9
  1845  074B  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  1846  074C                     u1595:	
  1847  074C  1803               	btfsc	3,0
  1848  074D  0008               	return
  1849                           
  1850                           ;master_eight.c: 1241: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffe
      +                          r[dataBufferCounter];
  1851  074E  0020               	movlb	0	; select bank0
  1852  074F  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1853  0750  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1854  0751  0086               	movwf	6
  1855  0752  3001               	movlw	1	; select bank2/3
  1856  0753  0087               	movwf	7
  1857  0754  0801               	movf	1,w
  1858  0755  00A0               	movwf	??_copyReceivedDataBuffer
  1859  0756  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1860  0757  3EFE               	addlw	254
  1861  0758  3EA0               	addlw	(low (_tempReceivedDataBuffer| 0))& (0+255)
  1862  0759  0086               	movwf	6
  1863  075A  0187               	clrf	7
  1864  075B  0820               	movf	??_copyReceivedDataBuffer,w
  1865  075C  0081               	movwf	1
  1866                           
  1867                           ;master_eight.c: 1242: mainReceivedDataBuffer[dataBufferCounter]='#';
  1868  075D  3023               	movlw	35
  1869  075E  00A0               	movwf	??_copyReceivedDataBuffer
  1870  075F  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  1871  0760  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1872  0761  0086               	movwf	6
  1873  0762  3001               	movlw	1	; select bank2/3
  1874  0763  0087               	movwf	7
  1875  0764  0820               	movf	??_copyReceivedDataBuffer,w
  1876  0765  0081               	movwf	1
  1877  0766  3001               	movlw	1
  1878  0767  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  1879  0768  3000               	movlw	0
  1880  0769  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  1881  076A  2F43               	goto	L2
  1882  076B                     __end_of_copyReceivedDataBuffer:	
  1883                           
  1884                           	psect	text4
  1885  0469                     __ptext4:	
  1886 ;; *************** function _applianceControl *****************
  1887 ;; Defined at:
  1888 ;;		line 9 in file "../application.h"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  charSwitchMS    1    wreg     unsigned char 
  1891 ;;  charSwitchLS    1   14[BANK0 ] unsigned char 
  1892 ;;  charSwitchST    1   15[BANK0 ] unsigned char 
  1893 ;;  chDimmerSpee    1   16[BANK0 ] unsigned char 
  1894 ;;  chDimmerSpee    1   17[BANK0 ] unsigned char 
  1895 ;;  charParental    1   18[BANK0 ] unsigned char 
  1896 ;;  charFinalFra    1   19[BANK0 ] unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  charSwitchMS    1   24[BANK0 ] unsigned char 
  1899 ;;  currentState    2   33[BANK0 ] int 
  1900 ;;  integerSwitc    2   31[BANK0 ] int 
  1901 ;;  dimmerSpeedS    2   27[BANK0 ] unsigned char [2]
  1902 ;;  switchNumber    2   25[BANK0 ] unsigned char [2]
  1903 ;;  integerSwitc    2   29[BANK0 ] int 
  1904 ;;  integerSpeed    2   22[BANK0 ] int 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1914 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:       21 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		_atoi
  1923 ;;		_sendAcknowledgment
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _applianceControl
  1931  0469                     _applianceControl:	
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1935                           ;applianceControl@charSwitchMSB stored from wreg
  1936  0469  0020               	movlb	0	; select bank0
  1937  046A  00B8               	movwf	applianceControl@charSwitchMSB
  1938                           
  1939                           ;application.h: 13: int integerSwitchNumber = 0;
  1940  046B  01BF               	clrf	applianceControl@integerSwitchNumber
  1941  046C  01C0               	clrf	applianceControl@integerSwitchNumber+1
  1942                           
  1943                           ;application.h: 14: int integerSwitchState = 0;
  1944  046D  01BD               	clrf	applianceControl@integerSwitchState
  1945  046E  01BE               	clrf	applianceControl@integerSwitchState+1
  1946                           
  1947                           ;application.h: 15: int integerSpeed = 0;
  1948  046F  01B6               	clrf	applianceControl@integerSpeed
  1949  0470  01B7               	clrf	applianceControl@integerSpeed+1
  1950                           
  1951                           ;application.h: 16: int currentStateBufferPositions=0;
  1952  0471  01C1               	clrf	applianceControl@currentStateBufferPositions
  1953  0472  01C2               	clrf	applianceControl@currentStateBufferPositions+1
  1954                           
  1955                           ;application.h: 19: char switchNumberStringBuffer[2]="#";
  1956  0473  0854               	movf	applianceControl@F3724+1,w
  1957  0474  00BA               	movwf	applianceControl@switchNumberStringBuffer+1
  1958  0475  0853               	movf	applianceControl@F3724,w
  1959  0476  00B9               	movwf	applianceControl@switchNumberStringBuffer
  1960                           
  1961                           ;application.h: 20: char dimmerSpeedStringBuffer[2]="#";
  1962  0477  0852               	movf	applianceControl@F3726+1,w
  1963  0478  00BC               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  1964  0479  0851               	movf	applianceControl@F3726,w
  1965  047A  00BB               	movwf	applianceControl@dimmerSpeedStringBuffer
  1966                           
  1967                           ;application.h: 22: switchNumberStringBuffer[0]=charSwitchMSB;
  1968  047B  0838               	movf	applianceControl@charSwitchMSB,w
  1969  047C  00B4               	movwf	??_applianceControl
  1970  047D  0834               	movf	??_applianceControl,w
  1971  047E  00B9               	movwf	applianceControl@switchNumberStringBuffer
  1972                           
  1973                           ;application.h: 23: switchNumberStringBuffer[1]=charSwitchLSB;
  1974  047F  082E               	movf	applianceControl@charSwitchLSB,w
  1975  0480  00B4               	movwf	??_applianceControl
  1976  0481  0834               	movf	??_applianceControl,w
  1977  0482  00BA               	movwf	applianceControl@switchNumberStringBuffer+1
  1978                           
  1979                           ;application.h: 24: integerSwitchNumber = atoi(switchNumberStringBuffer);
  1980  0483  3039               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  1981  0484  3186  2614  3184   	fcall	_atoi
  1982  0487  0020               	movlb	0	; select bank0
  1983  0488  0827               	movf	?_atoi+1,w
  1984  0489  00C0               	movwf	applianceControl@integerSwitchNumber+1
  1985  048A  0826               	movf	?_atoi,w
  1986  048B  00BF               	movwf	applianceControl@integerSwitchNumber
  1987                           
  1988                           ;application.h: 28: integerSwitchState = charSwitchSTATE-'0';
  1989  048C  082F               	movf	applianceControl@charSwitchSTATE,w
  1990  048D  3ED0               	addlw	208
  1991  048E  00BD               	movwf	applianceControl@integerSwitchState
  1992  048F  30FF               	movlw	255
  1993  0490  1803               	skipnc
  1994  0491  3000               	movlw	0
  1995  0492  00BE               	movwf	applianceControl@integerSwitchState+1
  1996                           
  1997                           ;application.h: 31: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  1998  0493  0830               	movf	applianceControl@chDimmerSpeedMSB,w
  1999  0494  00B4               	movwf	??_applianceControl
  2000  0495  0834               	movf	??_applianceControl,w
  2001  0496  00BB               	movwf	applianceControl@dimmerSpeedStringBuffer
  2002                           
  2003                           ;application.h: 32: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  2004  0497  0831               	movf	applianceControl@chDimmerSpeedLSB,w
  2005  0498  00B4               	movwf	??_applianceControl
  2006  0499  0834               	movf	??_applianceControl,w
  2007  049A  00BC               	movwf	applianceControl@dimmerSpeedStringBuffer+1
  2008                           
  2009                           ;application.h: 33: integerSpeed = atoi(dimmerSpeedStringBuffer);
  2010  049B  303B               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  2011  049C  3186  2614  3184   	fcall	_atoi
  2012  049F  0020               	movlb	0	; select bank0
  2013  04A0  0827               	movf	?_atoi+1,w
  2014  04A1  00B7               	movwf	applianceControl@integerSpeed+1
  2015  04A2  0826               	movf	?_atoi,w
  2016  04A3  00B6               	movwf	applianceControl@integerSpeed
  2017                           
  2018                           ;application.h: 37: parentalLockBuffer[integerSwitchNumber] = charParentalControl;
  2019  04A4  0832               	movf	applianceControl@charParentalControl,w
  2020  04A5  00B4               	movwf	??_applianceControl
  2021  04A6  083F               	movf	applianceControl@integerSwitchNumber,w
  2022  04A7  3ED2               	addlw	(low (_parentalLockBuffer| 0))& (0+255)
  2023  04A8  0086               	movwf	6
  2024  04A9  0187               	clrf	7
  2025  04AA  0834               	movf	??_applianceControl,w
  2026  04AB  0081               	movwf	1
  2027                           
  2028                           ;application.h: 38: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuffer[inte
      +                          gerSwitchNumber];
  2029  04AC  083F               	movf	applianceControl@integerSwitchNumber,w
  2030  04AD  3ED2               	addlw	(low (_parentalLockBuffer| 0))& (0+255)
  2031  04AE  0086               	movwf	6
  2032  04AF  0187               	clrf	7
  2033  04B0  0801               	movf	1,w
  2034  04B1  00B4               	movwf	??_applianceControl
  2035  04B2  083F               	movf	applianceControl@integerSwitchNumber,w
  2036  04B3  3EC8               	addlw	(low (_copy_parentalLockBuffer| 0))& (0+255)
  2037  04B4  0086               	movwf	6
  2038  04B5  0187               	clrf	7
  2039  04B6  0834               	movf	??_applianceControl,w
  2040  04B7  0081               	movwf	1
  2041                           
  2042                           ;application.h: 41: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5);
  2043  04B8  0840               	movf	applianceControl@integerSwitchNumber+1,w
  2044  04B9  00B5               	movwf	??_applianceControl+1
  2045  04BA  083F               	movf	applianceControl@integerSwitchNumber,w
  2046  04BB  00B4               	movwf	??_applianceControl
  2047  04BC  35B4               	lslf	??_applianceControl,f
  2048  04BD  0DB5               	rlf	??_applianceControl+1,f
  2049  04BE  35B4               	lslf	??_applianceControl,f
  2050  04BF  0DB5               	rlf	??_applianceControl+1,f
  2051  04C0  0834               	movf	??_applianceControl,w
  2052  04C1  3EFC               	addlw	252
  2053  04C2  00C1               	movwf	applianceControl@currentStateBufferPositions
  2054  04C3  30FF               	movlw	255
  2055  04C4  3D35               	addwfc	??_applianceControl+1,w
  2056  04C5  00C2               	movwf	applianceControl@currentStateBufferPositions+1
  2057                           
  2058                           ;application.h: 42: currentStateBuffer[currentStateBufferPositions++] = 'G';
  2059  04C6  3047               	movlw	71
  2060  04C7  00B4               	movwf	??_applianceControl
  2061  04C8  0841               	movf	applianceControl@currentStateBufferPositions,w
  2062  04C9  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2063  04CA  0086               	movwf	6
  2064  04CB  3001               	movlw	1	; select bank2/3
  2065  04CC  0087               	movwf	7
  2066  04CD  0834               	movf	??_applianceControl,w
  2067  04CE  0081               	movwf	1
  2068  04CF  3001               	movlw	1
  2069  04D0  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  2070  04D1  3000               	movlw	0
  2071  04D2  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  2072                           
  2073                           ;application.h: 43: currentStateBuffer[currentStateBufferPositions++] = charSwitchSTATE;
  2074  04D3  082F               	movf	applianceControl@charSwitchSTATE,w
  2075  04D4  00B4               	movwf	??_applianceControl
  2076  04D5  0841               	movf	applianceControl@currentStateBufferPositions,w
  2077  04D6  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2078  04D7  0086               	movwf	6
  2079  04D8  3001               	movlw	1	; select bank2/3
  2080  04D9  0087               	movwf	7
  2081  04DA  0834               	movf	??_applianceControl,w
  2082  04DB  0081               	movwf	1
  2083  04DC  3001               	movlw	1
  2084  04DD  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  2085  04DE  3000               	movlw	0
  2086  04DF  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  2087                           
  2088                           ;application.h: 44: currentStateBuffer[currentStateBufferPositions++] = charSwitchMSB;
  2089  04E0  0838               	movf	applianceControl@charSwitchMSB,w
  2090  04E1  00B4               	movwf	??_applianceControl
  2091  04E2  0841               	movf	applianceControl@currentStateBufferPositions,w
  2092  04E3  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2093  04E4  0086               	movwf	6
  2094  04E5  3001               	movlw	1	; select bank2/3
  2095  04E6  0087               	movwf	7
  2096  04E7  0834               	movf	??_applianceControl,w
  2097  04E8  0081               	movwf	1
  2098  04E9  3001               	movlw	1
  2099  04EA  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  2100  04EB  3000               	movlw	0
  2101  04EC  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  2102                           
  2103                           ;application.h: 45: currentStateBuffer[currentStateBufferPositions] = charSwitchLSB;
  2104  04ED  082E               	movf	applianceControl@charSwitchLSB,w
  2105  04EE  00B4               	movwf	??_applianceControl
  2106  04EF  0841               	movf	applianceControl@currentStateBufferPositions,w
  2107  04F0  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2108  04F1  0086               	movwf	6
  2109  04F2  3001               	movlw	1	; select bank2/3
  2110  04F3  0087               	movwf	7
  2111  04F4  0834               	movf	??_applianceControl,w
  2112  04F5  0081               	movwf	1
  2113                           
  2114                           ;application.h: 47: currentStateBufferPositions-=3;
  2115  04F6  30FD               	movlw	253
  2116  04F7  07C1               	addwf	applianceControl@currentStateBufferPositions,f
  2117  04F8  30FF               	movlw	255
  2118  04F9  3DC2               	addwfc	applianceControl@currentStateBufferPositions+1,f
  2119                           
  2120                           ;application.h: 48: if(charFinalFrameState=='1')
  2121  04FA  3031               	movlw	49
  2122  04FB  0633               	xorwf	applianceControl@charFinalFrameState,w
  2123  04FC  1D03               	btfss	3,2
  2124  04FD  2D8C               	goto	l3726
  2125                           
  2126                           ;application.h: 49: {
  2127                           ;application.h: 50: sendAcknowledgment(currentStateBuffer+currentStateBufferPositions);
  2128  04FE  0841               	movf	applianceControl@currentStateBufferPositions,w
  2129  04FF  3E40               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2130  0500  3187  279A  3184   	fcall	_sendAcknowledgment
  2131                           
  2132                           ;application.h: 51: _delay((unsigned long)((5)*(16000000/4000.0)));
  2133  0503  301A               	movlw	26
  2134  0504  0020               	movlb	0	; select bank0
  2135  0505  00B4               	movwf	??_applianceControl
  2136  0506  30F8               	movlw	248
  2137  0507                     u1907:	
  2138  0507  0B89               	decfsz	9,f
  2139  0508  2D07               	goto	u1907
  2140  0509  0BB4               	decfsz	??_applianceControl,f
  2141  050A  2D07               	goto	u1907
  2142  050B  0000               	nop
  2143                           
  2144                           ;application.h: 52: TX2REG = '(' ;
  2145  050C  3028               	movlw	40
  2146  050D  0029               	movlb	9	; select bank9
  2147  050E  0092               	movwf	18	;volatile
  2148                           
  2149                           ;application.h: 53: _delay((unsigned long)((1)*(16000000/4000.0)));
  2150  050F  3006               	movlw	6
  2151  0510  0020               	movlb	0	; select bank0
  2152  0511  00B4               	movwf	??_applianceControl
  2153  0512  3030               	movlw	48
  2154  0513                     u1917:	
  2155  0513  0B89               	decfsz	9,f
  2156  0514  2D13               	goto	u1917
  2157  0515  0BB4               	decfsz	??_applianceControl,f
  2158  0516  2D13               	goto	u1917
  2159  0517  0000               	nop
  2160                           
  2161                           ;application.h: 54: TX2REG = 'b' ;
  2162  0518  3062               	movlw	98
  2163  0519  0029               	movlb	9	; select bank9
  2164  051A  0092               	movwf	18	;volatile
  2165                           
  2166                           ;application.h: 55: _delay((unsigned long)((1)*(16000000/4000.0)));
  2167  051B  3006               	movlw	6
  2168  051C  0020               	movlb	0	; select bank0
  2169  051D  00B4               	movwf	??_applianceControl
  2170  051E  3030               	movlw	48
  2171  051F                     u1927:	
  2172  051F  0B89               	decfsz	9,f
  2173  0520  2D1F               	goto	u1927
  2174  0521  0BB4               	decfsz	??_applianceControl,f
  2175  0522  2D1F               	goto	u1927
  2176  0523  0000               	nop
  2177                           
  2178                           ;application.h: 56: TX2REG =charSwitchLSB + 16 ;
  2179  0524  0020               	movlb	0	; select bank0
  2180  0525  082E               	movf	applianceControl@charSwitchLSB,w
  2181  0526  3E10               	addlw	16
  2182  0527  0029               	movlb	9	; select bank9
  2183  0528  0092               	movwf	18	;volatile
  2184                           
  2185                           ;application.h: 57: _delay((unsigned long)((1)*(16000000/4000.0)));
  2186  0529  3006               	movlw	6
  2187  052A  0020               	movlb	0	; select bank0
  2188  052B  00B4               	movwf	??_applianceControl
  2189  052C  3030               	movlw	48
  2190  052D                     u1937:	
  2191  052D  0B89               	decfsz	9,f
  2192  052E  2D2D               	goto	u1937
  2193  052F  0BB4               	decfsz	??_applianceControl,f
  2194  0530  2D2D               	goto	u1937
  2195  0531  0000               	nop
  2196                           
  2197                           ;application.h: 58: TX2REG=charSwitchSTATE;
  2198  0532  0020               	movlb	0	; select bank0
  2199  0533  082F               	movf	applianceControl@charSwitchSTATE,w
  2200  0534  0029               	movlb	9	; select bank9
  2201  0535  0092               	movwf	18	;volatile
  2202                           
  2203                           ;application.h: 59: _delay((unsigned long)((1)*(16000000/4000.0)));
  2204  0536  3006               	movlw	6
  2205  0537  0020               	movlb	0	; select bank0
  2206  0538  00B4               	movwf	??_applianceControl
  2207  0539  3030               	movlw	48
  2208  053A                     u1947:	
  2209  053A  0B89               	decfsz	9,f
  2210  053B  2D3A               	goto	u1947
  2211  053C  0BB4               	decfsz	??_applianceControl,f
  2212  053D  2D3A               	goto	u1947
  2213  053E  0000               	nop
  2214                           
  2215                           ;application.h: 60: TX2REG='0';
  2216  053F  3030               	movlw	48
  2217  0540  0029               	movlb	9	; select bank9
  2218  0541  0092               	movwf	18	;volatile
  2219                           
  2220                           ;application.h: 61: _delay((unsigned long)((1)*(16000000/4000.0)));
  2221  0542  3006               	movlw	6
  2222  0543  0020               	movlb	0	; select bank0
  2223  0544  00B4               	movwf	??_applianceControl
  2224  0545  3030               	movlw	48
  2225  0546                     u1957:	
  2226  0546  0B89               	decfsz	9,f
  2227  0547  2D46               	goto	u1957
  2228  0548  0BB4               	decfsz	??_applianceControl,f
  2229  0549  2D46               	goto	u1957
  2230  054A  0000               	nop
  2231                           
  2232                           ;application.h: 62: TX2REG='0';
  2233  054B  3030               	movlw	48
  2234  054C  0029               	movlb	9	; select bank9
  2235  054D  0092               	movwf	18	;volatile
  2236                           
  2237                           ;application.h: 63: _delay((unsigned long)((1)*(16000000/4000.0)));
  2238  054E  3006               	movlw	6
  2239  054F  0020               	movlb	0	; select bank0
  2240  0550  00B4               	movwf	??_applianceControl
  2241  0551  3030               	movlw	48
  2242  0552                     u1967:	
  2243  0552  0B89               	decfsz	9,f
  2244  0553  2D52               	goto	u1967
  2245  0554  0BB4               	decfsz	??_applianceControl,f
  2246  0555  2D52               	goto	u1967
  2247  0556  0000               	nop
  2248                           
  2249                           ;application.h: 64: TX2REG='0';
  2250  0557  3030               	movlw	48
  2251  0558  0029               	movlb	9	; select bank9
  2252  0559  0092               	movwf	18	;volatile
  2253                           
  2254                           ;application.h: 65: _delay((unsigned long)((1)*(16000000/4000.0)));
  2255  055A  3006               	movlw	6
  2256  055B  0020               	movlb	0	; select bank0
  2257  055C  00B4               	movwf	??_applianceControl
  2258  055D  3030               	movlw	48
  2259  055E                     u1977:	
  2260  055E  0B89               	decfsz	9,f
  2261  055F  2D5E               	goto	u1977
  2262  0560  0BB4               	decfsz	??_applianceControl,f
  2263  0561  2D5E               	goto	u1977
  2264  0562  0000               	nop
  2265                           
  2266                           ;application.h: 66: TX2REG=')';
  2267  0563  3029               	movlw	41
  2268  0564  0029               	movlb	9	; select bank9
  2269  0565  0092               	movwf	18	;volatile
  2270                           
  2271                           ;application.h: 67: }
  2272                           ;application.h: 69: switch(integerSwitchNumber){
  2273  0566  2D8C               	goto	l3726
  2274  0567                     l3714:	
  2275                           ;application.h: 70: case 1:
  2276                           
  2277                           
  2278                           ;application.h: 71: {
  2279                           ;application.h: 72: PORTAbits.RA2 = integerSwitchState;
  2280  0567  0020               	movlb	0	; select bank0
  2281  0568  0C3D               	rrf	applianceControl@integerSwitchState,w
  2282  0569  1C03               	skipc
  2283  056A  110C               	bcf	12,2	;volatile
  2284  056B  1803               	skipnc
  2285  056C  150C               	bsf	12,2	;volatile
  2286                           
  2287                           ;application.h: 75: }
  2288                           ;application.h: 76: break;
  2289  056D  0008               	return
  2290  056E                     l3716:	
  2291                           ;application.h: 78: case 2:
  2292                           
  2293                           
  2294                           ;application.h: 79: {
  2295                           ;application.h: 80: start_PWM_Generation_in_ISR_FLAG = integerSwitchState;
  2296  056E  083E               	movf	applianceControl@integerSwitchState+1,w
  2297  056F  00D7               	movwf	_start_PWM_Generation_in_ISR_FLAG+1
  2298  0570  083D               	movf	applianceControl@integerSwitchState,w
  2299  0571  00D6               	movwf	_start_PWM_Generation_in_ISR_FLAG
  2300                           
  2301                           ;application.h: 81: switch(integerSwitchState){
  2302  0572  2D7E               	goto	l3722
  2303  0573                     l209:	
  2304                           ;application.h: 82: case 0:
  2305                           
  2306                           
  2307                           ;application.h: 83: PORTEbits.RE5=1;
  2308  0573  1690               	bsf	16,5	;volatile
  2309                           
  2310                           ;application.h: 84: break;
  2311  0574  0008               	return
  2312  0575                     l3718:	
  2313                           ;application.h: 85: case 1:
  2314                           
  2315                           
  2316                           ;application.h: 86: levelofDimmer_MSB = chDimmerSpeedMSB;
  2317  0575  0830               	movf	applianceControl@chDimmerSpeedMSB,w
  2318  0576  00B4               	movwf	??_applianceControl
  2319  0577  0834               	movf	??_applianceControl,w
  2320  0578  00D5               	movwf	_levelofDimmer_MSB
  2321                           
  2322                           ;application.h: 87: levelofDimmer_LSB = chDimmerSpeedLSB;
  2323  0579  0831               	movf	applianceControl@chDimmerSpeedLSB,w
  2324  057A  00B4               	movwf	??_applianceControl
  2325  057B  0834               	movf	??_applianceControl,w
  2326  057C  00F0               	movwf	_levelofDimmer_LSB
  2327                           
  2328                           ;application.h: 91: }
  2329                           
  2330                           ;application.h: 90: break;
  2331                           
  2332                           ;application.h: 89: default:
  2333                           
  2334                           ;application.h: 88: break;
  2335  057D  0008               	return
  2336  057E                     l3722:	
  2337                           
  2338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2339                           ; Switch size 1, requested type "space"
  2340                           ; Number of cases is 1, Range of values is 0 to 0
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte            4     3 (average)
  2344                           ; direct_byte            8     6 (fixed)
  2345                           ; jumptable            260     6 (fixed)
  2346                           ;	Chosen strategy is simple_byte
  2347  057E  083E               	movf	applianceControl@integerSwitchState+1,w
  2348  057F  3A00               	xorlw	0	; case 0
  2349  0580  1903               	skipnz
  2350  0581  2D83               	goto	l4216
  2351  0582  2D9A               	goto	l214
  2352  0583                     l4216:	
  2353                           
  2354                           ; Switch size 1, requested type "space"
  2355                           ; Number of cases is 2, Range of values is 0 to 1
  2356                           ; switch strategies available:
  2357                           ; Name         Instructions Cycles
  2358                           ; simple_byte            7     4 (average)
  2359                           ; direct_byte           10     6 (fixed)
  2360                           ; jumptable            260     6 (fixed)
  2361                           ;	Chosen strategy is simple_byte
  2362  0583  083D               	movf	applianceControl@integerSwitchState,w
  2363  0584  3A00               	xorlw	0	; case 0
  2364  0585  1903               	skipnz
  2365  0586  2D73               	goto	l209
  2366  0587  3A01               	xorlw	1	; case 1
  2367  0588  1903               	skipnz
  2368  0589  2D75               	goto	l3718
  2369  058A  2D9A               	goto	l214
  2370                           
  2371                           ;application.h: 97: }
  2372                           
  2373                           ;application.h: 96: break;
  2374                           
  2375                           ;application.h: 95: default:
  2376                           
  2377                           ;application.h: 92: }
  2378                           ;application.h: 93: break;
  2379  058B  0008               	return
  2380  058C                     l3726:	
  2381                           
  2382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2383                           ; Switch size 1, requested type "space"
  2384                           ; Number of cases is 1, Range of values is 0 to 0
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            4     3 (average)
  2388                           ; direct_byte            8     6 (fixed)
  2389                           ; jumptable            260     6 (fixed)
  2390                           ;	Chosen strategy is simple_byte
  2391  058C  0020               	movlb	0	; select bank0
  2392  058D  0840               	movf	applianceControl@integerSwitchNumber+1,w
  2393  058E  3A00               	xorlw	0	; case 0
  2394  058F  1903               	skipnz
  2395  0590  2D92               	goto	l4218
  2396  0591  2D9A               	goto	l214
  2397  0592                     l4218:	
  2398                           
  2399                           ; Switch size 1, requested type "space"
  2400                           ; Number of cases is 2, Range of values is 1 to 2
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte            7     4 (average)
  2404                           ; direct_byte           13     9 (fixed)
  2405                           ; jumptable            263     9 (fixed)
  2406                           ;	Chosen strategy is simple_byte
  2407  0592  083F               	movf	applianceControl@integerSwitchNumber,w
  2408  0593  3A01               	xorlw	1	; case 1
  2409  0594  1903               	skipnz
  2410  0595  2D67               	goto	l3714
  2411  0596  3A03               	xorlw	3	; case 2
  2412  0597  1903               	skipnz
  2413  0598  2D6E               	goto	l3716
  2414  0599  2D9A               	goto	l214
  2415  059A                     l214:	
  2416  059A  0008               	return
  2417  059B                     __end_of_applianceControl:	
  2418                           
  2419                           	psect	text5
  2420  079A                     __ptext5:	
  2421 ;; *************** function _sendAcknowledgment *****************
  2422 ;; Defined at:
  2423 ;;		line 1226 in file "../master_eight.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  currentState    1    wreg     PTR unsigned char 
  2426 ;;		 -> currentStateBuffer(42), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  currentState    1    3[BANK0 ] PTR unsigned char 
  2429 ;;		 -> currentStateBuffer(42), 
  2430 ;;  Tx_count        2    1[BANK0 ] int 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        4 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_applianceControl
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _sendAcknowledgment
  2456  079A                     _sendAcknowledgment:	
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  2460                           ;sendAcknowledgment@currentStateBuffer stored from wreg
  2461  079A  0020               	movlb	0	; select bank0
  2462  079B  00A3               	movwf	sendAcknowledgment@currentStateBuffer
  2463                           
  2464                           ;master_eight.c: 1227: int Tx_count=0;
  2465  079C  01A1               	clrf	sendAcknowledgment@Tx_count
  2466  079D  01A2               	clrf	sendAcknowledgment@Tx_count+1
  2467  079E                     l3570:	
  2468                           ;master_eight.c: 1228: while(Tx_count!=4)
  2469                           
  2470  079E  3004               	movlw	4
  2471  079F  0621               	xorwf	sendAcknowledgment@Tx_count,w
  2472  07A0  0422               	iorwf	sendAcknowledgment@Tx_count+1,w
  2473  07A1  1903               	btfsc	3,2
  2474  07A2  0008               	return
  2475  07A3                     l466:	
  2476                           ;master_eight.c: 1229: {
  2477                           ;master_eight.c: 1230: while (!TX1STAbits.TRMT);
  2478                           
  2479  07A3  0023               	movlb	3	; select bank3
  2480  07A4  1C9E               	btfss	30,1	;volatile
  2481  07A5  2FA3               	goto	l466
  2482                           
  2483                           ;master_eight.c: 1232: TX1REG = *currentStateBuffer;
  2484  07A6  0020               	movlb	0	; select bank0
  2485  07A7  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  2486  07A8  0086               	movwf	6
  2487  07A9  3001               	movlw	1	; select bank2/3
  2488  07AA  0087               	movwf	7
  2489  07AB  0801               	movf	1,w
  2490  07AC  0023               	movlb	3	; select bank3
  2491  07AD  009A               	movwf	26	;volatile
  2492                           
  2493                           ;master_eight.c: 1233: *currentStateBuffer++;
  2494  07AE  3001               	movlw	1
  2495  07AF  0020               	movlb	0	; select bank0
  2496  07B0  00A0               	movwf	??_sendAcknowledgment
  2497  07B1  0820               	movf	??_sendAcknowledgment,w
  2498  07B2  07A3               	addwf	sendAcknowledgment@currentStateBuffer,f
  2499                           
  2500                           ;master_eight.c: 1234: Tx_count++;
  2501  07B3  3001               	movlw	1
  2502  07B4  07A1               	addwf	sendAcknowledgment@Tx_count,f
  2503  07B5  3000               	movlw	0
  2504  07B6  3DA2               	addwfc	sendAcknowledgment@Tx_count+1,f
  2505  07B7  2F9E               	goto	l3570
  2506  07B8                     __end_of_sendAcknowledgment:	
  2507                           
  2508                           	psect	text6
  2509  0614                     __ptext6:	
  2510 ;; *************** function _atoi *****************
  2511 ;; Defined at:
  2512 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  s               1    wreg     PTR const unsigned char 
  2515 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2518 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  2519 ;;  a               2   11[BANK0 ] int 
  2520 ;;  sign            1   10[BANK0 ] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2    6[BANK0 ] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        8 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    3
  2537 ;; This function calls:
  2538 ;;		___wmul
  2539 ;;		_isdigit
  2540 ;; This function is called by:
  2541 ;;		_applianceControl
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _atoi
  2547  0614                     _atoi:	
  2548                           
  2549                           ;incstack = 0
  2550                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2551                           ;atoi@s stored from wreg
  2552  0614  0020               	movlb	0	; select bank0
  2553  0615  00AD               	movwf	atoi@s
  2554  0616                     l3532:	
  2555  0616  082D               	movf	atoi@s,w
  2556  0617  0086               	movwf	6
  2557  0618  0187               	clrf	7
  2558  0619  3020               	movlw	32
  2559  061A  0601               	xorwf	1,w
  2560  061B  1D03               	btfss	3,2
  2561  061C  2E22               	goto	l3534
  2562  061D                     l3530:	
  2563  061D  3001               	movlw	1
  2564  061E  00A8               	movwf	??_atoi
  2565  061F  0828               	movf	??_atoi,w
  2566  0620  07AD               	addwf	atoi@s,f
  2567  0621  2E16               	goto	l3532
  2568  0622                     l3534:	
  2569  0622  082D               	movf	atoi@s,w
  2570  0623  0086               	movwf	6
  2571  0624  0187               	clrf	7
  2572  0625  3009               	movlw	9
  2573  0626  0601               	xorwf	1,w
  2574  0627  1903               	btfsc	3,2
  2575  0628  2E1D               	goto	l3530
  2576  0629  01AB               	clrf	atoi@a
  2577  062A  01AC               	clrf	atoi@a+1
  2578  062B  01AA               	clrf	atoi@sign
  2579  062C  082D               	movf	atoi@s,w
  2580  062D  0086               	movwf	6
  2581  062E  0187               	clrf	7
  2582  062F  302D               	movlw	45
  2583  0630  0601               	xorwf	1,w
  2584  0631  1D03               	btfss	3,2
  2585  0632  2E38               	goto	l3542
  2586  0633  3001               	movlw	1
  2587  0634  00A8               	movwf	??_atoi
  2588  0635  0828               	movf	??_atoi,w
  2589  0636  07AA               	addwf	atoi@sign,f
  2590  0637  2E3F               	goto	l3548
  2591  0638                     l3542:	
  2592  0638  082D               	movf	atoi@s,w
  2593  0639  0086               	movwf	6
  2594  063A  0187               	clrf	7
  2595  063B  302B               	movlw	43
  2596  063C  0601               	xorwf	1,w
  2597  063D  1D03               	btfss	3,2
  2598  063E  2E43               	goto	l3550
  2599  063F                     l3548:	
  2600  063F  3001               	movlw	1
  2601  0640  00A8               	movwf	??_atoi
  2602  0641  0828               	movf	??_atoi,w
  2603  0642  07AD               	addwf	atoi@s,f
  2604  0643                     l3550:	
  2605  0643  082D               	movf	atoi@s,w
  2606  0644  0086               	movwf	6
  2607  0645  0187               	clrf	7
  2608  0646  0801               	movf	1,w
  2609  0647  3187  27F1  3186   	fcall	_isdigit
  2610  064A  1C03               	btfss	3,0
  2611  064B  2E6A               	goto	l3552
  2612  064C  0020               	movlb	0	; select bank0
  2613  064D  082C               	movf	atoi@a+1,w
  2614  064E  00A1               	movwf	___wmul@multiplier+1
  2615  064F  082B               	movf	atoi@a,w
  2616  0650  00A0               	movwf	___wmul@multiplier
  2617  0651  300A               	movlw	10
  2618  0652  00A2               	movwf	___wmul@multiplicand
  2619  0653  3000               	movlw	0
  2620  0654  00A3               	movwf	___wmul@multiplicand+1
  2621  0655  3187  27D5  3186   	fcall	___wmul
  2622  0658  0020               	movlb	0	; select bank0
  2623  0659  082D               	movf	atoi@s,w
  2624  065A  0086               	movwf	6
  2625  065B  0187               	clrf	7
  2626  065C  0801               	movf	1,w
  2627  065D  0720               	addwf	?___wmul,w
  2628  065E  00A8               	movwf	??_atoi
  2629  065F  0821               	movf	?___wmul+1,w
  2630  0660  1803               	skipnc
  2631  0661  0A21               	incf	?___wmul+1,w
  2632  0662  00A9               	movwf	??_atoi+1
  2633  0663  0828               	movf	??_atoi,w
  2634  0664  3ED0               	addlw	208
  2635  0665  00AB               	movwf	atoi@a
  2636  0666  30FF               	movlw	255
  2637  0667  3D29               	addwfc	??_atoi+1,w
  2638  0668  00AC               	movwf	atoi@a+1
  2639  0669  2E3F               	goto	l3548
  2640  066A                     l3552:	
  2641  066A  0020               	movlb	0	; select bank0
  2642  066B  082A               	movf	atoi@sign,w
  2643  066C  1903               	btfsc	3,2
  2644  066D  2E7A               	goto	l3558
  2645  066E  092B               	comf	atoi@a,w
  2646  066F  00A8               	movwf	??_atoi
  2647  0670  092C               	comf	atoi@a+1,w
  2648  0671  00A9               	movwf	??_atoi+1
  2649  0672  0AA8               	incf	??_atoi,f
  2650  0673  1903               	skipnz
  2651  0674  0AA9               	incf	??_atoi+1,f
  2652  0675  0828               	movf	??_atoi,w
  2653  0676  00A6               	movwf	?_atoi
  2654  0677  0829               	movf	??_atoi+1,w
  2655  0678  00A7               	movwf	?_atoi+1
  2656  0679  0008               	return
  2657  067A                     l3558:	
  2658  067A  082C               	movf	atoi@a+1,w
  2659  067B  00A7               	movwf	?_atoi+1
  2660  067C  082B               	movf	atoi@a,w
  2661  067D  00A6               	movwf	?_atoi
  2662  067E  0008               	return
  2663  067F                     __end_of_atoi:	
  2664                           
  2665                           	psect	text7
  2666  07F1                     __ptext7:	
  2667 ;; *************** function _isdigit *****************
  2668 ;; Defined at:
  2669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  c               1    wreg     unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  c               1    1[BANK0 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;		None               void
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        2 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_atoi
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _isdigit
  2699  07F1                     _isdigit:	
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2703                           ;isdigit@c stored from wreg
  2704  07F1  0020               	movlb	0	; select bank0
  2705  07F2  00A1               	movwf	isdigit@c
  2706  07F3  01A0               	clrf	_isdigit$973
  2707  07F4  303A               	movlw	58
  2708  07F5  0221               	subwf	isdigit@c,w
  2709  07F6  1803               	skipnc
  2710  07F7  2FFE               	goto	l3524
  2711  07F8  3030               	movlw	48
  2712  07F9  0221               	subwf	isdigit@c,w
  2713  07FA  1C03               	skipc
  2714  07FB  2FFE               	goto	l3524
  2715  07FC  01A0               	clrf	_isdigit$973
  2716  07FD  0AA0               	incf	_isdigit$973,f
  2717  07FE                     l3524:	
  2718  07FE  0C20               	rrf	_isdigit$973,w
  2719  07FF  0008               	return
  2720  0800                     __end_of_isdigit:	
  2721                           
  2722                           	psect	text8
  2723  07D5                     __ptext8:	
  2724 ;; *************** function ___wmul *****************
  2725 ;; Defined at:
  2726 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2729 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  product         2    4[BANK0 ] unsigned int 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2    0[BANK0 ] unsigned int 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        6 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    2
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_atoi
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function ___wmul
  2757  07D5                     ___wmul:	
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2761  07D5  0020               	movlb	0	; select bank0
  2762  07D6  01A4               	clrf	___wmul@product
  2763  07D7  01A5               	clrf	___wmul@product+1
  2764  07D8                     l3504:	
  2765  07D8  1C20               	btfss	___wmul@multiplier,0
  2766  07D9  2FDE               	goto	l490
  2767  07DA  0822               	movf	___wmul@multiplicand,w
  2768  07DB  07A4               	addwf	___wmul@product,f
  2769  07DC  0823               	movf	___wmul@multiplicand+1,w
  2770  07DD  3DA5               	addwfc	___wmul@product+1,f
  2771  07DE                     l490:	
  2772  07DE  3001               	movlw	1
  2773  07DF                     u1405:	
  2774  07DF  35A2               	lslf	___wmul@multiplicand,f
  2775  07E0  0DA3               	rlf	___wmul@multiplicand+1,f
  2776  07E1  0B89               	decfsz	9,f
  2777  07E2  2FDF               	goto	u1405
  2778  07E3  3001               	movlw	1
  2779  07E4                     u1415:	
  2780  07E4  36A1               	lsrf	___wmul@multiplier+1,f
  2781  07E5  0CA0               	rrf	___wmul@multiplier,f
  2782  07E6  0B89               	decfsz	9,f
  2783  07E7  2FE4               	goto	u1415
  2784  07E8  0820               	movf	___wmul@multiplier,w
  2785  07E9  0421               	iorwf	___wmul@multiplier+1,w
  2786  07EA  1D03               	btfss	3,2
  2787  07EB  2FD8               	goto	l3504
  2788  07EC  0825               	movf	___wmul@product+1,w
  2789  07ED  00A1               	movwf	?___wmul+1
  2790  07EE  0824               	movf	___wmul@product,w
  2791  07EF  00A0               	movwf	?___wmul
  2792  07F0  0008               	return
  2793  07F1                     __end_of___wmul:	
  2794                           
  2795                           	psect	text9
  2796  0F81                     __ptext9:	
  2797 ;; *************** function _allPeripheralInit *****************
  2798 ;; Defined at:
  2799 ;;		line 1011 in file "../master_eight.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    3
  2820 ;; This function calls:
  2821 ;;		_CCP9_Initialize
  2822 ;;		_EUSART2_Initialize
  2823 ;;		_EUSART_Initialize
  2824 ;;		_TMR1_Initialize
  2825 ;;		_TMR3_Initialize
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _allPeripheralInit
  2833  0F81                     _allPeripheralInit:	
  2834                           
  2835                           ;master_eight.c: 1012: EUSART_Initialize();
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  2839  0F81  318F  27D1  318F   	fcall	_EUSART_Initialize
  2840                           
  2841                           ;master_eight.c: 1013: EUSART2_Initialize();
  2842  0F84  318F  27BB  318F   	fcall	_EUSART2_Initialize
  2843                           
  2844                           ;master_eight.c: 1014: TMR1_Initialize();
  2845  0F87  318F  275D  318F   	fcall	_TMR1_Initialize
  2846                           
  2847                           ;master_eight.c: 1015: TMR3_Initialize();
  2848  0F8A  318F  2768  318F   	fcall	_TMR3_Initialize
  2849                           
  2850                           ;master_eight.c: 1016: CCP9_Initialize();
  2851  0F8D  318F  2753         	fcall	_CCP9_Initialize
  2852  0F8F  0008               	return
  2853  0F90                     __end_of_allPeripheralInit:	
  2854                           
  2855                           	psect	text10
  2856  0F68                     __ptext10:	
  2857 ;; *************** function _TMR3_Initialize *****************
  2858 ;; Defined at:
  2859 ;;		line 1129 in file "../master_eight.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		status,2
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    2
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_allPeripheralInit
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _TMR3_Initialize
  2889  0F68                     _TMR3_Initialize:	
  2890                           
  2891                           ;master_eight.c: 1132: T3CON = 0x00;
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in _TMR3_Initialize: [status,2]
  2895  0F68  0028               	movlb	8	; select bank8
  2896  0F69  0193               	clrf	19	;volatile
  2897                           
  2898                           ;master_eight.c: 1135: T3GCON = 0x00;
  2899  0F6A  0194               	clrf	20	;volatile
  2900                           
  2901                           ;master_eight.c: 1138: TMR3H = 0x00;
  2902  0F6B  0192               	clrf	18	;volatile
  2903                           
  2904                           ;master_eight.c: 1141: TMR3L = 0x00;
  2905  0F6C  0191               	clrf	17	;volatile
  2906                           
  2907                           ;master_eight.c: 1144: PIR3bits.TMR3IF = 0;
  2908  0F6D  0020               	movlb	0	; select bank0
  2909  0F6E  1013               	bcf	19,0	;volatile
  2910                           
  2911                           ;master_eight.c: 1147: PIE3bits.TMR3IE = 1;
  2912  0F6F  0021               	movlb	1	; select bank1
  2913  0F70  1413               	bsf	19,0	;volatile
  2914                           
  2915                           ;master_eight.c: 1153: GIE = 1;
  2916  0F71  178B               	bsf	11,7	;volatile
  2917                           
  2918                           ;master_eight.c: 1156: PEIE = 1;
  2919  0F72  170B               	bsf	11,6	;volatile
  2920  0F73  0008               	return
  2921  0F74                     __end_of_TMR3_Initialize:	
  2922                           
  2923                           	psect	text11
  2924  0F5D                     __ptext11:	
  2925 ;; *************** function _TMR1_Initialize *****************
  2926 ;; Defined at:
  2927 ;;		line 1098 in file "../master_eight.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		status,2
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_allPeripheralInit
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _TMR1_Initialize
  2957  0F5D                     _TMR1_Initialize:	
  2958                           
  2959                           ;master_eight.c: 1101: T1CON = 0x00;
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _TMR1_Initialize: [status,2]
  2963  0F5D  0020               	movlb	0	; select bank0
  2964  0F5E  0198               	clrf	24	;volatile
  2965                           
  2966                           ;master_eight.c: 1104: T1GCON = 0x00;
  2967  0F5F  0199               	clrf	25	;volatile
  2968                           
  2969                           ;master_eight.c: 1107: TMR1H = 0x00;
  2970  0F60  0197               	clrf	23	;volatile
  2971                           
  2972                           ;master_eight.c: 1110: TMR1L = 0x00;
  2973  0F61  0196               	clrf	22	;volatile
  2974                           
  2975                           ;master_eight.c: 1113: PIR1bits.TMR1IF = 0;
  2976  0F62  1011               	bcf	17,0	;volatile
  2977                           
  2978                           ;master_eight.c: 1116: PIE1bits.TMR1IE = 1;
  2979  0F63  0021               	movlb	1	; select bank1
  2980  0F64  1411               	bsf	17,0	;volatile
  2981                           
  2982                           ;master_eight.c: 1122: GIE = 1;
  2983  0F65  178B               	bsf	11,7	;volatile
  2984                           
  2985                           ;master_eight.c: 1125: PEIE = 1;
  2986  0F66  170B               	bsf	11,6	;volatile
  2987  0F67  0008               	return
  2988  0F68                     __end_of_TMR1_Initialize:	
  2989                           
  2990                           	psect	text12
  2991  0FD1                     __ptext12:	
  2992 ;; *************** function _EUSART_Initialize *****************
  2993 ;; Defined at:
  2994 ;;		line 1023 in file "../master_eight.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    2
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_allPeripheralInit
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _EUSART_Initialize
  3024  0FD1                     _EUSART_Initialize:	
  3025                           
  3026                           ;master_eight.c: 1024: PIE1bits.RC1IE = 0;
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _EUSART_Initialize: [wreg]
  3030  0FD1  0021               	movlb	1	; select bank1
  3031  0FD2  1291               	bcf	17,5	;volatile
  3032                           
  3033                           ;master_eight.c: 1025: PIE1bits.TX1IE = 0;
  3034  0FD3  1211               	bcf	17,4	;volatile
  3035                           
  3036                           ;master_eight.c: 1030: BAUD1CON = 0x0A;
  3037  0FD4  300A               	movlw	10
  3038  0FD5  0023               	movlb	3	; select bank3
  3039  0FD6  009F               	movwf	31	;volatile
  3040                           
  3041                           ;master_eight.c: 1033: RC1STA = 0x90;
  3042  0FD7  3090               	movlw	144
  3043  0FD8  009D               	movwf	29	;volatile
  3044                           
  3045                           ;master_eight.c: 1036: TX1STA = 0x24;
  3046  0FD9  3024               	movlw	36
  3047  0FDA  009E               	movwf	30	;volatile
  3048                           
  3049                           ;master_eight.c: 1041: SP1BRGL = 0xA0;
  3050  0FDB  30A0               	movlw	160
  3051  0FDC  009B               	movwf	27	;volatile
  3052                           
  3053                           ;master_eight.c: 1043: SP1BRGH = 0x01;
  3054  0FDD  3001               	movlw	1
  3055  0FDE  009C               	movwf	28	;volatile
  3056                           
  3057                           ;master_eight.c: 1046: GIE = 1;
  3058  0FDF  178B               	bsf	11,7	;volatile
  3059                           
  3060                           ;master_eight.c: 1049: PEIE = 1;
  3061  0FE0  170B               	bsf	11,6	;volatile
  3062                           
  3063                           ;master_eight.c: 1052: PIE1bits.RC1IE = 1;
  3064  0FE1  0021               	movlb	1	; select bank1
  3065  0FE2  1691               	bsf	17,5	;volatile
  3066                           
  3067                           ;master_eight.c: 1055: TX1STAbits.TXEN = 1;
  3068  0FE3  0023               	movlb	3	; select bank3
  3069  0FE4  169E               	bsf	30,5	;volatile
  3070                           
  3071                           ;master_eight.c: 1058: RC1STAbits.SPEN = 1;
  3072  0FE5  179D               	bsf	29,7	;volatile
  3073  0FE6  0008               	return
  3074  0FE7                     __end_of_EUSART_Initialize:	
  3075                           
  3076                           	psect	text13
  3077  0FBB                     __ptext13:	
  3078 ;; *************** function _EUSART2_Initialize *****************
  3079 ;; Defined at:
  3080 ;;		line 1060 in file "../master_eight.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_allPeripheralInit
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _EUSART2_Initialize
  3110  0FBB                     _EUSART2_Initialize:	
  3111                           
  3112                           ;master_eight.c: 1062: PIE4bits.RC2IE = 0;
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _EUSART2_Initialize: [wreg]
  3116  0FBB  0021               	movlb	1	; select bank1
  3117  0FBC  1294               	bcf	20,5	;volatile
  3118                           
  3119                           ;master_eight.c: 1063: PIE4bits.TX2IE = 0;
  3120  0FBD  1214               	bcf	20,4	;volatile
  3121                           
  3122                           ;master_eight.c: 1068: BAUD2CON = 0x0A;
  3123  0FBE  300A               	movlw	10
  3124  0FBF  0029               	movlb	9	; select bank9
  3125  0FC0  0097               	movwf	23	;volatile
  3126                           
  3127                           ;master_eight.c: 1071: RC2STA = 0x90;
  3128  0FC1  3090               	movlw	144
  3129  0FC2  0095               	movwf	21	;volatile
  3130                           
  3131                           ;master_eight.c: 1074: TX2STA = 0x24;
  3132  0FC3  3024               	movlw	36
  3133  0FC4  0096               	movwf	22	;volatile
  3134                           
  3135                           ;master_eight.c: 1077: SP2BRGL = 0xA0;
  3136  0FC5  30A0               	movlw	160
  3137  0FC6  0093               	movwf	19	;volatile
  3138                           
  3139                           ;master_eight.c: 1079: SP2BRGH = 0x01;
  3140  0FC7  3001               	movlw	1
  3141  0FC8  0094               	movwf	20	;volatile
  3142                           
  3143                           ;master_eight.c: 1082: GIE = 1;
  3144  0FC9  178B               	bsf	11,7	;volatile
  3145                           
  3146                           ;master_eight.c: 1085: PEIE = 1;
  3147  0FCA  170B               	bsf	11,6	;volatile
  3148                           
  3149                           ;master_eight.c: 1088: PIE4bits.RC2IE = 1;
  3150  0FCB  0021               	movlb	1	; select bank1
  3151  0FCC  1694               	bsf	20,5	;volatile
  3152                           
  3153                           ;master_eight.c: 1091: TX2STAbits.TXEN = 1;
  3154  0FCD  0029               	movlb	9	; select bank9
  3155  0FCE  1696               	bsf	22,5	;volatile
  3156                           
  3157                           ;master_eight.c: 1094: RC2STAbits.SPEN = 1;
  3158  0FCF  1795               	bsf	21,7	;volatile
  3159  0FD0  0008               	return
  3160  0FD1                     __end_of_EUSART2_Initialize:	
  3161                           
  3162                           	psect	text14
  3163  0F53                     __ptext14:	
  3164 ;; *************** function _CCP9_Initialize *****************
  3165 ;; Defined at:
  3166 ;;		line 1159 in file "../master_eight.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_allPeripheralInit
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _CCP9_Initialize
  3196  0F53                     _CCP9_Initialize:	
  3197                           
  3198                           ;master_eight.c: 1163: CCP9CON = 0x04;
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _CCP9_Initialize: [wreg+status,2]
  3202  0F53  3004               	movlw	4
  3203  0F54  002C               	movlb	12	; select bank12
  3204  0F55  009C               	movwf	28	;volatile
  3205                           
  3206                           ;master_eight.c: 1166: CCPR9H = 0x00;
  3207  0F56  019B               	clrf	27	;volatile
  3208                           
  3209                           ;master_eight.c: 1169: CCPR9L = 0x00;
  3210  0F57  019A               	clrf	26	;volatile
  3211                           
  3212                           ;master_eight.c: 1175: PIR4bits.CCP9IF = 0;
  3213  0F58  0020               	movlb	0	; select bank0
  3214  0F59  1314               	bcf	20,6	;volatile
  3215                           
  3216                           ;master_eight.c: 1178: PIE4bits.CCP9IE = 1;
  3217  0F5A  0021               	movlb	1	; select bank1
  3218  0F5B  1714               	bsf	20,6	;volatile
  3219  0F5C  0008               	return
  3220  0F5D                     __end_of_CCP9_Initialize:	
  3221                           
  3222                           	psect	text15
  3223  059B                     __ptext15:	
  3224 ;; *************** function _actiontouchPanel *****************
  3225 ;; Defined at:
  3226 ;;		line 1 in file "../actionTouchpanel.h"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  Switch_Num      1    wreg     unsigned char 
  3229 ;;  sw_status       1    3[BANK0 ] unsigned char 
  3230 ;;  Sw_speed        1    4[BANK0 ] unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  Switch_Num      1   11[BANK0 ] unsigned char 
  3233 ;;  switch_statu    2   12[BANK0 ] int 
  3234 ;;  SwNum           2    9[BANK0 ] int 
  3235 ;;  int_swSpeed     2    6[BANK0 ] int 
  3236 ;;  ch_sw_num       1    8[BANK0 ] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3246 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3247 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0
  3248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3249 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0
  3250 ;;Total ram usage:       11 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    3
  3253 ;; This function calls:
  3254 ;;		_sendFeedback_TO_Gateway
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _actiontouchPanel
  3262  059B                     _actiontouchPanel:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _actiontouchPanel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3266                           ;actiontouchPanel@Switch_Num stored from wreg
  3267  059B  0020               	movlb	0	; select bank0
  3268  059C  00AB               	movwf	actiontouchPanel@Switch_Num
  3269                           
  3270                           ;actionTouchpanel.h: 4: M1=1;M2=1;M3=1;M4=1;
  3271  059D  3001               	movlw	1
  3272  059E  00E8               	movwf	_M1
  3273  059F  3000               	movlw	0
  3274  05A0  00E9               	movwf	_M1+1
  3275  05A1  3001               	movlw	1
  3276  05A2  00E6               	movwf	_M2
  3277  05A3  3000               	movlw	0
  3278  05A4  00E7               	movwf	_M2+1
  3279  05A5  3001               	movlw	1
  3280  05A6  0021               	movlb	1	; select bank1
  3281  05A7  00E4               	movwf	_M3^(0+128)
  3282  05A8  3000               	movlw	0
  3283  05A9  00E5               	movwf	(_M3^(0+128)+1)
  3284  05AA  3001               	movlw	1
  3285  05AB  0020               	movlb	0	; select bank0
  3286  05AC  00E4               	movwf	_M4
  3287  05AD  3000               	movlw	0
  3288  05AE  00E5               	movwf	_M4+1
  3289                           
  3290                           ;actionTouchpanel.h: 5: int switch_status = sw_status - '0';
  3291  05AF  0823               	movf	actiontouchPanel@sw_status,w
  3292  05B0  3ED0               	addlw	208
  3293  05B1  00AC               	movwf	actiontouchPanel@switch_status
  3294  05B2  30FF               	movlw	255
  3295  05B3  1803               	skipnc
  3296  05B4  3000               	movlw	0
  3297  05B5  00AD               	movwf	actiontouchPanel@switch_status+1
  3298                           
  3299                           ;actionTouchpanel.h: 6: int SwNum = Switch_Num - '@';
  3300  05B6  082B               	movf	actiontouchPanel@Switch_Num,w
  3301  05B7  3EC0               	addlw	192
  3302  05B8  00A9               	movwf	actiontouchPanel@SwNum
  3303  05B9  30FF               	movlw	255
  3304  05BA  1803               	skipnc
  3305  05BB  3000               	movlw	0
  3306  05BC  00AA               	movwf	actiontouchPanel@SwNum+1
  3307                           
  3308                           ;actionTouchpanel.h: 7: int int_swSpeed = Sw_speed-'0';
  3309  05BD  0824               	movf	actiontouchPanel@Sw_speed,w
  3310  05BE  3ED0               	addlw	208
  3311  05BF  00A6               	movwf	actiontouchPanel@int_swSpeed
  3312  05C0  30FF               	movlw	255
  3313  05C1  1803               	skipnc
  3314  05C2  3000               	movlw	0
  3315  05C3  00A7               	movwf	actiontouchPanel@int_swSpeed+1
  3316                           
  3317                           ;actionTouchpanel.h: 8: char ch_sw_num = SwNum +'0';
  3318  05C4  0829               	movf	actiontouchPanel@SwNum,w
  3319  05C5  3E30               	addlw	48
  3320  05C6  00A5               	movwf	??_actiontouchPanel
  3321  05C7  0825               	movf	??_actiontouchPanel,w
  3322  05C8  00A8               	movwf	actiontouchPanel@ch_sw_num
  3323                           
  3324                           ;actionTouchpanel.h: 10: if(checkFlag == 1)
  3325  05C9  0360               	decf	_checkFlag,w
  3326  05CA  0461               	iorwf	_checkFlag+1,w
  3327  05CB  1D03               	btfss	3,2
  3328  05CC  2E0A               	goto	l3770
  3329                           
  3330                           ;actionTouchpanel.h: 12: {
  3331                           ;actionTouchpanel.h: 13: checkFlag=0;
  3332  05CD  01E0               	clrf	_checkFlag
  3333  05CE  01E1               	clrf	_checkFlag+1
  3334                           
  3335                           ;actionTouchpanel.h: 14: }
  3336  05CF  0008               	return
  3337  05D0                     l3746:	
  3338                           ;actionTouchpanel.h: 19: {
  3339                           ;actionTouchpanel.h: 21: case 'A':
  3340                           
  3341                           ;actionTouchpanel.h: 15: else
  3342                           ;actionTouchpanel.h: 16: {
  3343                           ;actionTouchpanel.h: 18: switch(Switch_Num)
  3344                           
  3345                           
  3346                           ;actionTouchpanel.h: 22: {
  3347                           ;actionTouchpanel.h: 23: if(copy_parentalLockBuffer[1] == '0' && M1 == 1)
  3348  05D0  3030               	movlw	48
  3349  05D1  0021               	movlb	1	; select bank1
  3350  05D2  0649               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  3351  05D3  1D03               	btfss	3,2
  3352  05D4  0008               	return
  3353  05D5  0020               	movlb	0	; select bank0
  3354  05D6  0368               	decf	_M1,w
  3355  05D7  0469               	iorwf	_M1+1,w
  3356  05D8  1D03               	btfss	3,2
  3357  05D9  0008               	return
  3358                           
  3359                           ;actionTouchpanel.h: 24: {
  3360                           ;actionTouchpanel.h: 25: sendFeedback_TO_Gateway('1',sw_status);
  3361  05DA  0823               	movf	actiontouchPanel@sw_status,w
  3362  05DB  00A5               	movwf	??_actiontouchPanel
  3363  05DC  0825               	movf	??_actiontouchPanel,w
  3364  05DD  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  3365  05DE  3031               	movlw	49
  3366  05DF  3187  2705         	fcall	_sendFeedback_TO_Gateway
  3367                           
  3368                           ;actionTouchpanel.h: 26: PORTAbits.RA2 = switch_status; M1 = 0;
  3369  05E1  0020               	movlb	0	; select bank0
  3370  05E2  0C2C               	rrf	actiontouchPanel@switch_status,w
  3371  05E3  1C03               	skipc
  3372  05E4  110C               	bcf	12,2	;volatile
  3373  05E5  1803               	skipnc
  3374  05E6  150C               	bsf	12,2	;volatile
  3375  05E7  01E8               	clrf	_M1
  3376  05E8  01E9               	clrf	_M1+1
  3377                           
  3378                           ;actionTouchpanel.h: 28: }
  3379                           ;actionTouchpanel.h: 29: }
  3380                           ;actionTouchpanel.h: 31: break;
  3381  05E9  0008               	return
  3382  05EA                     l3756:	
  3383                           ;actionTouchpanel.h: 32: case 'B':
  3384                           
  3385                           
  3386                           ;actionTouchpanel.h: 33: {
  3387                           ;actionTouchpanel.h: 35: if( copy_parentalLockBuffer[2] == '0' && M2 == 1 )
  3388  05EA  3030               	movlw	48
  3389  05EB  0021               	movlb	1	; select bank1
  3390  05EC  064A               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  3391  05ED  1D03               	btfss	3,2
  3392  05EE  0008               	return
  3393  05EF  0020               	movlb	0	; select bank0
  3394  05F0  0366               	decf	_M2,w
  3395  05F1  0467               	iorwf	_M2+1,w
  3396  05F2  1D03               	btfss	3,2
  3397  05F3  0008               	return
  3398                           
  3399                           ;actionTouchpanel.h: 36: {
  3400                           ;actionTouchpanel.h: 37: start_PWM_Generation_in_ISR_FLAG=0;
  3401  05F4  01D6               	clrf	_start_PWM_Generation_in_ISR_FLAG
  3402  05F5  01D7               	clrf	_start_PWM_Generation_in_ISR_FLAG+1
  3403                           
  3404                           ;actionTouchpanel.h: 38: sendFeedback_TO_Gateway('2',sw_status);
  3405  05F6  0823               	movf	actiontouchPanel@sw_status,w
  3406  05F7  00A5               	movwf	??_actiontouchPanel
  3407  05F8  0825               	movf	??_actiontouchPanel,w
  3408  05F9  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  3409  05FA  3032               	movlw	50
  3410  05FB  3187  2705         	fcall	_sendFeedback_TO_Gateway
  3411                           
  3412                           ;actionTouchpanel.h: 39: PORTEbits.RE5 = ~switch_status; M2 = 0;
  3413  05FD  0020               	movlb	0	; select bank0
  3414  05FE  092C               	comf	actiontouchPanel@switch_status,w
  3415  05FF  00A5               	movwf	??_actiontouchPanel
  3416  0600  0EA5               	swapf	??_actiontouchPanel,f
  3417  0601  0DA5               	rlf	??_actiontouchPanel,f
  3418  0602  0810               	movf	16,w	;volatile
  3419  0603  0625               	xorwf	??_actiontouchPanel,w
  3420  0604  39DF               	andlw	-33
  3421  0605  0625               	xorwf	??_actiontouchPanel,w
  3422  0606  0090               	movwf	16	;volatile
  3423  0607  01E6               	clrf	_M2
  3424  0608  01E7               	clrf	_M2+1
  3425                           
  3426                           ;actionTouchpanel.h: 48: }
  3427                           
  3428                           ;actionTouchpanel.h: 47: break;
  3429                           
  3430                           ;actionTouchpanel.h: 46: default:
  3431                           
  3432                           ;actionTouchpanel.h: 41: }
  3433                           ;actionTouchpanel.h: 43: }
  3434                           ;actionTouchpanel.h: 45: break;
  3435  0609  0008               	return
  3436  060A                     l3770:	
  3437  060A  082B               	movf	actiontouchPanel@Switch_Num,w
  3438                           
  3439                           ; Switch size 1, requested type "space"
  3440                           ; Number of cases is 2, Range of values is 65 to 66
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte            7     4 (average)
  3444                           ; direct_byte           13     9 (fixed)
  3445                           ; jumptable            263     9 (fixed)
  3446                           ;	Chosen strategy is simple_byte
  3447  060B  3A41               	xorlw	65	; case 65
  3448  060C  1903               	skipnz
  3449  060D  2DD0               	goto	l3746
  3450  060E  3A03               	xorlw	3	; case 66
  3451  060F  1903               	skipnz
  3452  0610  2DEA               	goto	l3756
  3453  0611  2E13               	goto	l226
  3454  0612  0008               	return
  3455  0613                     l226:	
  3456  0613  0008               	return
  3457  0614                     __end_of_actiontouchPanel:	
  3458                           
  3459                           	psect	text16
  3460  0705                     __ptext16:	
  3461 ;; *************** function _sendFeedback_TO_Gateway *****************
  3462 ;; Defined at:
  3463 ;;		line 1199 in file "../master_eight.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  sw_number       1    wreg     unsigned char 
  3466 ;;  sw_status       1    0[BANK0 ] unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  sw_number       1    2[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3478 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:        3 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    2
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_actiontouchPanel
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _sendFeedback_TO_Gateway
  3495  0705                     _sendFeedback_TO_Gateway:	
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _sendFeedback_TO_Gateway: [wreg]
  3499                           ;sendFeedback_TO_Gateway@sw_number stored from wreg
  3500  0705  0020               	movlb	0	; select bank0
  3501  0706  00A2               	movwf	sendFeedback_TO_Gateway@sw_number
  3502                           
  3503                           ;master_eight.c: 1201: TX1REG='G';_delay((unsigned long)((1)*(16000000/4000.0)));
  3504  0707  3047               	movlw	71
  3505  0708  0023               	movlb	3	; select bank3
  3506  0709  009A               	movwf	26	;volatile
  3507  070A  3006               	movlw	6
  3508  070B  0020               	movlb	0	; select bank0
  3509  070C  00A1               	movwf	??_sendFeedback_TO_Gateway
  3510  070D  3030               	movlw	48
  3511  070E                     u1987:	
  3512  070E  0B89               	decfsz	9,f
  3513  070F  2F0E               	goto	u1987
  3514  0710  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3515  0711  2F0E               	goto	u1987
  3516  0712  0000               	nop
  3517                           
  3518                           ;master_eight.c: 1202: TX1REG=sw_status;_delay((unsigned long)((1)*(16000000/4000.0)));
  3519  0713  0020               	movlb	0	; select bank0
  3520  0714  0820               	movf	sendFeedback_TO_Gateway@sw_status,w
  3521  0715  0023               	movlb	3	; select bank3
  3522  0716  009A               	movwf	26	;volatile
  3523  0717  3006               	movlw	6
  3524  0718  0020               	movlb	0	; select bank0
  3525  0719  00A1               	movwf	??_sendFeedback_TO_Gateway
  3526  071A  3030               	movlw	48
  3527  071B                     u1997:	
  3528  071B  0B89               	decfsz	9,f
  3529  071C  2F1B               	goto	u1997
  3530  071D  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3531  071E  2F1B               	goto	u1997
  3532  071F  0000               	nop
  3533                           
  3534                           ;master_eight.c: 1203: TX1REG='0';_delay((unsigned long)((1)*(16000000/4000.0)));
  3535  0720  3030               	movlw	48
  3536  0721  0023               	movlb	3	; select bank3
  3537  0722  009A               	movwf	26	;volatile
  3538  0723  3006               	movlw	6
  3539  0724  0020               	movlb	0	; select bank0
  3540  0725  00A1               	movwf	??_sendFeedback_TO_Gateway
  3541  0726  3030               	movlw	48
  3542  0727                     u2007:	
  3543  0727  0B89               	decfsz	9,f
  3544  0728  2F27               	goto	u2007
  3545  0729  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3546  072A  2F27               	goto	u2007
  3547  072B  0000               	nop
  3548                           
  3549                           ;master_eight.c: 1204: TX1REG=sw_number;_delay((unsigned long)((1)*(16000000/4000.0)));
  3550  072C  0020               	movlb	0	; select bank0
  3551  072D  0822               	movf	sendFeedback_TO_Gateway@sw_number,w
  3552  072E  0023               	movlb	3	; select bank3
  3553  072F  009A               	movwf	26	;volatile
  3554  0730  3006               	movlw	6
  3555  0731  0020               	movlb	0	; select bank0
  3556  0732  00A1               	movwf	??_sendFeedback_TO_Gateway
  3557  0733  3030               	movlw	48
  3558  0734                     u2017:	
  3559  0734  0B89               	decfsz	9,f
  3560  0735  2F34               	goto	u2017
  3561  0736  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  3562  0737  2F34               	goto	u2017
  3563  0738  0000               	nop
  3564  0739  0008               	return
  3565  073A                     __end_of_sendFeedback_TO_Gateway:	
  3566                           
  3567                           	psect	text17
  3568  0FA5                     __ptext17:	
  3569 ;; *************** function _GPIO_pin_Initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 983 in file "../master_eight.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    3
  3592 ;; This function calls:
  3593 ;;		_clearAllPorts
  3594 ;;		_pinINIT_extra
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _GPIO_pin_Initialize
  3602  0FA5                     _GPIO_pin_Initialize:	
  3603                           
  3604                           ;master_eight.c: 984: clearAllPorts();
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  3608  0FA5  318F  2743  318F   	fcall	_clearAllPorts
  3609                           
  3610                           ;master_eight.c: 985: pinINIT_extra();
  3611  0FA8  318F  2790  318F   	fcall	_pinINIT_extra
  3612                           
  3613                           ;master_eight.c: 988: TRISAbits.TRISA5 = 1;
  3614  0FAB  0021               	movlb	1	; select bank1
  3615  0FAC  168C               	bsf	12,5	;volatile
  3616                           
  3617                           ;master_eight.c: 989: TRISFbits.TRISF2 = 1;
  3618  0FAD  0026               	movlb	6	; select bank6
  3619  0FAE  150C               	bsf	12,2	;volatile
  3620                           
  3621                           ;master_eight.c: 993: TRISAbits.TRISA2 = 0;
  3622  0FAF  0021               	movlb	1	; select bank1
  3623  0FB0  110C               	bcf	12,2	;volatile
  3624                           
  3625                           ;master_eight.c: 994: TRISEbits.TRISE5 = 0;
  3626  0FB1  1290               	bcf	16,5	;volatile
  3627                           
  3628                           ;master_eight.c: 997: TRISEbits.TRISE3 = 1;
  3629  0FB2  1590               	bsf	16,3	;volatile
  3630                           
  3631                           ;master_eight.c: 999: TRISCbits.TRISC6 = 0;
  3632  0FB3  130E               	bcf	14,6	;volatile
  3633                           
  3634                           ;master_eight.c: 1000: TRISCbits.TRISC7 = 1;
  3635  0FB4  178E               	bsf	14,7	;volatile
  3636                           
  3637                           ;master_eight.c: 1002: TRISGbits.TRISG1=0;
  3638  0FB5  0026               	movlb	6	; select bank6
  3639  0FB6  108D               	bcf	13,1	;volatile
  3640                           
  3641                           ;master_eight.c: 1003: TRISGbits.TRISG2=1;
  3642  0FB7  150D               	bsf	13,2	;volatile
  3643                           
  3644                           ;master_eight.c: 1005: clearAllPorts();
  3645  0FB8  318F  2743         	fcall	_clearAllPorts
  3646  0FBA  0008               	return
  3647  0FBB                     __end_of_GPIO_pin_Initialize:	
  3648                           
  3649                           	psect	text18
  3650  0F90                     __ptext18:	
  3651 ;; *************** function _pinINIT_extra *****************
  3652 ;; Defined at:
  3653 ;;		line 1258 in file "../master_eight.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		status,2
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    2
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_GPIO_pin_Initialize
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _pinINIT_extra
  3683  0F90                     _pinINIT_extra:	
  3684                           
  3685                           ;master_eight.c: 1259: ANSELG=0x00; WPUG = 0;
  3686                           
  3687                           ;incstack = 0
  3688                           ; Regs used in _pinINIT_extra: [status,2]
  3689  0F90  0028               	movlb	8	; select bank8
  3690  0F91  018D               	clrf	13	;volatile
  3691  0F92  0029               	movlb	9	; select bank9
  3692  0F93  018D               	clrf	13	;volatile
  3693                           
  3694                           ;master_eight.c: 1261: ANSELF=0x00;
  3695  0F94  0028               	movlb	8	; select bank8
  3696  0F95  018C               	clrf	12	;volatile
  3697                           
  3698                           ;master_eight.c: 1263: ANSELE=0x00; WPUE=0x00;
  3699  0F96  0023               	movlb	3	; select bank3
  3700  0F97  0190               	clrf	16	;volatile
  3701  0F98  0024               	movlb	4	; select bank4
  3702  0F99  0190               	clrf	16	;volatile
  3703                           
  3704                           ;master_eight.c: 1265: ANSELD=0x00; WPUD=0x00;
  3705  0F9A  0023               	movlb	3	; select bank3
  3706  0F9B  018F               	clrf	15	;volatile
  3707  0F9C  0024               	movlb	4	; select bank4
  3708  0F9D  018F               	clrf	15	;volatile
  3709                           
  3710                           ;master_eight.c: 1267: ANSELB=0x00; WPUB=0x00;
  3711  0F9E  0023               	movlb	3	; select bank3
  3712  0F9F  018D               	clrf	13	;volatile
  3713  0FA0  0024               	movlb	4	; select bank4
  3714  0FA1  018D               	clrf	13	;volatile
  3715                           
  3716                           ;master_eight.c: 1269: ANSELA=0x00;
  3717  0FA2  0023               	movlb	3	; select bank3
  3718  0FA3  018C               	clrf	12	;volatile
  3719  0FA4  0008               	return
  3720  0FA5                     __end_of_pinINIT_extra:	
  3721                           
  3722                           	psect	text19
  3723  0F43                     __ptext19:	
  3724 ;; *************** function _clearAllPorts *****************
  3725 ;; Defined at:
  3726 ;;		line 1275 in file "../master_eight.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		None
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    2
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_GPIO_pin_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _clearAllPorts
  3756  0F43                     _clearAllPorts:	
  3757                           
  3758                           ;master_eight.c: 1279: PORTAbits.RA2=0;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _clearAllPorts: []
  3762  0F43  0020               	movlb	0	; select bank0
  3763  0F44  110C               	bcf	12,2	;volatile
  3764                           
  3765                           ;master_eight.c: 1280: PORTEbits.RE5=1;
  3766  0F45  1690               	bsf	16,5	;volatile
  3767  0F46  0008               	return
  3768  0F47                     __end_of_clearAllPorts:	
  3769                           
  3770                           	psect	intentry
  3771  0004                     __pintentry:	
  3772 ;; *************** function _isr *****************
  3773 ;; Defined at:
  3774 ;;		line 157 in file "../master_eight.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  3791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    1
  3795 ;; This function calls:
  3796 ;;		_errorsISR
  3797 ;; This function is called by:
  3798 ;;		Interrupt level 1
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802  0004                     _isr:	
  3803                           
  3804                           ;incstack = 0
  3805  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3806                           
  3807                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3808  0005  3180               	pagesel	$
  3809  0006  0020               	movlb	0	; select bank0
  3810  0007  087F               	movf	127,w
  3811  0008  00FB               	movwf	??_isr+1
  3812                           
  3813                           ;master_eight.c: 162: if(RC2IF){
  3814  0009  1E94               	btfss	20,5	;volatile
  3815  000A  287E               	goto	i1l2576
  3816                           
  3817                           ;master_eight.c: 163: if(RC2STAbits.OERR){
  3818  000B  0029               	movlb	9	; select bank9
  3819  000C  1C95               	btfss	21,1	;volatile
  3820  000D  2824               	goto	i1l2544
  3821                           
  3822                           ;master_eight.c: 164: RC2STAbits.CREN = 0;
  3823  000E  1215               	bcf	21,4	;volatile
  3824                           
  3825                           ;master_eight.c: 165: RC2STAbits.CREN = 1;
  3826  000F  1615               	bsf	21,4	;volatile
  3827                           
  3828                           ;master_eight.c: 167: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  3829  0010  3045               	movlw	69
  3830  0011  00FA               	movwf	??_isr
  3831  0012  087A               	movf	??_isr,w
  3832  0013  00F1               	movwf	_ErrorNames
  3833  0014  3052               	movlw	82
  3834  0015  00FA               	movwf	??_isr
  3835  0016  087A               	movf	??_isr,w
  3836  0017  00F2               	movwf	_ErrorNames+1
  3837  0018  304F               	movlw	79
  3838  0019  00FA               	movwf	??_isr
  3839  001A  087A               	movf	??_isr,w
  3840  001B  00F3               	movwf	_ErrorNames+2
  3841  001C  3056               	movlw	86
  3842  001D  00FA               	movwf	??_isr
  3843  001E  087A               	movf	??_isr,w
  3844  001F  00F4               	movwf	_ErrorNames+3
  3845                           
  3846                           ;master_eight.c: 168: errorsISR(ErrorNames);
  3847  0020  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3848  0021  318F  27E7  3180   	fcall	_errorsISR
  3849  0024                     i1l2544:	
  3850                           
  3851                           ;master_eight.c: 169: }
  3852                           ;master_eight.c: 170: if(RC2STAbits.FERR){
  3853  0024  0029               	movlb	9	; select bank9
  3854  0025  1D15               	btfss	21,2	;volatile
  3855  0026  283D               	goto	i1l2552
  3856                           
  3857                           ;master_eight.c: 171: RC2STAbits.CREN = 0;
  3858  0027  1215               	bcf	21,4	;volatile
  3859                           
  3860                           ;master_eight.c: 172: RC2STAbits.CREN = 1;
  3861  0028  1615               	bsf	21,4	;volatile
  3862                           
  3863                           ;master_eight.c: 174: ErrorNames[0]='R'; ErrorNames[1]='E'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='R';
  3864  0029  3052               	movlw	82
  3865  002A  00FA               	movwf	??_isr
  3866  002B  087A               	movf	??_isr,w
  3867  002C  00F1               	movwf	_ErrorNames
  3868  002D  3045               	movlw	69
  3869  002E  00FA               	movwf	??_isr
  3870  002F  087A               	movf	??_isr,w
  3871  0030  00F2               	movwf	_ErrorNames+1
  3872  0031  3052               	movlw	82
  3873  0032  00FA               	movwf	??_isr
  3874  0033  087A               	movf	??_isr,w
  3875  0034  00F3               	movwf	_ErrorNames+2
  3876  0035  3052               	movlw	82
  3877  0036  00FA               	movwf	??_isr
  3878  0037  087A               	movf	??_isr,w
  3879  0038  00F4               	movwf	_ErrorNames+3
  3880                           
  3881                           ;master_eight.c: 175: errorsISR(ErrorNames);
  3882  0039  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3883  003A  318F  27E7  3180   	fcall	_errorsISR
  3884  003D                     i1l2552:	
  3885                           
  3886                           ;master_eight.c: 176: }
  3887                           ;master_eight.c: 178: touchpanleReceivedDatabuffer[touchpanelReceivedataPosition] = RC2R
      +                          EG;
  3888  003D  0029               	movlb	9	; select bank9
  3889  003E  0811               	movf	17,w	;volatile
  3890  003F  00FA               	movwf	??_isr
  3891  0040  0020               	movlb	0	; select bank0
  3892  0041  085A               	movf	_touchpanelReceivedataPosition,w
  3893  0042  3EB8               	addlw	(low (_touchpanleReceivedDatabuffer| 0))& (0+255)
  3894  0043  0086               	movwf	6
  3895  0044  0187               	clrf	7
  3896  0045  087A               	movf	??_isr,w
  3897  0046  0081               	movwf	1
  3898                           
  3899                           ;master_eight.c: 179: if(touchpanleReceivedDatabuffer[0] == '(')
  3900  0047  3028               	movlw	40
  3901  0048  0021               	movlb	1	; select bank1
  3902  0049  0638               	xorwf	_touchpanleReceivedDatabuffer^(0+128),w
  3903  004A  1D03               	btfss	3,2
  3904  004B  2864               	goto	i1l234
  3905                           
  3906                           ;master_eight.c: 180: {
  3907                           ;master_eight.c: 181: touchpanelReceivedataPosition++;
  3908  004C  3001               	movlw	1
  3909  004D  0020               	movlb	0	; select bank0
  3910  004E  07DA               	addwf	_touchpanelReceivedataPosition,f
  3911  004F  3000               	movlw	0
  3912  0050  3DDB               	addwfc	_touchpanelReceivedataPosition+1,f
  3913                           
  3914                           ;master_eight.c: 182: if(touchpanelReceivedataPosition > 7)
  3915  0051  085B               	movf	_touchpanelReceivedataPosition+1,w
  3916  0052  3A80               	xorlw	128
  3917  0053  00FA               	movwf	??_isr
  3918  0054  3080               	movlw	128
  3919  0055  027A               	subwf	??_isr,w
  3920  0056  3008               	movlw	8
  3921  0057  1903               	btfsc	3,2
  3922  0058  025A               	subwf	_touchpanelReceivedataPosition,w
  3923  0059  1C03               	skipc
  3924  005A  287E               	goto	i1l2576
  3925                           
  3926                           ;master_eight.c: 183: {
  3927                           ;master_eight.c: 184: touchPanelDataReceived = 1;
  3928  005B  3001               	movlw	1
  3929  005C  0020               	movlb	0	; select bank0
  3930  005D  00D8               	movwf	_touchPanelDataReceived	;volatile
  3931  005E  3000               	movlw	0
  3932  005F  00D9               	movwf	_touchPanelDataReceived+1	;volatile
  3933                           
  3934                           ;master_eight.c: 186: touchpanelReceivedataPosition=0;
  3935  0060  01DA               	clrf	_touchpanelReceivedataPosition
  3936  0061  01DB               	clrf	_touchpanelReceivedataPosition+1
  3937                           
  3938                           ;master_eight.c: 187: RC2IF = 0;
  3939  0062  1294               	bcf	20,5	;volatile
  3940                           
  3941                           ;master_eight.c: 188: }
  3942                           ;master_eight.c: 189: }
  3943  0063  287E               	goto	i1l2576
  3944  0064                     i1l234:	
  3945                           
  3946                           ;master_eight.c: 190: else{
  3947                           ;master_eight.c: 191: RC2STAbits.CREN = 0;
  3948  0064  0029               	movlb	9	; select bank9
  3949  0065  1215               	bcf	21,4	;volatile
  3950                           
  3951                           ;master_eight.c: 192: RC2STAbits.CREN = 1;
  3952  0066  1615               	bsf	21,4	;volatile
  3953                           
  3954                           ;master_eight.c: 193: touchpanelReceivedataPosition=0;
  3955  0067  0020               	movlb	0	; select bank0
  3956  0068  01DA               	clrf	_touchpanelReceivedataPosition
  3957  0069  01DB               	clrf	_touchpanelReceivedataPosition+1
  3958                           
  3959                           ;master_eight.c: 195: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='T';
  3960  006A  3045               	movlw	69
  3961  006B  00FA               	movwf	??_isr
  3962  006C  087A               	movf	??_isr,w
  3963  006D  00F1               	movwf	_ErrorNames
  3964  006E  3052               	movlw	82
  3965  006F  00FA               	movwf	??_isr
  3966  0070  087A               	movf	??_isr,w
  3967  0071  00F2               	movwf	_ErrorNames+1
  3968  0072  3052               	movlw	82
  3969  0073  00FA               	movwf	??_isr
  3970  0074  087A               	movf	??_isr,w
  3971  0075  00F3               	movwf	_ErrorNames+2
  3972  0076  3054               	movlw	84
  3973  0077  00FA               	movwf	??_isr
  3974  0078  087A               	movf	??_isr,w
  3975  0079  00F4               	movwf	_ErrorNames+3
  3976                           
  3977                           ;master_eight.c: 196: errorsISR(ErrorNames);
  3978  007A  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  3979  007B  318F  27E7  3180   	fcall	_errorsISR
  3980  007E                     i1l2576:	
  3981                           
  3982                           ;master_eight.c: 197: }
  3983                           ;master_eight.c: 198: }
  3984                           ;master_eight.c: 201: if(RC1IF){
  3985  007E  0020               	movlb	0	; select bank0
  3986  007F  1E91               	btfss	17,5	;volatile
  3987  0080  28DD               	goto	i1l2610
  3988                           
  3989                           ;master_eight.c: 202: if(RC1STAbits.OERR){
  3990  0081  0023               	movlb	3	; select bank3
  3991  0082  1C9D               	btfss	29,1	;volatile
  3992  0083  289A               	goto	i1l2586
  3993                           
  3994                           ;master_eight.c: 203: RC1STAbits.CREN = 0;
  3995  0084  121D               	bcf	29,4	;volatile
  3996                           
  3997                           ;master_eight.c: 204: RC1STAbits.CREN = 1;
  3998  0085  161D               	bsf	29,4	;volatile
  3999                           
  4000                           ;master_eight.c: 206: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='O'; ErrorName
      +                          s[3]='V';
  4001  0086  3045               	movlw	69
  4002  0087  00FA               	movwf	??_isr
  4003  0088  087A               	movf	??_isr,w
  4004  0089  00F1               	movwf	_ErrorNames
  4005  008A  3052               	movlw	82
  4006  008B  00FA               	movwf	??_isr
  4007  008C  087A               	movf	??_isr,w
  4008  008D  00F2               	movwf	_ErrorNames+1
  4009  008E  304F               	movlw	79
  4010  008F  00FA               	movwf	??_isr
  4011  0090  087A               	movf	??_isr,w
  4012  0091  00F3               	movwf	_ErrorNames+2
  4013  0092  3056               	movlw	86
  4014  0093  00FA               	movwf	??_isr
  4015  0094  087A               	movf	??_isr,w
  4016  0095  00F4               	movwf	_ErrorNames+3
  4017                           
  4018                           ;master_eight.c: 207: errorsISR(ErrorNames);
  4019  0096  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  4020  0097  318F  27E7  3180   	fcall	_errorsISR
  4021  009A                     i1l2586:	
  4022                           
  4023                           ;master_eight.c: 208: }
  4024                           ;master_eight.c: 209: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  4025  009A  0023               	movlb	3	; select bank3
  4026  009B  0819               	movf	25,w	;volatile
  4027  009C  00FA               	movwf	??_isr
  4028  009D  0020               	movlb	0	; select bank0
  4029  009E  085E               	movf	_mainReceivedDataPosition,w
  4030  009F  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  4031  00A0  0086               	movwf	6
  4032  00A1  3001               	movlw	1	; select bank2/3
  4033  00A2  0087               	movwf	7
  4034  00A3  087A               	movf	??_isr,w
  4035  00A4  0081               	movwf	1
  4036                           
  4037                           ;master_eight.c: 212: if(mainReceivedDataBuffer[0]=='%'){
  4038  00A5  3025               	movlw	37
  4039  00A6  0022               	movlb	2	; select bank2
  4040  00A7  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  4041  00A8  1D03               	btfss	3,2
  4042  00A9  28C3               	goto	i1l239
  4043                           
  4044                           ;master_eight.c: 213: mainReceivedDataPosition++;
  4045  00AA  3001               	movlw	1
  4046  00AB  0020               	movlb	0	; select bank0
  4047  00AC  07DE               	addwf	_mainReceivedDataPosition,f
  4048  00AD  3000               	movlw	0
  4049  00AE  3DDF               	addwfc	_mainReceivedDataPosition+1,f
  4050                           
  4051                           ;master_eight.c: 214: if(mainReceivedDataPosition>15){
  4052  00AF  085F               	movf	_mainReceivedDataPosition+1,w
  4053  00B0  3A80               	xorlw	128
  4054  00B1  00FA               	movwf	??_isr
  4055  00B2  3080               	movlw	128
  4056  00B3  027A               	subwf	??_isr,w
  4057  00B4  1D03               	skipz
  4058  00B5  28B8               	goto	u106_25
  4059  00B6  3010               	movlw	16
  4060  00B7  025E               	subwf	_mainReceivedDataPosition,w
  4061  00B8                     u106_25:	
  4062  00B8  1C03               	skipc
  4063  00B9  28DD               	goto	i1l2610
  4064                           
  4065                           ;master_eight.c: 215: mainDataReceived=1;
  4066  00BA  3001               	movlw	1
  4067  00BB  0020               	movlb	0	; select bank0
  4068  00BC  00DC               	movwf	_mainDataReceived
  4069  00BD  3000               	movlw	0
  4070  00BE  00DD               	movwf	_mainDataReceived+1
  4071                           
  4072                           ;master_eight.c: 216: mainReceivedDataPosition=0;
  4073  00BF  01DE               	clrf	_mainReceivedDataPosition
  4074  00C0  01DF               	clrf	_mainReceivedDataPosition+1
  4075                           
  4076                           ;master_eight.c: 217: RC1IF=0;
  4077  00C1  1291               	bcf	17,5	;volatile
  4078                           
  4079                           ;master_eight.c: 218: }
  4080                           ;master_eight.c: 219: }
  4081  00C2  28DD               	goto	i1l2610
  4082  00C3                     i1l239:	
  4083                           
  4084                           ;master_eight.c: 220: else{
  4085                           ;master_eight.c: 221: RC1STAbits.CREN = 0;
  4086  00C3  0023               	movlb	3	; select bank3
  4087  00C4  121D               	bcf	29,4	;volatile
  4088                           
  4089                           ;master_eight.c: 222: RC1STAbits.CREN = 1;
  4090  00C5  161D               	bsf	29,4	;volatile
  4091                           
  4092                           ;master_eight.c: 223: mainReceivedDataPosition=0;
  4093  00C6  0020               	movlb	0	; select bank0
  4094  00C7  01DE               	clrf	_mainReceivedDataPosition
  4095  00C8  01DF               	clrf	_mainReceivedDataPosition+1
  4096                           
  4097                           ;master_eight.c: 225: ErrorNames[0]='E'; ErrorNames[1]='R'; ErrorNames[2]='R'; ErrorName
      +                          s[3]='X';
  4098  00C9  3045               	movlw	69
  4099  00CA  00FA               	movwf	??_isr
  4100  00CB  087A               	movf	??_isr,w
  4101  00CC  00F1               	movwf	_ErrorNames
  4102  00CD  3052               	movlw	82
  4103  00CE  00FA               	movwf	??_isr
  4104  00CF  087A               	movf	??_isr,w
  4105  00D0  00F2               	movwf	_ErrorNames+1
  4106  00D1  3052               	movlw	82
  4107  00D2  00FA               	movwf	??_isr
  4108  00D3  087A               	movf	??_isr,w
  4109  00D4  00F3               	movwf	_ErrorNames+2
  4110  00D5  3058               	movlw	88
  4111  00D6  00FA               	movwf	??_isr
  4112  00D7  087A               	movf	??_isr,w
  4113  00D8  00F4               	movwf	_ErrorNames+3
  4114                           
  4115                           ;master_eight.c: 226: errorsISR(ErrorNames);
  4116  00D9  3071               	movlw	(low (_ErrorNames| 0))& (0+255)
  4117  00DA  318F  27E7  3180   	fcall	_errorsISR
  4118  00DD                     i1l2610:	
  4119                           
  4120                           ;master_eight.c: 227: }
  4121                           ;master_eight.c: 228: }
  4122                           ;master_eight.c: 230: if(PIE3bits.TMR3IE==1 && PIR3bits.TMR3IF==1)
  4123  00DD  0021               	movlb	1	; select bank1
  4124  00DE  1C13               	btfss	19,0	;volatile
  4125  00DF  28E7               	goto	i1l242
  4126  00E0  0020               	movlb	0	; select bank0
  4127  00E1  1C13               	btfss	19,0	;volatile
  4128  00E2  28E7               	goto	i1l242
  4129                           
  4130                           ;master_eight.c: 231: {
  4131                           ;master_eight.c: 232: PIR3bits.TMR3IF=0;
  4132  00E3  1013               	bcf	19,0	;volatile
  4133                           
  4134                           ;master_eight.c: 233: PORTEbits.RE5 = 1;
  4135  00E4  1690               	bsf	16,5	;volatile
  4136                           
  4137                           ;master_eight.c: 234: T3CONbits.TMR3ON=0;
  4138  00E5  0028               	movlb	8	; select bank8
  4139  00E6  1013               	bcf	19,0	;volatile
  4140  00E7                     i1l242:	
  4141                           
  4142                           ;master_eight.c: 236: }
  4143                           ;master_eight.c: 240: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  4144  00E7  0021               	movlb	1	; select bank1
  4145  00E8  1C11               	btfss	17,0	;volatile
  4146  00E9  28F7               	goto	i1l2626
  4147  00EA  0020               	movlb	0	; select bank0
  4148  00EB  1C11               	btfss	17,0	;volatile
  4149  00EC  28F7               	goto	i1l2626
  4150                           
  4151                           ;master_eight.c: 241: {
  4152                           ;master_eight.c: 242: PIR1bits.TMR1IF=0;
  4153  00ED  1011               	bcf	17,0	;volatile
  4154                           
  4155                           ;master_eight.c: 244: PORTEbits.RE5 = 0;
  4156  00EE  1290               	bcf	16,5	;volatile
  4157                           
  4158                           ;master_eight.c: 245: TMR3H=0xFF;
  4159  00EF  30FF               	movlw	255
  4160  00F0  0028               	movlb	8	; select bank8
  4161  00F1  0092               	movwf	18	;volatile
  4162                           
  4163                           ;master_eight.c: 246: TMR3L=0xD8;
  4164  00F2  30D8               	movlw	216
  4165  00F3  0091               	movwf	17	;volatile
  4166                           
  4167                           ;master_eight.c: 247: T3CONbits.TMR3ON = 1;
  4168  00F4  1413               	bsf	19,0	;volatile
  4169                           
  4170                           ;master_eight.c: 248: T1CONbits.TMR1ON = 0;
  4171  00F5  0020               	movlb	0	; select bank0
  4172  00F6  1018               	bcf	24,0	;volatile
  4173  00F7                     i1l2626:	
  4174                           
  4175                           ;master_eight.c: 249: }
  4176                           ;master_eight.c: 252: if(CCP9IF){
  4177  00F7  0020               	movlb	0	; select bank0
  4178  00F8  1B14               	btfsc	20,6	;volatile
  4179                           
  4180                           ;master_eight.c: 253: if(CCP9IF == 1){
  4181  00F9  1F14               	btfss	20,6	;volatile
  4182  00FA  2A9B               	goto	i1l390
  4183                           
  4184                           ;master_eight.c: 254: CCP9IF=0;
  4185  00FB  1314               	bcf	20,6	;volatile
  4186                           
  4187                           ;master_eight.c: 255: if(start_PWM_Generation_in_ISR_FLAG == 1){
  4188  00FC  0356               	decf	_start_PWM_Generation_in_ISR_FLAG,w
  4189  00FD  0457               	iorwf	_start_PWM_Generation_in_ISR_FLAG+1,w
  4190  00FE  1903               	btfsc	3,2
  4191  00FF  2A8E               	goto	i1l3068
  4192  0100  2A9B               	goto	i1l390
  4193  0101                     i1l2636:	
  4194                           ;master_eight.c: 262: {
  4195                           ;master_eight.c: 263: case '0':
  4196                           
  4197                           ;master_eight.c: 261: switch(levelofDimmer_LSB)
  4198                           
  4199                           ;master_eight.c: 258: {
  4200                           ;master_eight.c: 259: case '0':
  4201                           
  4202                           ;master_eight.c: 257: switch(levelofDimmer_MSB)
  4203                           
  4204                           
  4205                           ;master_eight.c: 264: TMR1H=0x7B;
  4206  0101  307B               	movlw	123
  4207  0102  2A19               	goto	L34
  4208  0103                     i1l2640:	
  4209                           ;master_eight.c: 269: case '1':
  4210                           
  4211                           ;master_eight.c: 268: break;
  4212                           
  4213                           ;master_eight.c: 266: T1CONbits.TMR1ON = 1;
  4214                           
  4215                           ;master_eight.c: 265: TMR1L=0x30;
  4216                           
  4217                           
  4218                           ;master_eight.c: 270: TMR1H=0x7C;
  4219  0103  307C               	movlw	124
  4220  0104  2A1D               	goto	L35
  4221  0105                     i1l2644:	
  4222                           ;master_eight.c: 275: case '2':
  4223                           
  4224                           ;master_eight.c: 274: break;
  4225                           
  4226                           ;master_eight.c: 272: T1CONbits.TMR1ON = 1;
  4227                           
  4228                           ;master_eight.c: 271: TMR1L=0xC0;
  4229                           
  4230                           
  4231                           ;master_eight.c: 276: TMR1H=0x7D;
  4232  0105  307D               	movlw	125
  4233  0106  0097               	movwf	23	;volatile
  4234                           
  4235                           ;master_eight.c: 277: TMR1L=0x88;
  4236  0107  3088               	movlw	136
  4237  0108  2A7B               	goto	L3
  4238  0109                     i1l2648:	
  4239                           ;master_eight.c: 280: case '3':
  4240                           
  4241                           ;master_eight.c: 279: break;
  4242                           
  4243                           ;master_eight.c: 278: T1CONbits.TMR1ON = 1;
  4244                           
  4245                           
  4246                           ;master_eight.c: 281: TMR1H=0x7F;
  4247  0109  307F               	movlw	127
  4248  010A  0097               	movwf	23	;volatile
  4249                           
  4250                           ;master_eight.c: 282: TMR1L=0x18;
  4251  010B  3018               	movlw	24
  4252  010C  2A7B               	goto	L3
  4253  010D                     i1l2652:	
  4254                           ;master_eight.c: 285: case '4':
  4255                           
  4256                           ;master_eight.c: 284: break;
  4257                           
  4258                           ;master_eight.c: 283: T1CONbits.TMR1ON = 1;
  4259                           
  4260                           
  4261                           ;master_eight.c: 286: TMR1H=0x80;
  4262  010D  3080               	movlw	128
  4263  010E  2A37               	goto	L49
  4264  010F                     i1l2656:	
  4265                           ;master_eight.c: 290: case '5':
  4266                           
  4267                           ;master_eight.c: 289: break;
  4268                           
  4269                           ;master_eight.c: 288: T1CONbits.TMR1ON = 1;
  4270                           
  4271                           ;master_eight.c: 287: TMR1L=0xA8;
  4272                           
  4273                           
  4274                           ;master_eight.c: 291: TMR1H=0x81;
  4275  010F  3081               	movlw	129
  4276  0110  2A3B               	goto	L38
  4277  0111                     i1l2660:	
  4278                           ;master_eight.c: 295: case '6':
  4279                           
  4280                           ;master_eight.c: 294: break;
  4281                           
  4282                           ;master_eight.c: 293: T1CONbits.TMR1ON = 1;
  4283                           
  4284                           ;master_eight.c: 292: TMR1L=0x70;
  4285                           
  4286                           
  4287                           ;master_eight.c: 296: TMR1H=0x83;
  4288  0111  3083               	movlw	131
  4289  0112  2A43               	goto	L39
  4290  0113                     i1l2666:	
  4291                           ;master_eight.c: 300: case '7':
  4292                           
  4293                           ;master_eight.c: 299: break;
  4294                           
  4295                           ;master_eight.c: 298: T1CONbits.TMR1ON = 1;
  4296                           
  4297                           ;master_eight.c: 297: TMR1L=0x00;
  4298                           
  4299                           
  4300                           ;master_eight.c: 301: TMR1H=0x83;
  4301  0113  3083               	movlw	131
  4302  0114  0097               	movwf	23	;volatile
  4303                           
  4304                           ;master_eight.c: 302: TMR1L=0xC8;
  4305  0115  30C8               	movlw	200
  4306  0116  2A7B               	goto	L3
  4307  0117                     i1l2670:	
  4308                           ;master_eight.c: 305: case '8':
  4309                           
  4310                           ;master_eight.c: 304: break;
  4311                           
  4312                           ;master_eight.c: 303: T1CONbits.TMR1ON = 1;
  4313                           
  4314  0117  2930               	goto	i1l2690
  4315  0118                     i1l2674:	
  4316                           ;master_eight.c: 310: case '9':
  4317                           
  4318                           ;master_eight.c: 309: break;
  4319                           
  4320                           ;master_eight.c: 308: T1CONbits.TMR1ON = 1;
  4321                           
  4322                           ;master_eight.c: 307: TMR1L=0xB0;
  4323                           
  4324                           ;master_eight.c: 306: TMR1H=0x87;
  4325                           
  4326                           
  4327                           ;master_eight.c: 311: TMR1H=0x85;
  4328  0118  3085               	movlw	133
  4329  0119  0097               	movwf	23	;volatile
  4330                           
  4331                           ;master_eight.c: 312: TMR1L=0x58;
  4332  011A  3058               	movlw	88
  4333  011B  2A7B               	goto	L3
  4334  011C                     i1l2680:	
  4335                           ;master_eight.c: 318: }
  4336                           
  4337                           ;master_eight.c: 317: break;
  4338                           
  4339                           ;master_eight.c: 316: default:
  4340                           
  4341                           ;master_eight.c: 314: break;
  4342                           
  4343                           ;master_eight.c: 313: T1CONbits.TMR1ON = 1;
  4344                           
  4345  011C  0870               	movf	_levelofDimmer_LSB,w
  4346                           
  4347                           ; Switch size 1, requested type "space"
  4348                           ; Number of cases is 10, Range of values is 48 to 57
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; direct_byte           29     9 (fixed)
  4352                           ; simple_byte           31    16 (average)
  4353                           ; jumptable            263     9 (fixed)
  4354                           ;	Chosen strategy is direct_byte
  4355  011D  3ED0               	addlw	-48
  4356  011E  1C03               	skipc
  4357  011F  2A9B               	goto	i1l390
  4358  0120  0084               	movwf	4
  4359  0121  300A               	movlw	10
  4360  0122  0204               	subwf	4,w
  4361  0123  1803               	skipnc
  4362  0124  2A9B               	goto	i1l390
  4363  0125  3188               	movlp	high i1S4220
  4364  0126  3504               	lslf	4,w
  4365  0127  3E00               	addlw	low i1S4220
  4366  0128  0082               	movwf	2
  4367                           
  4368                           ;master_eight.c: 319: break;
  4369  0129  2A9B               	goto	i1l390
  4370  012A                     i1l2682:	
  4371                           ;master_eight.c: 323: {
  4372                           ;master_eight.c: 324: case '0':
  4373                           
  4374                           ;master_eight.c: 322: switch(levelofDimmer_LSB)
  4375                           
  4376                           ;master_eight.c: 320: case '1':
  4377                           
  4378                           
  4379                           ;master_eight.c: 325: TMR1H=0x86;
  4380  012A  3086               	movlw	134
  4381  012B  2A4B               	goto	L41
  4382  012C                     i1l2686:	
  4383                           ;master_eight.c: 329: case '1':
  4384                           
  4385                           ;master_eight.c: 328: break;
  4386                           
  4387                           ;master_eight.c: 327: T1CONbits.TMR1ON = 1;
  4388                           
  4389                           ;master_eight.c: 326: TMR1L=0x20;
  4390                           
  4391                           
  4392                           ;master_eight.c: 330: TMR1H=0x86;
  4393  012C  3086               	movlw	134
  4394  012D  0097               	movwf	23	;volatile
  4395                           
  4396                           ;master_eight.c: 331: TMR1L=0xE8;
  4397  012E  30E8               	movlw	232
  4398  012F  2A7B               	goto	L3
  4399  0130                     i1l2690:	
  4400                           ;master_eight.c: 334: case '2':
  4401                           
  4402                           ;master_eight.c: 333: break;
  4403                           
  4404                           ;master_eight.c: 332: T1CONbits.TMR1ON = 1;
  4405                           
  4406                           
  4407                           ;master_eight.c: 335: TMR1H=0x87;
  4408  0130  3087               	movlw	135
  4409  0131  2A4F               	goto	L42
  4410  0132                     i1l2694:	
  4411                           ;master_eight.c: 339: case '3':
  4412                           
  4413                           ;master_eight.c: 338: break;
  4414                           
  4415                           ;master_eight.c: 337: T1CONbits.TMR1ON = 1;
  4416                           
  4417                           ;master_eight.c: 336: TMR1L=0xB0;
  4418                           
  4419                           
  4420                           ;master_eight.c: 340: TMR1H=0x88;
  4421  0132  3088               	movlw	136
  4422  0133  2A53               	goto	L50
  4423  0134                     i1l2698:	
  4424                           ;master_eight.c: 344: case '4':
  4425                           
  4426                           ;master_eight.c: 343: break;
  4427                           
  4428                           ;master_eight.c: 342: T1CONbits.TMR1ON = 1;
  4429                           
  4430                           ;master_eight.c: 341: TMR1L=0x78;
  4431                           
  4432                           
  4433                           ;master_eight.c: 345: TMR1H=0x89;
  4434  0134  3089               	movlw	137
  4435  0135  2A57               	goto	L43
  4436  0136                     i1l2702:	
  4437                           ;master_eight.c: 349: case '5':
  4438                           
  4439                           ;master_eight.c: 348: break;
  4440                           
  4441                           ;master_eight.c: 347: T1CONbits.TMR1ON = 1;
  4442                           
  4443                           ;master_eight.c: 346: TMR1L=0x40;
  4444                           
  4445                           
  4446                           ;master_eight.c: 350: TMR1H=0x8A;
  4447  0136  308A               	movlw	138
  4448  0137  0097               	movwf	23	;volatile
  4449                           
  4450                           ;master_eight.c: 351: TMR1L=0x08;
  4451  0138  3008               	movlw	8
  4452  0139  2A7B               	goto	L3
  4453  013A                     i1l2706:	
  4454                           ;master_eight.c: 354: case '6':
  4455                           
  4456                           ;master_eight.c: 353: break;
  4457                           
  4458                           ;master_eight.c: 352: T1CONbits.TMR1ON = 1;
  4459                           
  4460                           
  4461                           ;master_eight.c: 355: TMR1H=0x8A;
  4462  013A  308A               	movlw	138
  4463  013B  2A69               	goto	L44
  4464  013C                     i1l2710:	
  4465                           ;master_eight.c: 359: case '7':
  4466                           
  4467                           ;master_eight.c: 358: break;
  4468                           
  4469                           ;master_eight.c: 357: T1CONbits.TMR1ON = 1;
  4470                           
  4471                           ;master_eight.c: 356: TMR1L=0xD0;
  4472                           
  4473                           
  4474                           ;master_eight.c: 360: TMR1H=0x8B;
  4475  013C  308B               	movlw	139
  4476  013D  0097               	movwf	23	;volatile
  4477                           
  4478                           ;master_eight.c: 361: TMR1L=0x98;
  4479  013E  3098               	movlw	152
  4480  013F  2A7B               	goto	L3
  4481  0140                     i1l2714:	
  4482                           ;master_eight.c: 364: case '8':
  4483                           
  4484                           ;master_eight.c: 363: break;
  4485                           
  4486                           ;master_eight.c: 362: T1CONbits.TMR1ON = 1;
  4487                           
  4488                           
  4489                           ;master_eight.c: 365: TMR1H=0x8C;
  4490  0140  308C               	movlw	140
  4491  0141  2A6D               	goto	L45
  4492  0142                     i1l2718:	
  4493                           ;master_eight.c: 369: case '9':
  4494                           
  4495                           ;master_eight.c: 368: break;
  4496                           
  4497                           ;master_eight.c: 367: T1CONbits.TMR1ON = 1;
  4498                           
  4499                           ;master_eight.c: 366: TMR1L=0x60;
  4500                           
  4501                           
  4502                           ;master_eight.c: 370: TMR1H=0x8D;
  4503  0142  308D               	movlw	141
  4504  0143  0097               	movwf	23	;volatile
  4505                           
  4506                           ;master_eight.c: 371: TMR1L=0x28;
  4507  0144  3028               	movlw	40
  4508  0145  2A7B               	goto	L3
  4509  0146                     i1l2724:	
  4510                           ;master_eight.c: 377: }
  4511                           
  4512                           ;master_eight.c: 376: break;
  4513                           
  4514                           ;master_eight.c: 375: default:
  4515                           
  4516                           ;master_eight.c: 373: break;
  4517                           
  4518                           ;master_eight.c: 372: T1CONbits.TMR1ON = 1;
  4519                           
  4520  0146  0870               	movf	_levelofDimmer_LSB,w
  4521                           
  4522                           ; Switch size 1, requested type "space"
  4523                           ; Number of cases is 10, Range of values is 48 to 57
  4524                           ; switch strategies available:
  4525                           ; Name         Instructions Cycles
  4526                           ; direct_byte           29     9 (fixed)
  4527                           ; simple_byte           31    16 (average)
  4528                           ; jumptable            263     9 (fixed)
  4529                           ;	Chosen strategy is direct_byte
  4530  0147  3ED0               	addlw	-48
  4531  0148  1C03               	skipc
  4532  0149  2A9B               	goto	i1l390
  4533  014A  0084               	movwf	4
  4534  014B  300A               	movlw	10
  4535  014C  0204               	subwf	4,w
  4536  014D  1803               	skipnc
  4537  014E  2A9B               	goto	i1l390
  4538  014F  3188               	movlp	high i1S4222
  4539  0150  3504               	lslf	4,w
  4540  0151  3E14               	addlw	low i1S4222
  4541  0152  0082               	movwf	2
  4542                           
  4543                           ;master_eight.c: 378: break;
  4544  0153  2A9B               	goto	i1l390
  4545  0154                     i1l2726:	
  4546                           ;master_eight.c: 382: {
  4547                           ;master_eight.c: 383: case '0':
  4548                           
  4549                           ;master_eight.c: 381: switch(levelofDimmer_LSB)
  4550                           
  4551                           ;master_eight.c: 379: case '2':
  4552                           
  4553                           
  4554                           ;master_eight.c: 384: TMR1H=0x8D;
  4555  0154  308D               	movlw	141
  4556  0155  2A71               	goto	L46
  4557  0156                     i1l2730:	
  4558                           ;master_eight.c: 388: case '1':
  4559                           
  4560                           ;master_eight.c: 387: break;
  4561                           
  4562                           ;master_eight.c: 386: T1CONbits.TMR1ON = 1;
  4563                           
  4564                           ;master_eight.c: 385: TMR1L=0xF0;
  4565                           
  4566                           
  4567                           ;master_eight.c: 389: TMR1H=0x8E;
  4568  0156  308E               	movlw	142
  4569  0157  0097               	movwf	23	;volatile
  4570                           
  4571                           ;master_eight.c: 390: TMR1L=0xB8;
  4572  0158  30B8               	movlw	184
  4573  0159  2A7B               	goto	L3
  4574  015A                     i1l2734:	
  4575                           ;master_eight.c: 393: case '2':
  4576                           
  4577                           ;master_eight.c: 392: break;
  4578                           
  4579                           ;master_eight.c: 391: T1CONbits.TMR1ON = 1;
  4580                           
  4581                           
  4582                           ;master_eight.c: 394: TMR1H=0x8F;
  4583  015A  308F               	movlw	143
  4584  015B  2A75               	goto	L47
  4585  015C                     i1l2738:	
  4586                           ;master_eight.c: 398: case '3':
  4587                           
  4588                           ;master_eight.c: 397: break;
  4589                           
  4590                           ;master_eight.c: 396: T1CONbits.TMR1ON = 1;
  4591                           
  4592                           ;master_eight.c: 395: TMR1L=0x80;
  4593                           
  4594                           
  4595                           ;master_eight.c: 399: TMR1H=0x90;
  4596  015C  3090               	movlw	144
  4597  015D  0097               	movwf	23	;volatile
  4598                           
  4599                           ;master_eight.c: 400: TMR1L=0x48;
  4600  015E  3048               	movlw	72
  4601  015F  2A7B               	goto	L3
  4602  0160                     i1l2742:	
  4603                           ;master_eight.c: 403: case '4':
  4604                           
  4605                           ;master_eight.c: 402: break;
  4606                           
  4607                           ;master_eight.c: 401: T1CONbits.TMR1ON = 1;
  4608                           
  4609                           
  4610                           ;master_eight.c: 404: TMR1H=0x91;
  4611  0160  3091               	movlw	145
  4612  0161  2A79               	goto	L17
  4613  0162                     i1l2746:	
  4614                           ;master_eight.c: 408: case '5':
  4615                           
  4616                           ;master_eight.c: 407: break;
  4617                           
  4618                           ;master_eight.c: 406: T1CONbits.TMR1ON = 1;
  4619                           
  4620                           ;master_eight.c: 405: TMR1L=0x10;
  4621                           
  4622                           
  4623                           ;master_eight.c: 409: TMR1H=0x91;
  4624  0162  3091               	movlw	145
  4625  0163  0097               	movwf	23	;volatile
  4626                           
  4627                           ;master_eight.c: 410: TMR1L=0xD8;
  4628  0164  30D8               	movlw	216
  4629  0165  2A7B               	goto	L3
  4630  0166                     i1l2750:	
  4631                           ;master_eight.c: 413: case '6':
  4632                           
  4633                           ;master_eight.c: 412: break;
  4634                           
  4635                           ;master_eight.c: 411: T1CONbits.TMR1ON = 1;
  4636                           
  4637                           
  4638                           ;master_eight.c: 414: TMR1H=0x92;
  4639  0166  3092               	movlw	146
  4640  0167  2A15               	goto	L33
  4641  0168                     i1l2754:	
  4642                           ;master_eight.c: 418: case '7':
  4643                           
  4644                           ;master_eight.c: 417: break;
  4645                           
  4646                           ;master_eight.c: 416: T1CONbits.TMR1ON = 1;
  4647                           
  4648                           ;master_eight.c: 415: TMR1L=0xA0;
  4649                           
  4650                           
  4651                           ;master_eight.c: 419: TMR1H=0x93;
  4652  0168  3093               	movlw	147
  4653  0169  0097               	movwf	23	;volatile
  4654                           
  4655                           ;master_eight.c: 420: TMR1L=0x68;
  4656  016A  3068               	movlw	104
  4657  016B  2A7B               	goto	L3
  4658  016C                     i1l2758:	
  4659                           ;master_eight.c: 423: case '8':
  4660                           
  4661                           ;master_eight.c: 422: break;
  4662                           
  4663                           ;master_eight.c: 421: T1CONbits.TMR1ON = 1;
  4664                           
  4665                           
  4666                           ;master_eight.c: 424: TMR1H=0x94;
  4667  016C  3094               	movlw	148
  4668  016D  2A19               	goto	L34
  4669  016E                     i1l2762:	
  4670                           ;master_eight.c: 428: case '9':
  4671                           
  4672                           ;master_eight.c: 427: break;
  4673                           
  4674                           ;master_eight.c: 426: T1CONbits.TMR1ON = 1;
  4675                           
  4676                           ;master_eight.c: 425: TMR1L=0x30;
  4677                           
  4678                           
  4679                           ;master_eight.c: 429: TMR1H=0x94;
  4680  016E  3094               	movlw	148
  4681  016F  0097               	movwf	23	;volatile
  4682                           
  4683                           ;master_eight.c: 430: TMR1L=0xF8;
  4684  0170  30F8               	movlw	248
  4685  0171  2A7B               	goto	L3
  4686  0172                     i1l2768:	
  4687                           ;master_eight.c: 436: }
  4688                           
  4689                           ;master_eight.c: 435: break;
  4690                           
  4691                           ;master_eight.c: 434: default:
  4692                           
  4693                           ;master_eight.c: 432: break;
  4694                           
  4695                           ;master_eight.c: 431: T1CONbits.TMR1ON = 1;
  4696                           
  4697  0172  0870               	movf	_levelofDimmer_LSB,w
  4698                           
  4699                           ; Switch size 1, requested type "space"
  4700                           ; Number of cases is 10, Range of values is 48 to 57
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; direct_byte           29     9 (fixed)
  4704                           ; simple_byte           31    16 (average)
  4705                           ; jumptable            263     9 (fixed)
  4706                           ;	Chosen strategy is direct_byte
  4707  0173  3ED0               	addlw	-48
  4708  0174  1C03               	skipc
  4709  0175  2A9B               	goto	i1l390
  4710  0176  0084               	movwf	4
  4711  0177  300A               	movlw	10
  4712  0178  0204               	subwf	4,w
  4713  0179  1803               	skipnc
  4714  017A  2A9B               	goto	i1l390
  4715  017B  3188               	movlp	high i1S4224
  4716  017C  3504               	lslf	4,w
  4717  017D  3E28               	addlw	low i1S4224
  4718  017E  0082               	movwf	2
  4719                           
  4720                           ;master_eight.c: 437: break;
  4721  017F  2A9B               	goto	i1l390
  4722  0180                     i1l2770:	
  4723                           ;master_eight.c: 441: {
  4724                           ;master_eight.c: 442: case '0':
  4725                           
  4726                           ;master_eight.c: 440: switch(levelofDimmer_LSB)
  4727                           
  4728                           ;master_eight.c: 438: case '3':
  4729                           
  4730                           
  4731                           ;master_eight.c: 443: TMR1H=0x95;
  4732  0180  3095               	movlw	149
  4733  0181  2A1D               	goto	L35
  4734  0182                     i1l2774:	
  4735                           ;master_eight.c: 447: case '1':
  4736                           
  4737                           ;master_eight.c: 446: break;
  4738                           
  4739                           ;master_eight.c: 445: T1CONbits.TMR1ON = 1;
  4740                           
  4741                           ;master_eight.c: 444: TMR1L=0xC0;
  4742                           
  4743                           
  4744                           ;master_eight.c: 448: TMR1H=0x97;
  4745  0182  3097               	movlw	151
  4746  0183  2A21               	goto	L36
  4747  0184                     i1l2778:	
  4748                           ;master_eight.c: 452: case '2':
  4749                           
  4750                           ;master_eight.c: 451: break;
  4751                           
  4752                           ;master_eight.c: 450: T1CONbits.TMR1ON = 1;
  4753                           
  4754                           ;master_eight.c: 449: TMR1L=0x50;
  4755                           
  4756                           
  4757                           ;master_eight.c: 453: TMR1H=0x98;
  4758  0184  3098               	movlw	152
  4759  0185  2A33               	goto	L37
  4760  0186                     i1l2782:	
  4761                           ;master_eight.c: 457: case '3':
  4762                           
  4763                           ;master_eight.c: 456: break;
  4764                           
  4765                           ;master_eight.c: 455: T1CONbits.TMR1ON = 1;
  4766                           
  4767                           ;master_eight.c: 454: TMR1L=0xE0;
  4768                           
  4769                           
  4770                           ;master_eight.c: 458: TMR1H=0x9A;
  4771  0186  309A               	movlw	154
  4772  0187  2A3B               	goto	L38
  4773  0188                     i1l2786:	
  4774                           ;master_eight.c: 462: case '4':
  4775                           
  4776                           ;master_eight.c: 461: break;
  4777                           
  4778                           ;master_eight.c: 460: T1CONbits.TMR1ON = 1;
  4779                           
  4780                           ;master_eight.c: 459: TMR1L=0x70;
  4781                           
  4782                           
  4783                           ;master_eight.c: 463: TMR1H=0x9C;
  4784  0188  309C               	movlw	156
  4785  0189  2A43               	goto	L39
  4786  018A                     i1l2792:	
  4787                           ;master_eight.c: 467: case '5':
  4788                           
  4789                           ;master_eight.c: 466: break;
  4790                           
  4791                           ;master_eight.c: 465: T1CONbits.TMR1ON = 1;
  4792                           
  4793                           ;master_eight.c: 464: TMR1L=0x00;
  4794                           
  4795                           
  4796                           ;master_eight.c: 468: TMR1H=0x9D;
  4797  018A  309D               	movlw	157
  4798  018B  2A47               	goto	L40
  4799  018C                     i1l2796:	
  4800                           ;master_eight.c: 472: case '6':
  4801                           
  4802                           ;master_eight.c: 471: break;
  4803                           
  4804                           ;master_eight.c: 470: T1CONbits.TMR1ON = 1;
  4805                           
  4806                           ;master_eight.c: 469: TMR1L=0x90;
  4807                           
  4808                           
  4809                           ;master_eight.c: 473: TMR1H=0x9F;
  4810  018C  309F               	movlw	159
  4811  018D  2A4B               	goto	L41
  4812  018E                     i1l2800:	
  4813                           ;master_eight.c: 477: case '7':
  4814                           
  4815                           ;master_eight.c: 476: break;
  4816                           
  4817                           ;master_eight.c: 475: T1CONbits.TMR1ON = 1;
  4818                           
  4819                           ;master_eight.c: 474: TMR1L=0x20;
  4820                           
  4821                           
  4822                           ;master_eight.c: 478: TMR1H=0xA0;
  4823  018E  30A0               	movlw	160
  4824  018F  2A4F               	goto	L42
  4825  0190                     i1l2804:	
  4826                           ;master_eight.c: 482: case '8':
  4827                           
  4828                           ;master_eight.c: 481: break;
  4829                           
  4830                           ;master_eight.c: 480: T1CONbits.TMR1ON = 1;
  4831                           
  4832                           ;master_eight.c: 479: TMR1L=0xB0;
  4833                           
  4834                           
  4835                           ;master_eight.c: 483: TMR1H=0xA2;
  4836  0190  30A2               	movlw	162
  4837  0191  2A57               	goto	L43
  4838  0192                     i1l2808:	
  4839                           ;master_eight.c: 487: case '9':
  4840                           
  4841                           ;master_eight.c: 486: break;
  4842                           
  4843                           ;master_eight.c: 485: T1CONbits.TMR1ON = 1;
  4844                           
  4845                           ;master_eight.c: 484: TMR1L=0x40;
  4846                           
  4847                           
  4848                           ;master_eight.c: 488: TMR1H=0xA3;
  4849  0192  30A3               	movlw	163
  4850  0193  2A69               	goto	L44
  4851  0194                     i1l2814:	
  4852                           ;master_eight.c: 494: }
  4853                           
  4854                           ;master_eight.c: 493: break;
  4855                           
  4856                           ;master_eight.c: 492: default:
  4857                           
  4858                           ;master_eight.c: 491: break;
  4859                           
  4860                           ;master_eight.c: 490: T1CONbits.TMR1ON = 1;
  4861                           
  4862                           ;master_eight.c: 489: TMR1L=0xD0;
  4863                           
  4864  0194  0870               	movf	_levelofDimmer_LSB,w
  4865                           
  4866                           ; Switch size 1, requested type "space"
  4867                           ; Number of cases is 10, Range of values is 48 to 57
  4868                           ; switch strategies available:
  4869                           ; Name         Instructions Cycles
  4870                           ; direct_byte           29     9 (fixed)
  4871                           ; simple_byte           31    16 (average)
  4872                           ; jumptable            263     9 (fixed)
  4873                           ;	Chosen strategy is direct_byte
  4874  0195  3ED0               	addlw	-48
  4875  0196  1C03               	skipc
  4876  0197  2A9B               	goto	i1l390
  4877  0198  0084               	movwf	4
  4878  0199  300A               	movlw	10
  4879  019A  0204               	subwf	4,w
  4880  019B  1803               	skipnc
  4881  019C  2A9B               	goto	i1l390
  4882  019D  3188               	movlp	high i1S4226
  4883  019E  3504               	lslf	4,w
  4884  019F  3E3C               	addlw	low i1S4226
  4885  01A0  0082               	movwf	2
  4886                           
  4887                           ;master_eight.c: 495: break;
  4888  01A1  2A9B               	goto	i1l390
  4889  01A2                     i1l2816:	
  4890                           ;master_eight.c: 499: {
  4891                           ;master_eight.c: 500: case '0':
  4892                           
  4893                           ;master_eight.c: 498: switch(levelofDimmer_LSB)
  4894                           
  4895                           ;master_eight.c: 496: case '4':
  4896                           
  4897                           
  4898                           ;master_eight.c: 501: TMR1H=0xA5;
  4899  01A2  30A5               	movlw	165
  4900  01A3  2A6D               	goto	L45
  4901  01A4                     i1l2820:	
  4902                           ;master_eight.c: 505: case '1':
  4903                           
  4904                           ;master_eight.c: 504: break;
  4905                           
  4906                           ;master_eight.c: 503: T1CONbits.TMR1ON = 1;
  4907                           
  4908                           ;master_eight.c: 502: TMR1L=0x60;
  4909                           
  4910                           
  4911                           ;master_eight.c: 506: TMR1H=0xA6;
  4912  01A4  30A6               	movlw	166
  4913  01A5  2A71               	goto	L46
  4914  01A6                     i1l2824:	
  4915                           ;master_eight.c: 510: case '2':
  4916                           
  4917                           ;master_eight.c: 509: break;
  4918                           
  4919                           ;master_eight.c: 508: T1CONbits.TMR1ON = 1;
  4920                           
  4921                           ;master_eight.c: 507: TMR1L=0xF0;
  4922                           
  4923                           
  4924                           ;master_eight.c: 511: TMR1H=0xA8;
  4925  01A6  30A8               	movlw	168
  4926  01A7  2A75               	goto	L47
  4927  01A8                     i1l2828:	
  4928                           ;master_eight.c: 515: case '3':
  4929                           
  4930                           ;master_eight.c: 514: break;
  4931                           
  4932                           ;master_eight.c: 513: T1CONbits.TMR1ON = 1;
  4933                           
  4934                           ;master_eight.c: 512: TMR1L=0x80;
  4935                           
  4936                           
  4937                           ;master_eight.c: 516: TMR1H=0xAA;
  4938  01A8  30AA               	movlw	170
  4939  01A9  2A79               	goto	L17
  4940  01AA                     i1l2832:	
  4941                           ;master_eight.c: 520: case '4':
  4942                           
  4943                           ;master_eight.c: 519: break;
  4944                           
  4945                           ;master_eight.c: 518: T1CONbits.TMR1ON = 1;
  4946                           
  4947                           ;master_eight.c: 517: TMR1L=0x10;
  4948                           
  4949                           
  4950                           ;master_eight.c: 521: TMR1H=0xAB;
  4951  01AA  30AB               	movlw	171
  4952  01AB  2A15               	goto	L33
  4953  01AC                     i1l2836:	
  4954                           ;master_eight.c: 525: case '5':
  4955                           
  4956                           ;master_eight.c: 524: break;
  4957                           
  4958                           ;master_eight.c: 523: T1CONbits.TMR1ON = 1;
  4959                           
  4960                           ;master_eight.c: 522: TMR1L=0xA0;
  4961                           
  4962                           
  4963                           ;master_eight.c: 526: TMR1H=0xAD;
  4964  01AC  30AD               	movlw	173
  4965  01AD  2A19               	goto	L34
  4966  01AE                     i1l2840:	
  4967                           ;master_eight.c: 530: case '6':
  4968                           
  4969                           ;master_eight.c: 529: break;
  4970                           
  4971                           ;master_eight.c: 528: T1CONbits.TMR1ON = 1;
  4972                           
  4973                           ;master_eight.c: 527: TMR1L=0x30;
  4974                           
  4975                           
  4976                           ;master_eight.c: 531: TMR1H=0xAE;
  4977  01AE  30AE               	movlw	174
  4978  01AF  2A1D               	goto	L35
  4979  01B0                     i1l2844:	
  4980                           ;master_eight.c: 535: case '7':
  4981                           
  4982                           ;master_eight.c: 534: break;
  4983                           
  4984                           ;master_eight.c: 533: T1CONbits.TMR1ON = 1;
  4985                           
  4986                           ;master_eight.c: 532: TMR1L=0xC0;
  4987                           
  4988                           
  4989                           ;master_eight.c: 536: TMR1H=0xB0;
  4990  01B0  30B0               	movlw	176
  4991  01B1  2A21               	goto	L36
  4992  01B2                     i1l2848:	
  4993                           ;master_eight.c: 540: case '8':
  4994                           
  4995                           ;master_eight.c: 539: break;
  4996                           
  4997                           ;master_eight.c: 538: T1CONbits.TMR1ON = 1;
  4998                           
  4999                           ;master_eight.c: 537: TMR1L=0x50;
  5000                           
  5001                           
  5002                           ;master_eight.c: 541: TMR1H=0xB1;
  5003  01B2  30B1               	movlw	177
  5004  01B3  2A33               	goto	L37
  5005  01B4                     i1l2852:	
  5006                           ;master_eight.c: 545: case '9':
  5007                           
  5008                           ;master_eight.c: 544: break;
  5009                           
  5010                           ;master_eight.c: 543: T1CONbits.TMR1ON = 1;
  5011                           
  5012                           ;master_eight.c: 542: TMR1L=0xE0;
  5013                           
  5014                           
  5015                           ;master_eight.c: 546: TMR1H=0xB3;
  5016  01B4  30B3               	movlw	179
  5017  01B5  2A3B               	goto	L38
  5018  01B6                     i1l2858:	
  5019                           ;master_eight.c: 552: }
  5020                           
  5021                           ;master_eight.c: 551: break;
  5022                           
  5023                           ;master_eight.c: 550: default:
  5024                           
  5025                           ;master_eight.c: 549: break;
  5026                           
  5027                           ;master_eight.c: 548: T1CONbits.TMR1ON = 1;
  5028                           
  5029                           ;master_eight.c: 547: TMR1L=0x70;
  5030                           
  5031  01B6  0870               	movf	_levelofDimmer_LSB,w
  5032                           
  5033                           ; Switch size 1, requested type "space"
  5034                           ; Number of cases is 10, Range of values is 48 to 57
  5035                           ; switch strategies available:
  5036                           ; Name         Instructions Cycles
  5037                           ; direct_byte           29     9 (fixed)
  5038                           ; simple_byte           31    16 (average)
  5039                           ; jumptable            263     9 (fixed)
  5040                           ;	Chosen strategy is direct_byte
  5041  01B7  3ED0               	addlw	-48
  5042  01B8  1C03               	skipc
  5043  01B9  2A9B               	goto	i1l390
  5044  01BA  0084               	movwf	4
  5045  01BB  300A               	movlw	10
  5046  01BC  0204               	subwf	4,w
  5047  01BD  1803               	skipnc
  5048  01BE  2A9B               	goto	i1l390
  5049  01BF  3188               	movlp	high i1S4228
  5050  01C0  3504               	lslf	4,w
  5051  01C1  3E50               	addlw	low i1S4228
  5052  01C2  0082               	movwf	2
  5053                           
  5054                           ;master_eight.c: 553: break;
  5055  01C3  2A9B               	goto	i1l390
  5056  01C4                     i1l2860:	
  5057                           ;master_eight.c: 557: {
  5058                           ;master_eight.c: 558: case '0':
  5059                           
  5060                           ;master_eight.c: 556: switch(levelofDimmer_LSB)
  5061                           
  5062                           ;master_eight.c: 554: case '5':
  5063                           
  5064                           
  5065                           ;master_eight.c: 559: TMR1H=0xB5;
  5066  01C4  30B5               	movlw	181
  5067  01C5  2A43               	goto	L39
  5068  01C6                     i1l2866:	
  5069                           ;master_eight.c: 563: case '1':
  5070                           
  5071                           ;master_eight.c: 562: break;
  5072                           
  5073                           ;master_eight.c: 561: T1CONbits.TMR1ON = 1;
  5074                           
  5075                           ;master_eight.c: 560: TMR1L=0x00;
  5076                           
  5077                           
  5078                           ;master_eight.c: 564: TMR1H=0xB6;
  5079  01C6  30B6               	movlw	182
  5080  01C7  2A47               	goto	L40
  5081  01C8                     i1l2870:	
  5082                           ;master_eight.c: 568: case '2':
  5083                           
  5084                           ;master_eight.c: 567: break;
  5085                           
  5086                           ;master_eight.c: 566: T1CONbits.TMR1ON = 1;
  5087                           
  5088                           ;master_eight.c: 565: TMR1L=0x90;
  5089                           
  5090                           
  5091                           ;master_eight.c: 569: TMR1H=0xB8;
  5092  01C8  30B8               	movlw	184
  5093  01C9  2A4B               	goto	L41
  5094  01CA                     i1l2874:	
  5095                           ;master_eight.c: 573: case '3':
  5096                           
  5097                           ;master_eight.c: 572: break;
  5098                           
  5099                           ;master_eight.c: 571: T1CONbits.TMR1ON = 1;
  5100                           
  5101                           ;master_eight.c: 570: TMR1L=0x20;
  5102                           
  5103                           
  5104                           ;master_eight.c: 574: TMR1H=0xB9;
  5105  01CA  30B9               	movlw	185
  5106  01CB  2A4F               	goto	L42
  5107  01CC                     i1l2878:	
  5108                           ;master_eight.c: 578: case '4':
  5109                           
  5110                           ;master_eight.c: 577: break;
  5111                           
  5112                           ;master_eight.c: 576: T1CONbits.TMR1ON = 1;
  5113                           
  5114                           ;master_eight.c: 575: TMR1L=0xB0;
  5115                           
  5116                           
  5117                           ;master_eight.c: 579: TMR1H=0xBB;
  5118  01CC  30BB               	movlw	187
  5119  01CD  2A57               	goto	L43
  5120  01CE                     i1l2882:	
  5121                           ;master_eight.c: 583: case '5':
  5122                           
  5123                           ;master_eight.c: 582: break;
  5124                           
  5125                           ;master_eight.c: 581: T1CONbits.TMR1ON = 1;
  5126                           
  5127                           ;master_eight.c: 580: TMR1L=0x40;
  5128                           
  5129                           
  5130                           ;master_eight.c: 584: TMR1H=0xBC;
  5131  01CE  30BC               	movlw	188
  5132  01CF  2A69               	goto	L44
  5133  01D0                     i1l2886:	
  5134                           ;master_eight.c: 588: case '6':
  5135                           
  5136                           ;master_eight.c: 587: break;
  5137                           
  5138                           ;master_eight.c: 586: T1CONbits.TMR1ON = 1;
  5139                           
  5140                           ;master_eight.c: 585: TMR1L=0xD0;
  5141                           
  5142                           
  5143                           ;master_eight.c: 589: TMR1H=0xBE;
  5144  01D0  30BE               	movlw	190
  5145  01D1  2A6D               	goto	L45
  5146  01D2                     i1l2890:	
  5147                           ;master_eight.c: 593: case '7':
  5148                           
  5149                           ;master_eight.c: 592: break;
  5150                           
  5151                           ;master_eight.c: 591: T1CONbits.TMR1ON = 1;
  5152                           
  5153                           ;master_eight.c: 590: TMR1L=0x60;
  5154                           
  5155                           
  5156                           ;master_eight.c: 594: TMR1H=0xBF;
  5157  01D2  30BF               	movlw	191
  5158  01D3  2A71               	goto	L46
  5159  01D4                     i1l2894:	
  5160                           ;master_eight.c: 598: case '8':
  5161                           
  5162                           ;master_eight.c: 597: break;
  5163                           
  5164                           ;master_eight.c: 596: T1CONbits.TMR1ON = 1;
  5165                           
  5166                           ;master_eight.c: 595: TMR1L=0xF0;
  5167                           
  5168                           
  5169                           ;master_eight.c: 599: TMR1H=0xC1;
  5170  01D4  30C1               	movlw	193
  5171  01D5  2A75               	goto	L47
  5172  01D6                     i1l2898:	
  5173                           ;master_eight.c: 603: case '9':
  5174                           
  5175                           ;master_eight.c: 602: break;
  5176                           
  5177                           ;master_eight.c: 601: T1CONbits.TMR1ON = 1;
  5178                           
  5179                           ;master_eight.c: 600: TMR1L=0x80;
  5180                           
  5181                           
  5182                           ;master_eight.c: 604: TMR1H=0xC3;
  5183  01D6  30C3               	movlw	195
  5184  01D7  2A79               	goto	L17
  5185  01D8                     i1l2904:	
  5186                           ;master_eight.c: 611: }
  5187                           
  5188                           ;master_eight.c: 610: break;
  5189                           
  5190                           ;master_eight.c: 609: default:
  5191                           
  5192                           ;master_eight.c: 607: break;
  5193                           
  5194                           ;master_eight.c: 606: T1CONbits.TMR1ON = 1;
  5195                           
  5196                           ;master_eight.c: 605: TMR1L=0x10;
  5197                           
  5198  01D8  0870               	movf	_levelofDimmer_LSB,w
  5199                           
  5200                           ; Switch size 1, requested type "space"
  5201                           ; Number of cases is 10, Range of values is 48 to 57
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; direct_byte           29     9 (fixed)
  5205                           ; simple_byte           31    16 (average)
  5206                           ; jumptable            263     9 (fixed)
  5207                           ;	Chosen strategy is direct_byte
  5208  01D9  3ED0               	addlw	-48
  5209  01DA  1C03               	skipc
  5210  01DB  2A9B               	goto	i1l390
  5211  01DC  0084               	movwf	4
  5212  01DD  300A               	movlw	10
  5213  01DE  0204               	subwf	4,w
  5214  01DF  1803               	skipnc
  5215  01E0  2A9B               	goto	i1l390
  5216  01E1  3188               	movlp	high i1S4230
  5217  01E2  3504               	lslf	4,w
  5218  01E3  3E64               	addlw	low i1S4230
  5219  01E4  0082               	movwf	2
  5220                           
  5221                           ;master_eight.c: 612: break;
  5222  01E5  2A9B               	goto	i1l390
  5223  01E6                     i1l2906:	
  5224                           ;master_eight.c: 616: {
  5225                           ;master_eight.c: 617: case '0':
  5226                           
  5227                           ;master_eight.c: 615: switch(levelofDimmer_LSB)
  5228                           
  5229                           ;master_eight.c: 613: case '6':
  5230                           
  5231                           
  5232                           ;master_eight.c: 618: TMR1H=0xC4;
  5233  01E6  30C4               	movlw	196
  5234  01E7  2A15               	goto	L33
  5235  01E8                     i1l2910:	
  5236                           ;master_eight.c: 622: case '1':
  5237                           
  5238                           ;master_eight.c: 621: break;
  5239                           
  5240                           ;master_eight.c: 620: T1CONbits.TMR1ON = 1;
  5241                           
  5242                           ;master_eight.c: 619: TMR1L=0xA0;
  5243                           
  5244                           
  5245                           ;master_eight.c: 623: TMR1H=0xC6;
  5246  01E8  30C6               	movlw	198
  5247  01E9  2A19               	goto	L34
  5248  01EA                     i1l2914:	
  5249                           ;master_eight.c: 627: case '2':
  5250                           
  5251                           ;master_eight.c: 626: break;
  5252                           
  5253                           ;master_eight.c: 625: T1CONbits.TMR1ON = 1;
  5254                           
  5255                           ;master_eight.c: 624: TMR1L=0x30;
  5256                           
  5257                           
  5258                           ;master_eight.c: 628: TMR1H=0xC7;
  5259  01EA  30C7               	movlw	199
  5260  01EB  2A1D               	goto	L35
  5261  01EC                     i1l2918:	
  5262                           ;master_eight.c: 632: case '3':
  5263                           
  5264                           ;master_eight.c: 631: break;
  5265                           
  5266                           ;master_eight.c: 630: T1CONbits.TMR1ON = 1;
  5267                           
  5268                           ;master_eight.c: 629: TMR1L=0xC0;
  5269                           
  5270                           
  5271                           ;master_eight.c: 633: TMR1H=0xC9;
  5272  01EC  30C9               	movlw	201
  5273  01ED  2A21               	goto	L36
  5274  01EE                     i1l2922:	
  5275                           ;master_eight.c: 637: case '4':
  5276                           
  5277                           ;master_eight.c: 636: break;
  5278                           
  5279                           ;master_eight.c: 635: T1CONbits.TMR1ON = 1;
  5280                           
  5281                           ;master_eight.c: 634: TMR1L=0x50;
  5282                           
  5283                           
  5284                           ;master_eight.c: 638: TMR1H=0xCA;
  5285  01EE  30CA               	movlw	202
  5286  01EF  2A33               	goto	L37
  5287  01F0                     i1l2926:	
  5288                           ;master_eight.c: 642: case '5':
  5289                           
  5290                           ;master_eight.c: 641: break;
  5291                           
  5292                           ;master_eight.c: 640: T1CONbits.TMR1ON = 1;
  5293                           
  5294                           ;master_eight.c: 639: TMR1L=0xE0;
  5295                           
  5296                           
  5297                           ;master_eight.c: 643: TMR1H=0xCC;
  5298  01F0  30CC               	movlw	204
  5299  01F1  2A3B               	goto	L38
  5300  01F2                     i1l2930:	
  5301                           ;master_eight.c: 647: case '6':
  5302                           
  5303                           ;master_eight.c: 646: break;
  5304                           
  5305                           ;master_eight.c: 645: T1CONbits.TMR1ON = 1;
  5306                           
  5307                           ;master_eight.c: 644: TMR1L=0x70;
  5308                           
  5309                           
  5310                           ;master_eight.c: 648: TMR1H=0xCE;
  5311  01F2  30CE               	movlw	206
  5312  01F3  2A43               	goto	L39
  5313  01F4                     i1l2936:	
  5314                           ;master_eight.c: 652: case '7':
  5315                           
  5316                           ;master_eight.c: 651: break;
  5317                           
  5318                           ;master_eight.c: 650: T1CONbits.TMR1ON = 1;
  5319                           
  5320                           ;master_eight.c: 649: TMR1L=0x00;
  5321                           
  5322                           
  5323                           ;master_eight.c: 653: TMR1H=0xCF;
  5324  01F4  30CF               	movlw	207
  5325  01F5  2A47               	goto	L40
  5326  01F6                     i1l2940:	
  5327                           ;master_eight.c: 657: case '8':
  5328                           
  5329                           ;master_eight.c: 656: break;
  5330                           
  5331                           ;master_eight.c: 655: T1CONbits.TMR1ON = 1;
  5332                           
  5333                           ;master_eight.c: 654: TMR1L=0x90;
  5334                           
  5335                           
  5336                           ;master_eight.c: 658: TMR1H=0xD1;
  5337  01F6  30D1               	movlw	209
  5338  01F7  2A4B               	goto	L41
  5339  01F8                     i1l2944:	
  5340                           ;master_eight.c: 662: case '9':
  5341                           
  5342                           ;master_eight.c: 661: break;
  5343                           
  5344                           ;master_eight.c: 660: T1CONbits.TMR1ON = 1;
  5345                           
  5346                           ;master_eight.c: 659: TMR1L=0x20;
  5347                           
  5348                           
  5349                           ;master_eight.c: 663: TMR1H=0xD2;
  5350  01F8  30D2               	movlw	210
  5351  01F9  2A4F               	goto	L42
  5352  01FA                     i1l2950:	
  5353                           ;master_eight.c: 669: }
  5354                           
  5355                           ;master_eight.c: 668: break;
  5356                           
  5357                           ;master_eight.c: 667: default:
  5358                           
  5359                           ;master_eight.c: 666: break;
  5360                           
  5361                           ;master_eight.c: 665: T1CONbits.TMR1ON = 1;
  5362                           
  5363                           ;master_eight.c: 664: TMR1L=0xB0;
  5364                           
  5365  01FA  0870               	movf	_levelofDimmer_LSB,w
  5366                           
  5367                           ; Switch size 1, requested type "space"
  5368                           ; Number of cases is 10, Range of values is 48 to 57
  5369                           ; switch strategies available:
  5370                           ; Name         Instructions Cycles
  5371                           ; direct_byte           29     9 (fixed)
  5372                           ; simple_byte           31    16 (average)
  5373                           ; jumptable            263     9 (fixed)
  5374                           ;	Chosen strategy is direct_byte
  5375  01FB  3ED0               	addlw	-48
  5376  01FC  1C03               	skipc
  5377  01FD  2A9B               	goto	i1l390
  5378  01FE  0084               	movwf	4
  5379  01FF  300A               	movlw	10
  5380  0200  0204               	subwf	4,w
  5381  0201  1803               	skipnc
  5382  0202  2A9B               	goto	i1l390
  5383  0203  3188               	movlp	high i1S4232
  5384  0204  3504               	lslf	4,w
  5385  0205  3E78               	addlw	low i1S4232
  5386  0206  0082               	movwf	2
  5387                           
  5388                           ;master_eight.c: 670: break;
  5389  0207  2A9B               	goto	i1l390
  5390  0208                     i1l2952:	
  5391                           ;master_eight.c: 674: {
  5392                           ;master_eight.c: 675: case '0':
  5393                           
  5394                           ;master_eight.c: 673: switch(levelofDimmer_LSB)
  5395                           
  5396                           ;master_eight.c: 671: case '7':
  5397                           
  5398                           
  5399                           ;master_eight.c: 676: TMR1H=0xD4;
  5400  0208  30D4               	movlw	212
  5401  0209  2A57               	goto	L43
  5402  020A                     i1l2956:	
  5403                           ;master_eight.c: 680: case '1':
  5404                           
  5405                           ;master_eight.c: 679: break;
  5406                           
  5407                           ;master_eight.c: 678: T1CONbits.TMR1ON = 1;
  5408                           
  5409                           ;master_eight.c: 677: TMR1L=0x40;
  5410                           
  5411                           
  5412                           ;master_eight.c: 681: TMR1H=0xD5;
  5413  020A  30D5               	movlw	213
  5414  020B  2A69               	goto	L44
  5415  020C                     i1l2960:	
  5416                           ;master_eight.c: 685: case '2':
  5417                           
  5418                           ;master_eight.c: 684: break;
  5419                           
  5420                           ;master_eight.c: 683: T1CONbits.TMR1ON = 1;
  5421                           
  5422                           ;master_eight.c: 682: TMR1L=0xD0;
  5423                           
  5424                           
  5425                           ;master_eight.c: 686: TMR1H=0xD7;
  5426  020C  30D7               	movlw	215
  5427  020D  2A6D               	goto	L45
  5428  020E                     i1l2964:	
  5429                           ;master_eight.c: 690: case '3':
  5430                           
  5431                           ;master_eight.c: 689: break;
  5432                           
  5433                           ;master_eight.c: 688: T1CONbits.TMR1ON = 1;
  5434                           
  5435                           ;master_eight.c: 687: TMR1L=0x60;
  5436                           
  5437                           
  5438                           ;master_eight.c: 691: TMR1H=0xD8;
  5439  020E  30D8               	movlw	216
  5440  020F  2A71               	goto	L46
  5441  0210                     i1l2968:	
  5442                           ;master_eight.c: 695: case '4':
  5443                           
  5444                           ;master_eight.c: 694: break;
  5445                           
  5446                           ;master_eight.c: 693: T1CONbits.TMR1ON = 1;
  5447                           
  5448                           ;master_eight.c: 692: TMR1L=0xF0;
  5449                           
  5450                           
  5451                           ;master_eight.c: 696: TMR1H=0xDA;
  5452  0210  30DA               	movlw	218
  5453  0211  2A75               	goto	L47
  5454  0212                     i1l2972:	
  5455                           ;master_eight.c: 700: case '5':
  5456                           
  5457                           ;master_eight.c: 699: break;
  5458                           
  5459                           ;master_eight.c: 698: T1CONbits.TMR1ON = 1;
  5460                           
  5461                           ;master_eight.c: 697: TMR1L=0x80;
  5462                           
  5463                           
  5464                           ;master_eight.c: 701: TMR1H=0xDC;
  5465  0212  30DC               	movlw	220
  5466  0213  2A79               	goto	L17
  5467  0214                     i1l2976:	
  5468                           ;master_eight.c: 705: case '6':
  5469                           
  5470                           ;master_eight.c: 704: break;
  5471                           
  5472                           ;master_eight.c: 703: T1CONbits.TMR1ON = 1;
  5473                           
  5474                           ;master_eight.c: 702: TMR1L=0x10;
  5475                           
  5476                           
  5477                           ;master_eight.c: 706: TMR1H=0xDD;
  5478  0214  30DD               	movlw	221
  5479  0215                     L33:	
  5480  0215  0097               	movwf	23	;volatile
  5481                           
  5482                           ;master_eight.c: 707: TMR1L=0xA0;
  5483  0216  30A0               	movlw	160
  5484  0217  2A7B               	goto	L3
  5485  0218                     i1l2980:	
  5486                           ;master_eight.c: 710: case '7':
  5487                           
  5488                           ;master_eight.c: 709: break;
  5489                           
  5490                           ;master_eight.c: 708: T1CONbits.TMR1ON = 1;
  5491                           
  5492                           
  5493                           ;master_eight.c: 711: TMR1H=0xDF;
  5494  0218  30DF               	movlw	223
  5495  0219                     L34:	
  5496  0219  0097               	movwf	23	;volatile
  5497                           
  5498                           ;master_eight.c: 712: TMR1L=0x30;
  5499  021A  3030               	movlw	48
  5500  021B  2A7B               	goto	L3
  5501  021C                     i1l2984:	
  5502                           ;master_eight.c: 715: case '8':
  5503                           
  5504                           ;master_eight.c: 714: break;
  5505                           
  5506                           ;master_eight.c: 713: T1CONbits.TMR1ON = 1;
  5507                           
  5508                           
  5509                           ;master_eight.c: 716: TMR1H=0xE0;
  5510  021C  30E0               	movlw	224
  5511  021D                     L35:	
  5512  021D  0097               	movwf	23	;volatile
  5513                           
  5514                           ;master_eight.c: 717: TMR1L=0xC0;
  5515  021E  30C0               	movlw	192
  5516  021F  2A7B               	goto	L3
  5517  0220                     i1l2988:	
  5518                           ;master_eight.c: 720: case '9':
  5519                           
  5520                           ;master_eight.c: 719: break;
  5521                           
  5522                           ;master_eight.c: 718: T1CONbits.TMR1ON = 1;
  5523                           
  5524                           
  5525                           ;master_eight.c: 721: TMR1H=0xE2;
  5526  0220  30E2               	movlw	226
  5527  0221                     L36:	
  5528  0221  0097               	movwf	23	;volatile
  5529                           
  5530                           ;master_eight.c: 722: TMR1L=0x50;
  5531  0222  3050               	movlw	80
  5532  0223  2A7B               	goto	L3
  5533  0224                     i1l2994:	
  5534                           ;master_eight.c: 727: }
  5535                           
  5536                           ;master_eight.c: 726: break;
  5537                           
  5538                           ;master_eight.c: 725: default:
  5539                           
  5540                           ;master_eight.c: 724: break;
  5541                           
  5542                           ;master_eight.c: 723: T1CONbits.TMR1ON = 1;
  5543                           
  5544  0224  0870               	movf	_levelofDimmer_LSB,w
  5545                           
  5546                           ; Switch size 1, requested type "space"
  5547                           ; Number of cases is 10, Range of values is 48 to 57
  5548                           ; switch strategies available:
  5549                           ; Name         Instructions Cycles
  5550                           ; direct_byte           29     9 (fixed)
  5551                           ; simple_byte           31    16 (average)
  5552                           ; jumptable            263     9 (fixed)
  5553                           ;	Chosen strategy is direct_byte
  5554  0225  3ED0               	addlw	-48
  5555  0226  1C03               	skipc
  5556  0227  2A9B               	goto	i1l390
  5557  0228  0084               	movwf	4
  5558  0229  300A               	movlw	10
  5559  022A  0204               	subwf	4,w
  5560  022B  1803               	skipnc
  5561  022C  2A9B               	goto	i1l390
  5562  022D  3188               	movlp	high i1S4234
  5563  022E  3504               	lslf	4,w
  5564  022F  3E8C               	addlw	low i1S4234
  5565  0230  0082               	movwf	2
  5566                           
  5567                           ;master_eight.c: 728: break;
  5568  0231  2A9B               	goto	i1l390
  5569  0232                     i1l2996:	
  5570                           ;master_eight.c: 732: {
  5571                           ;master_eight.c: 733: case '0':
  5572                           
  5573                           ;master_eight.c: 731: switch(levelofDimmer_LSB)
  5574                           
  5575                           ;master_eight.c: 729: case '8':
  5576                           
  5577                           
  5578                           ;master_eight.c: 734: TMR1H=0xE3;
  5579  0232  30E3               	movlw	227
  5580  0233                     L37:	
  5581  0233  0097               	movwf	23	;volatile
  5582                           
  5583                           ;master_eight.c: 735: TMR1L=0xE0;
  5584  0234  30E0               	movlw	224
  5585  0235  2A7B               	goto	L3
  5586  0236                     i1l3000:	
  5587                           ;master_eight.c: 738: case '1':
  5588                           
  5589                           ;master_eight.c: 737: break;
  5590                           
  5591                           ;master_eight.c: 736: T1CONbits.TMR1ON = 1;
  5592                           
  5593                           
  5594                           ;master_eight.c: 739: TMR1H=0xE4;
  5595  0236  30E4               	movlw	228
  5596  0237                     L49:	
  5597  0237  0097               	movwf	23	;volatile
  5598                           
  5599                           ;master_eight.c: 740: TMR1L=0xA8;
  5600  0238  30A8               	movlw	168
  5601  0239  2A7B               	goto	L3
  5602  023A                     i1l3004:	
  5603                           ;master_eight.c: 743: case '2':
  5604                           
  5605                           ;master_eight.c: 742: break;
  5606                           
  5607                           ;master_eight.c: 741: T1CONbits.TMR1ON = 1;
  5608                           
  5609                           
  5610                           ;master_eight.c: 744: TMR1H=0xE5;
  5611  023A  30E5               	movlw	229
  5612  023B                     L38:	
  5613  023B  0097               	movwf	23	;volatile
  5614                           
  5615                           ;master_eight.c: 745: TMR1L=0x70;
  5616  023C  3070               	movlw	112
  5617  023D  2A7B               	goto	L3
  5618  023E                     i1l3008:	
  5619                           ;master_eight.c: 748: case '3':
  5620                           
  5621                           ;master_eight.c: 747: break;
  5622                           
  5623                           ;master_eight.c: 746: T1CONbits.TMR1ON = 1;
  5624                           
  5625                           
  5626                           ;master_eight.c: 749: TMR1H=0xE6;
  5627  023E  30E6               	movlw	230
  5628  023F  0097               	movwf	23	;volatile
  5629                           
  5630                           ;master_eight.c: 750: TMR1L=0x38;
  5631  0240  3038               	movlw	56
  5632  0241  2A7B               	goto	L3
  5633  0242                     i1l3012:	
  5634                           ;master_eight.c: 753: case '4':
  5635                           
  5636                           ;master_eight.c: 752: break;
  5637                           
  5638                           ;master_eight.c: 751: T1CONbits.TMR1ON = 1;
  5639                           
  5640                           
  5641                           ;master_eight.c: 754: TMR1H=0xE7;
  5642  0242  30E7               	movlw	231
  5643  0243                     L39:	
  5644  0243  0097               	movwf	23	;volatile
  5645                           
  5646                           ;master_eight.c: 755: TMR1L=0x00;
  5647  0244  0196               	clrf	22	;volatile
  5648  0245  2A7C               	goto	i1l3060
  5649  0246                     i1l3018:	
  5650                           ;master_eight.c: 758: case '5':
  5651                           
  5652                           ;master_eight.c: 757: break;
  5653                           
  5654                           ;master_eight.c: 756: T1CONbits.TMR1ON = 1;
  5655                           
  5656                           
  5657                           ;master_eight.c: 759: TMR1H=0xE8;
  5658  0246  30E8               	movlw	232
  5659  0247                     L40:	
  5660  0247  0097               	movwf	23	;volatile
  5661                           
  5662                           ;master_eight.c: 760: TMR1L=0x90;
  5663  0248  3090               	movlw	144
  5664  0249  2A7B               	goto	L3
  5665  024A                     i1l3022:	
  5666                           ;master_eight.c: 763: case '6':
  5667                           
  5668                           ;master_eight.c: 762: break;
  5669                           
  5670                           ;master_eight.c: 761: T1CONbits.TMR1ON = 1;
  5671                           
  5672                           
  5673                           ;master_eight.c: 764: TMR1H=0xEA;
  5674  024A  30EA               	movlw	234
  5675  024B                     L41:	
  5676  024B  0097               	movwf	23	;volatile
  5677                           
  5678                           ;master_eight.c: 765: TMR1L=0x20;
  5679  024C  3020               	movlw	32
  5680  024D  2A7B               	goto	L3
  5681  024E                     i1l3026:	
  5682                           ;master_eight.c: 768: case '7':
  5683                           
  5684                           ;master_eight.c: 767: break;
  5685                           
  5686                           ;master_eight.c: 766: T1CONbits.TMR1ON = 1;
  5687                           
  5688                           
  5689                           ;master_eight.c: 769: TMR1H=0xEB;
  5690  024E  30EB               	movlw	235
  5691  024F                     L42:	
  5692  024F  0097               	movwf	23	;volatile
  5693                           
  5694                           ;master_eight.c: 770: TMR1L=0xB0;
  5695  0250  30B0               	movlw	176
  5696  0251  2A7B               	goto	L3
  5697  0252                     i1l3030:	
  5698                           ;master_eight.c: 773: case '8':
  5699                           
  5700                           ;master_eight.c: 772: break;
  5701                           
  5702                           ;master_eight.c: 771: T1CONbits.TMR1ON = 1;
  5703                           
  5704                           
  5705                           ;master_eight.c: 774: TMR1H=0xEC;
  5706  0252  30EC               	movlw	236
  5707  0253                     L50:	
  5708  0253  0097               	movwf	23	;volatile
  5709                           
  5710                           ;master_eight.c: 775: TMR1L=0x78;
  5711  0254  3078               	movlw	120
  5712  0255  2A7B               	goto	L3
  5713  0256                     i1l3034:	
  5714                           ;master_eight.c: 778: case '9':
  5715                           
  5716                           ;master_eight.c: 777: break;
  5717                           
  5718                           ;master_eight.c: 776: T1CONbits.TMR1ON = 1;
  5719                           
  5720                           
  5721                           ;master_eight.c: 779: TMR1H=0xED;
  5722  0256  30ED               	movlw	237
  5723  0257                     L43:	
  5724  0257  0097               	movwf	23	;volatile
  5725                           
  5726                           ;master_eight.c: 780: TMR1L=0x40;
  5727  0258  3040               	movlw	64
  5728  0259  2A7B               	goto	L3
  5729  025A                     i1l3040:	
  5730                           ;master_eight.c: 785: }
  5731                           
  5732                           ;master_eight.c: 784: break;
  5733                           
  5734                           ;master_eight.c: 783: default:
  5735                           
  5736                           ;master_eight.c: 782: break;
  5737                           
  5738                           ;master_eight.c: 781: T1CONbits.TMR1ON = 1;
  5739                           
  5740  025A  0870               	movf	_levelofDimmer_LSB,w
  5741                           
  5742                           ; Switch size 1, requested type "space"
  5743                           ; Number of cases is 10, Range of values is 48 to 57
  5744                           ; switch strategies available:
  5745                           ; Name         Instructions Cycles
  5746                           ; direct_byte           29     9 (fixed)
  5747                           ; simple_byte           31    16 (average)
  5748                           ; jumptable            263     9 (fixed)
  5749                           ;	Chosen strategy is direct_byte
  5750  025B  3ED0               	addlw	-48
  5751  025C  1C03               	skipc
  5752  025D  2A9B               	goto	i1l390
  5753  025E  0084               	movwf	4
  5754  025F  300A               	movlw	10
  5755  0260  0204               	subwf	4,w
  5756  0261  1803               	skipnc
  5757  0262  2A9B               	goto	i1l390
  5758  0263  3188               	movlp	high i1S4236
  5759  0264  3504               	lslf	4,w
  5760  0265  3EA0               	addlw	low i1S4236
  5761  0266  0082               	movwf	2
  5762                           
  5763                           ;master_eight.c: 786: break;
  5764  0267  2A9B               	goto	i1l390
  5765  0268                     i1l3042:	
  5766                           ;master_eight.c: 790: {
  5767                           ;master_eight.c: 791: case '0':
  5768                           
  5769                           ;master_eight.c: 789: switch(levelofDimmer_LSB)
  5770                           
  5771                           ;master_eight.c: 787: case '9':
  5772                           
  5773                           
  5774                           ;master_eight.c: 792: TMR1H=0xEE;
  5775  0268  30EE               	movlw	238
  5776  0269                     L44:	
  5777  0269  0097               	movwf	23	;volatile
  5778                           
  5779                           ;master_eight.c: 793: TMR1L=0xD0;
  5780  026A  30D0               	movlw	208
  5781  026B  2A7B               	goto	L3
  5782  026C                     i1l3046:	
  5783                           ;master_eight.c: 796: case '1':
  5784                           
  5785                           ;master_eight.c: 795: break;
  5786                           
  5787                           ;master_eight.c: 794: T1CONbits.TMR1ON = 1;
  5788                           
  5789                           
  5790                           ;master_eight.c: 797: TMR1H=0xF0;
  5791  026C  30F0               	movlw	240
  5792  026D                     L45:	
  5793  026D  0097               	movwf	23	;volatile
  5794                           
  5795                           ;master_eight.c: 798: TMR1L=0x60;
  5796  026E  3060               	movlw	96
  5797  026F  2A7B               	goto	L3
  5798  0270                     i1l3050:	
  5799                           ;master_eight.c: 801: case '2':
  5800                           
  5801                           ;master_eight.c: 800: break;
  5802                           
  5803                           ;master_eight.c: 799: T1CONbits.TMR1ON = 1;
  5804                           
  5805                           
  5806                           ;master_eight.c: 802: TMR1H=0xF1;
  5807  0270  30F1               	movlw	241
  5808  0271                     L46:	
  5809  0271  0097               	movwf	23	;volatile
  5810                           
  5811                           ;master_eight.c: 803: TMR1L=0xF0;
  5812  0272  30F0               	movlw	240
  5813  0273  2A7B               	goto	L3
  5814  0274                     i1l3054:	
  5815                           ;master_eight.c: 806: case '3':
  5816                           
  5817                           ;master_eight.c: 805: break;
  5818                           
  5819                           ;master_eight.c: 804: T1CONbits.TMR1ON = 1;
  5820                           
  5821                           
  5822                           ;master_eight.c: 807: TMR1H=0xF3;
  5823  0274  30F3               	movlw	243
  5824  0275                     L47:	
  5825  0275  0097               	movwf	23	;volatile
  5826                           
  5827                           ;master_eight.c: 808: TMR1L=0x80;
  5828  0276  3080               	movlw	128
  5829  0277  2A7B               	goto	L3
  5830  0278                     i1l3058:	
  5831                           ;master_eight.c: 811: case '4':
  5832                           
  5833                           ;master_eight.c: 810: break;
  5834                           
  5835                           ;master_eight.c: 809: T1CONbits.TMR1ON = 1;
  5836                           
  5837                           
  5838                           ;master_eight.c: 812: TMR1H=0xF5;
  5839  0278  30F5               	movlw	245
  5840  0279                     L17:	
  5841  0279  0097               	movwf	23	;volatile
  5842                           
  5843                           ;master_eight.c: 813: TMR1L=0x10;
  5844  027A  3010               	movlw	16
  5845  027B                     L3:	
  5846  027B  0096               	movwf	22	;volatile
  5847  027C                     i1l3060:	
  5848                           
  5849                           ;master_eight.c: 814: T1CONbits.TMR1ON = 1;
  5850  027C  1418               	bsf	24,0	;volatile
  5851                           
  5852                           ;master_eight.c: 815: break;
  5853  027D  2A9B               	goto	i1l390
  5854  027E                     i1l383:	
  5855                           ;master_eight.c: 816: case '5':
  5856                           
  5857  027E                     i1l384:	
  5858                           ;master_eight.c: 822: case '6':
  5859                           
  5860                           ;master_eight.c: 821: break;
  5861                           
  5862                           ;master_eight.c: 820: PORTEbits.RE5=0;
  5863                           
  5864  027E                     i1l385:	
  5865                           ;master_eight.c: 828: case '7':
  5866                           
  5867                           ;master_eight.c: 827: break;
  5868                           
  5869                           ;master_eight.c: 826: PORTEbits.RE5=0;
  5870                           
  5871  027E                     i1l386:	
  5872                           ;master_eight.c: 834: case '8':
  5873                           
  5874                           ;master_eight.c: 833: break;
  5875                           
  5876                           ;master_eight.c: 832: PORTEbits.RE5=0;
  5877                           
  5878  027E                     i1l387:	
  5879                           ;master_eight.c: 840: case '9':
  5880                           
  5881                           ;master_eight.c: 839: break;
  5882                           
  5883                           ;master_eight.c: 838: PORTEbits.RE5=0;
  5884                           
  5885                           
  5886                           ;master_eight.c: 844: PORTEbits.RE5=0;
  5887  027E  1290               	bcf	16,5	;volatile
  5888                           
  5889                           ;master_eight.c: 848: }
  5890                           
  5891                           ;master_eight.c: 847: break;
  5892                           
  5893                           ;master_eight.c: 846: default:
  5894                           
  5895                           ;master_eight.c: 845: break;
  5896  027F  2A9B               	goto	i1l390
  5897  0280                     i1l3064:	
  5898  0280  0870               	movf	_levelofDimmer_LSB,w
  5899                           
  5900                           ; Switch size 1, requested type "space"
  5901                           ; Number of cases is 10, Range of values is 48 to 57
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; direct_byte           29     9 (fixed)
  5905                           ; simple_byte           31    16 (average)
  5906                           ; jumptable            263     9 (fixed)
  5907                           ;	Chosen strategy is direct_byte
  5908  0281  3ED0               	addlw	-48
  5909  0282  1C03               	skipc
  5910  0283  2A9B               	goto	i1l390
  5911  0284  0084               	movwf	4
  5912  0285  300A               	movlw	10
  5913  0286  0204               	subwf	4,w
  5914  0287  1803               	skipnc
  5915  0288  2A9B               	goto	i1l390
  5916  0289  3188               	movlp	high i1S4238
  5917  028A  3504               	lslf	4,w
  5918  028B  3EB4               	addlw	low i1S4238
  5919  028C  0082               	movwf	2
  5920                           
  5921                           ;master_eight.c: 852: }
  5922                           
  5923                           ;master_eight.c: 851: break;
  5924                           
  5925                           ;master_eight.c: 850: default:
  5926                           
  5927                           ;master_eight.c: 849: break;
  5928  028D  2A9B               	goto	i1l390
  5929  028E                     i1l3068:	
  5930  028E  0855               	movf	_levelofDimmer_MSB,w
  5931                           
  5932                           ; Switch size 1, requested type "space"
  5933                           ; Number of cases is 10, Range of values is 48 to 57
  5934                           ; switch strategies available:
  5935                           ; Name         Instructions Cycles
  5936                           ; direct_byte           29     9 (fixed)
  5937                           ; simple_byte           31    16 (average)
  5938                           ; jumptable            263     9 (fixed)
  5939                           ;	Chosen strategy is direct_byte
  5940  028F  3ED0               	addlw	-48
  5941  0290  1C03               	skipc
  5942  0291  2A9B               	goto	i1l390
  5943  0292  0084               	movwf	4
  5944  0293  300A               	movlw	10
  5945  0294  0204               	subwf	4,w
  5946  0295  1803               	skipnc
  5947  0296  2A9B               	goto	i1l390
  5948  0297  3188               	movlp	high i1S4240
  5949  0298  3504               	lslf	4,w
  5950  0299  3EC8               	addlw	low i1S4240
  5951  029A  0082               	movwf	2
  5952  029B                     i1l390:	
  5953  029B  087B               	movf	??_isr+1,w
  5954  029C  00FF               	movwf	127
  5955  029D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5956  029E  0009               	retfie
  5957  029F                     __end_of_isr:	
  5958                           
  5959                           	psect	swtext1
  5960  0800                     __pswtext1:	
  5961  0800                     i1S4220:	
  5962  0800  3181  2901         	ljmp	i1l2636
  5963  0802  3181  2903         	ljmp	i1l2640
  5964  0804  3181  2905         	ljmp	i1l2644
  5965  0806  3181  2909         	ljmp	i1l2648
  5966  0808  3181  290D         	ljmp	i1l2652
  5967  080A  3181  290F         	ljmp	i1l2656
  5968  080C  3181  2911         	ljmp	i1l2660
  5969  080E  3181  2913         	ljmp	i1l2666
  5970  0810  3181  2917         	ljmp	i1l2670
  5971  0812  3181  2918         	ljmp	i1l2674
  5972                           
  5973                           	psect	swtext2
  5974  0814                     __pswtext2:	
  5975  0814                     i1S4222:	
  5976  0814  3181  292A         	ljmp	i1l2682
  5977  0816  3181  292C         	ljmp	i1l2686
  5978  0818  3181  2930         	ljmp	i1l2690
  5979  081A  3181  2932         	ljmp	i1l2694
  5980  081C  3181  2934         	ljmp	i1l2698
  5981  081E  3181  2936         	ljmp	i1l2702
  5982  0820  3181  293A         	ljmp	i1l2706
  5983  0822  3181  293C         	ljmp	i1l2710
  5984  0824  3181  2940         	ljmp	i1l2714
  5985  0826  3181  2942         	ljmp	i1l2718
  5986                           
  5987                           	psect	swtext3
  5988  0828                     __pswtext3:	
  5989  0828                     i1S4224:	
  5990  0828  3181  2954         	ljmp	i1l2726
  5991  082A  3181  2956         	ljmp	i1l2730
  5992  082C  3181  295A         	ljmp	i1l2734
  5993  082E  3181  295C         	ljmp	i1l2738
  5994  0830  3181  2960         	ljmp	i1l2742
  5995  0832  3181  2962         	ljmp	i1l2746
  5996  0834  3181  2966         	ljmp	i1l2750
  5997  0836  3181  2968         	ljmp	i1l2754
  5998  0838  3181  296C         	ljmp	i1l2758
  5999  083A  3181  296E         	ljmp	i1l2762
  6000                           
  6001                           	psect	swtext4
  6002  083C                     __pswtext4:	
  6003  083C                     i1S4226:	
  6004  083C  3181  2980         	ljmp	i1l2770
  6005  083E  3181  2982         	ljmp	i1l2774
  6006  0840  3181  2984         	ljmp	i1l2778
  6007  0842  3181  2986         	ljmp	i1l2782
  6008  0844  3181  2988         	ljmp	i1l2786
  6009  0846  3181  298A         	ljmp	i1l2792
  6010  0848  3181  298C         	ljmp	i1l2796
  6011  084A  3181  298E         	ljmp	i1l2800
  6012  084C  3181  2990         	ljmp	i1l2804
  6013  084E  3181  2992         	ljmp	i1l2808
  6014                           
  6015                           	psect	swtext5
  6016  0850                     __pswtext5:	
  6017  0850                     i1S4228:	
  6018  0850  3181  29A2         	ljmp	i1l2816
  6019  0852  3181  29A4         	ljmp	i1l2820
  6020  0854  3181  29A6         	ljmp	i1l2824
  6021  0856  3181  29A8         	ljmp	i1l2828
  6022  0858  3181  29AA         	ljmp	i1l2832
  6023  085A  3181  29AC         	ljmp	i1l2836
  6024  085C  3181  29AE         	ljmp	i1l2840
  6025  085E  3181  29B0         	ljmp	i1l2844
  6026  0860  3181  29B2         	ljmp	i1l2848
  6027  0862  3181  29B4         	ljmp	i1l2852
  6028                           
  6029                           	psect	swtext6
  6030  0864                     __pswtext6:	
  6031  0864                     i1S4230:	
  6032  0864  3181  29C4         	ljmp	i1l2860
  6033  0866  3181  29C6         	ljmp	i1l2866
  6034  0868  3181  29C8         	ljmp	i1l2870
  6035  086A  3181  29CA         	ljmp	i1l2874
  6036  086C  3181  29CC         	ljmp	i1l2878
  6037  086E  3181  29CE         	ljmp	i1l2882
  6038  0870  3181  29D0         	ljmp	i1l2886
  6039  0872  3181  29D2         	ljmp	i1l2890
  6040  0874  3181  29D4         	ljmp	i1l2894
  6041  0876  3181  29D6         	ljmp	i1l2898
  6042                           
  6043                           	psect	swtext7
  6044  0878                     __pswtext7:	
  6045  0878                     i1S4232:	
  6046  0878  3181  29E6         	ljmp	i1l2906
  6047  087A  3181  29E8         	ljmp	i1l2910
  6048  087C  3181  29EA         	ljmp	i1l2914
  6049  087E  3181  29EC         	ljmp	i1l2918
  6050  0880  3181  29EE         	ljmp	i1l2922
  6051  0882  3181  29F0         	ljmp	i1l2926
  6052  0884  3181  29F2         	ljmp	i1l2930
  6053  0886  3181  29F4         	ljmp	i1l2936
  6054  0888  3181  29F6         	ljmp	i1l2940
  6055  088A  3181  29F8         	ljmp	i1l2944
  6056                           
  6057                           	psect	swtext8
  6058  088C                     __pswtext8:	
  6059  088C                     i1S4234:	
  6060  088C  3182  2A08         	ljmp	i1l2952
  6061  088E  3182  2A0A         	ljmp	i1l2956
  6062  0890  3182  2A0C         	ljmp	i1l2960
  6063  0892  3182  2A0E         	ljmp	i1l2964
  6064  0894  3182  2A10         	ljmp	i1l2968
  6065  0896  3182  2A12         	ljmp	i1l2972
  6066  0898  3182  2A14         	ljmp	i1l2976
  6067  089A  3182  2A18         	ljmp	i1l2980
  6068  089C  3182  2A1C         	ljmp	i1l2984
  6069  089E  3182  2A20         	ljmp	i1l2988
  6070                           
  6071                           	psect	swtext9
  6072  08A0                     __pswtext9:	
  6073  08A0                     i1S4236:	
  6074  08A0  3182  2A32         	ljmp	i1l2996
  6075  08A2  3182  2A36         	ljmp	i1l3000
  6076  08A4  3182  2A3A         	ljmp	i1l3004
  6077  08A6  3182  2A3E         	ljmp	i1l3008
  6078  08A8  3182  2A42         	ljmp	i1l3012
  6079  08AA  3182  2A46         	ljmp	i1l3018
  6080  08AC  3182  2A4A         	ljmp	i1l3022
  6081  08AE  3182  2A4E         	ljmp	i1l3026
  6082  08B0  3182  2A52         	ljmp	i1l3030
  6083  08B2  3182  2A56         	ljmp	i1l3034
  6084                           
  6085                           	psect	swtext10
  6086  08B4                     __pswtext10:	
  6087  08B4                     i1S4238:	
  6088  08B4  3182  2A68         	ljmp	i1l3042
  6089  08B6  3182  2A6C         	ljmp	i1l3046
  6090  08B8  3182  2A70         	ljmp	i1l3050
  6091  08BA  3182  2A74         	ljmp	i1l3054
  6092  08BC  3182  2A78         	ljmp	i1l3058
  6093  08BE  3182  2A7E         	ljmp	i1l383
  6094  08C0  3182  2A7E         	ljmp	i1l384
  6095  08C2  3182  2A7E         	ljmp	i1l385
  6096  08C4  3182  2A7E         	ljmp	i1l386
  6097  08C6  3182  2A7E         	ljmp	i1l387
  6098                           
  6099                           	psect	swtext11
  6100  08C8                     __pswtext11:	
  6101  08C8                     i1S4240:	
  6102  08C8  3181  291C         	ljmp	i1l2680
  6103  08CA  3181  2946         	ljmp	i1l2724
  6104  08CC  3181  2972         	ljmp	i1l2768
  6105  08CE  3181  2994         	ljmp	i1l2814
  6106  08D0  3181  29B6         	ljmp	i1l2858
  6107  08D2  3181  29D8         	ljmp	i1l2904
  6108  08D4  3181  29FA         	ljmp	i1l2950
  6109  08D6  3182  2A24         	ljmp	i1l2994
  6110  08D8  3182  2A5A         	ljmp	i1l3040
  6111  08DA  3182  2A80         	ljmp	i1l3064
  6112                           
  6113                           	psect	text21
  6114  0FE7                     __ptext21:	
  6115 ;; *************** function _errorsISR *****************
  6116 ;; Defined at:
  6117 ;;		line 1206 in file "../master_eight.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  errNum          1    wreg     PTR unsigned char 
  6120 ;;		 -> ErrorNames(5), 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  errNum          1    3[COMMON] PTR unsigned char 
  6123 ;;		 -> ErrorNames(5), 
  6124 ;;  Tx_count        2    1[COMMON] int 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0
  6136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  6137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0
  6138 ;;Total ram usage:        4 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_isr
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function _errorsISR
  6149  0FE7                     _errorsISR:	
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in _errorsISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6153                           ;errorsISR@errNum stored from wreg
  6154  0FE7  00F9               	movwf	errorsISR@errNum
  6155                           
  6156                           ;master_eight.c: 1207: int Tx_count=0;
  6157  0FE8  01F7               	clrf	errorsISR@Tx_count
  6158  0FE9  01F8               	clrf	errorsISR@Tx_count+1
  6159  0FEA                     i1l2476:	
  6160                           ;master_eight.c: 1208: while(Tx_count!=4)
  6161                           
  6162  0FEA  3004               	movlw	4
  6163  0FEB  0677               	xorwf	errorsISR@Tx_count,w
  6164  0FEC  0478               	iorwf	errorsISR@Tx_count+1,w
  6165  0FED  1903               	btfsc	3,2
  6166  0FEE  0008               	return
  6167  0FEF                     i1l448:	
  6168                           ;master_eight.c: 1209: {
  6169                           ;master_eight.c: 1210: while (!TX1STAbits.TRMT);
  6170                           
  6171  0FEF  0023               	movlb	3	; select bank3
  6172  0FF0  1C9E               	btfss	30,1	;volatile
  6173  0FF1  2FEF               	goto	i1l448
  6174                           
  6175                           ;master_eight.c: 1211: TX1REG = *errNum;
  6176  0FF2  0879               	movf	errorsISR@errNum,w
  6177  0FF3  0086               	movwf	6
  6178  0FF4  0187               	clrf	7
  6179  0FF5  0801               	movf	1,w
  6180  0FF6  009A               	movwf	26	;volatile
  6181                           
  6182                           ;master_eight.c: 1212: *errNum++;
  6183  0FF7  3001               	movlw	1
  6184  0FF8  00F6               	movwf	??_errorsISR
  6185  0FF9  0876               	movf	??_errorsISR,w
  6186  0FFA  07F9               	addwf	errorsISR@errNum,f
  6187                           
  6188                           ;master_eight.c: 1213: Tx_count++;
  6189  0FFB  3001               	movlw	1
  6190  0FFC  07F7               	addwf	errorsISR@Tx_count,f
  6191  0FFD  3000               	movlw	0
  6192  0FFE  3DF8               	addwfc	errorsISR@Tx_count+1,f
  6193  0FFF  2FEA               	goto	i1l2476
  6194  1000                     __end_of_errorsISR:	
  6195  007E                     btemp	set	126	;btemp
  6196  007E                     int$flags	set	126
  6197  007E                     wtemp0	set	126


Data Sizes:
    Strings     2
    Constant    0
    Data        153
    BSS         12
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     41      74
    BANK1            80      8      70
    BANK2            80      0      74
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK0[2]), applianceControl@switchNumberStringBuffer(BANK0[2]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(1) Largest target is 42
		 -> currentStateBuffer(BANK2[42]), 

    errorsMain@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 

    errorsISR@errNum	PTR unsigned char  size(1) Largest target is 5
		 -> ErrorNames(COMMON[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _applianceControl->_atoi
    _atoi->___wmul
    _actiontouchPanel->_sendFeedback_TO_Gateway

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4574
                                             35 BANK0      6     6      0
                                              0 BANK1      8     8      0
                _GPIO_pin_Initialize
                   _actiontouchPanel
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
    _copyTouchpanelReceiveDataBuffer
                         _errorsMain
            _sendFeedback_TO_Gateway
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           4     4      0     137
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _copyTouchpanelReceiveDataBuffer                      3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    21    15      6    2412
                                             14 BANK0     21    15      6
                               _atoi
                 _sendAcknowledgment
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     4      0     104
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     789
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                    _CCP9_Initialize
                 _EUSART2_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP9_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _actiontouchPanel                                    11     9      2     969
                                              3 BANK0     11     9      2
            _sendFeedback_TO_Gateway
 ---------------------------------------------------------------------------------
 (1) _sendFeedback_TO_Gateway                              3     2      1     524
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     197
                                              4 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (5) _errorsISR                                            4     4      0     197
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _actiontouchPanel
     _sendFeedback_TO_Gateway
   _allPeripheralInit
     _CCP9_Initialize
     _EUSART2_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
   _applianceControl
     _atoi
       ___wmul
       _isdigit
     _sendAcknowledgment
   _copyReceivedDataBuffer
   _copyTouchpanelReceiveDataBuffer
   _errorsMain
   _sendFeedback_TO_Gateway

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4A      10       92.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0      E6      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Dec 06 12:33:56 2018

                      __size_of_allPeripheralInit 000F                                                 pc 0002  
                                     __CFG_CP$OFF 0000                                                _M1 0068  
                                              _M2 0066                                                _M3 00E4  
                                              _M4 0064                                                _M5 0062  
                             ___wmul@multiplicand 0022                      applianceControl@integerSpeed 0036  
                                             l214 059A                                               l400 038E  
                                             l209 0573                                               l226 0613  
                                             l406 03FF                                               l457 07C1  
                                             l490 07DE                                               l466 07A3  
                                             _GIE 005F                         __size_of_applianceControl 0132  
                                             _isr 0004                                      __CFG_BORV$LO 0000  
                                             wreg 0009                                      __CFG_FOSC$HS 0000  
                                    __CFG_LVP$OFF 0000                                              l3504 07D8  
                                            l4216 0583                                              l3530 061D  
                                            l4218 0592                                              l3524 07FE  
                                            l3532 0616                                              l3550 0643  
                                            l3542 0638                                              l3534 0622  
                                            l3552 066A                                              l3570 079E  
                                            l3722 057E                                              l3714 0567  
                                            l3548 063F                                              l3716 056E  
                                            l3558 067A                                              l3718 0575  
                                            l3726 058C                                              l3902 03E2  
                                            l3816 07BC                                              l3920 0419  
                                            l3746 05D0                                              l3770 060A  
                                            l3756 05EA                                              l3932 0432  
                                            l3908 0402                                              l3836 02FF  
                                            l3854 0348                                              l3944 044C  
                                            l3874 0391                                              l3868 0370  
                                            l3888 03BA                                              ?_isr 0076  
                                            STR_1 1000                                              u2007 0727  
                                            u2017 0734                                              u1405 07DF  
                                            u1415 07E4                                              u1705 036E  
                                            u1635 077D                                              u1715 038C  
                                            u1907 0507                                              u1595 074C  
                                            u1917 0513                                              u1765 03E0  
                                            u1927 051F                                              u1775 03FD  
                                            u1937 052D                                              u1947 053A  
                                            _PEIE 005E                                              u1957 0546  
                                            u1967 0552                                              u1977 055E  
                                            u1987 070E                                              u1997 071B  
                                            _WPUB 020D                                              _WPUD 020F  
                                            _WPUE 0210                                              _WPUG 048D  
                                    __CFG_WRT$OFF 0000                                              _atoi 0614  
                                            _main 02E0                                              fsr0h 0005  
                                            fsr1h 0007                                              fsr0l 0004  
                                            indf1 0001                                              fsr1l 0006  
                                            btemp 007E                           _copy_parentalLockBuffer 00C8  
                                            start 029F                                     __CFG_IESO$OFF 0000  
                                 _TMR3_Initialize 0F68                            __size_of_pinINIT_extra 0015  
                       ??_sendFeedback_TO_Gateway 0021                                             ??_isr 007A  
             applianceControl@charParentalControl 0032                                      main@end_flag 00DE  
                                           ?_atoi 0026                                             ?_main 0076  
                                   __CFG_WDTE$OFF 0000                                             _T1CON 0018  
                                           _T3CON 0413                                             _RC1IF 008D  
                                           _RC2IF 00A5                                             i1l242 00E7  
                                           i1l234 0064                                             i1l239 00C3  
                                           i1l390 029B                                             i1l383 027E  
                                           i1l448 0FEF                                             i1l384 027E  
                                           i1l385 027E                                             i1l386 027E  
                                           i1l387 027E                                             _TMR1H 0017  
                                           _TMR3H 0412                                             _TMR1L 0016  
                                           _TMR3L 0411                                    __CFG_FCMEN$OFF 0000  
                                 __end_of_isdigit 0800                                             atoi@a 002B  
                                           atoi@s 002D                           __end_of_TMR1_Initialize 0F68  
                                  __CFG_BOREN$OFF 0000                          actiontouchPanel@Sw_speed 0024  
                                           status 0003                                             wtemp0 007E  
                               ?_actiontouchPanel 0023                             __end_of_clearAllPorts 0F47  
                             _GPIO_pin_Initialize 0FA5                                    __CFG_MCLRE$OFF 0000  
                              ??_actiontouchPanel 0025                                   __initialization 02A1  
                         ?_copyReceivedDataBuffer 0076                                      __end_of_atoi 067F  
                                    __end_of_main 0469  copyTouchpanelReceiveDataBuffer@dataBufferCounter 0021  
                                      _ErrorNames 0071                                    __CFG_LPBOR$OFF 0000  
                                          ??_atoi 0028                                            ??_main 0043  
                            ?_GPIO_pin_Initialize 0076                                     _pinINIT_extra 0F90  
                       main@dataBufferCounter_730 00E2                   __end_of_sendFeedback_TO_Gateway 073A  
                      __end_of_EUSART2_Initialize 0FD1                                   _CCP9_Initialize 0F53  
                                          i1S4220 0800                                            _CCP9IF 00A6  
                                          i1S4230 0864                                            i1S4222 0814  
                                          i1S4240 08C8                                            i1S4232 0878  
                                          i1S4224 0828                                            i1S4234 088C  
                                          i1S4226 083C                                            i1S4236 08A0  
                                          i1S4228 0850                                            i1S4238 08B4  
                                          _CCPR9H 061B                                            _CCPR9L 061A  
                                          _ANSELA 018C                                            _ANSELB 018D  
                                          _ANSELD 018F                                            _ANSELE 0190  
                                          _ANSELF 040C                                            _ANSELG 040D  
                                          _T1GCON 0019                                            _T3GCON 0414  
                                          _RC1REG 0199                                            _RC2REG 0491  
                                          _RC1STA 019D                                            _RC2STA 0495  
                    _touchpanleReceivedDatabuffer 00B8                                            i1l3000 0236  
                                          i1l3012 0242                                            i1l3004 023A  
                                          i1l3030 0252                                            i1l3022 024A  
                                          i1l3008 023E                                            i1l3040 025A  
                                          i1l3050 0270                                            i1l3042 0268  
                                          i1l3034 0256                                            i1l3026 024E  
                                          i1l3018 0246                                            i1l3060 027C  
                                          i1l3054 0274                                            i1l3046 026C  
                                          i1l3064 0280                                            i1l3058 0278  
                                          i1l2610 00DD                                            i1l3068 028E  
                                          i1l2710 013C                                            i1l2702 0136  
                                          i1l2800 018E                                            i1l2640 0103  
                                          i1l2552 003D                                            i1l2544 0024  
                                          i1l2730 0156                                            i1l2714 0140  
                                          i1l2706 013A                                            i1l2626 00F7  
                                          i1l2476 0FEA                                            i1l2820 01A4  
                                          i1l2804 0190                                            i1l2724 0146  
                                          i1l2660 0111                                            i1l2652 010D  
                                          i1l2644 0105                                            i1l2636 0101  
                         __end_of_TMR3_Initialize 0F74                                            u106_25 00B8  
                                          i1l2910 01E8                                            i1l2814 0194  
                                          i1l2750 0166                                            i1l2742 0160  
                                          i1l2734 015A                                            i1l2726 0154  
                                          i1l2718 0142                                            i1l2670 0117  
                                          i1l2904 01D8                                            i1l2840 01AE  
                                          i1l2832 01AA                                            i1l2824 01A6  
                                          i1l2816 01A2                                            i1l2808 0192  
                                          i1l2656 010F                                            i1l2648 0109  
                                          i1l2680 011C                                            i1l2576 007E  
                                          i1l2930 01F2                                            i1l2922 01EE  
                                          i1l2914 01EA                                            i1l2906 01E6  
                                          i1l2770 0180                                            i1l2762 016E  
                                          i1l2754 0168                                            i1l2746 0162  
                                          i1l2738 015C                                            i1l2690 0130  
                                          i1l2682 012A                                            i1l2674 0118  
                                          i1l2666 0113                                            i1l2586 009A  
                                          i1l2940 01F6                                            i1l2860 01C4  
                                          i1l2852 01B4                                            i1l2844 01B0  
                                          i1l2836 01AC                                            i1l2828 01A8  
                                          i1l2926 01F0                                            i1l2918 01EC  
                                          i1l2950 01FA                                            i1l2870 01C8  
                                          i1l2782 0186                                            i1l2774 0182  
                                          i1l2758 016C                                            i1l2694 0132  
                                          i1l2686 012C                                            i1l2960 020C  
                                          i1l2952 0208                                            i1l2944 01F8  
                                          i1l2936 01F4                                            i1l2848 01B2  
                                          i1l2792 018A                                            i1l2768 0172  
                                          i1l2890 01D2                                            i1l2882 01CE  
                                          i1l2874 01CA                                            i1l2866 01C6  
                                          i1l2858 01B6                                            i1l2786 0188  
                                          i1l2778 0184                                            i1l2698 0134  
                                          i1l2980 0218                                            i1l2972 0212  
                                          i1l2964 020E                                            i1l2956 020A  
                                          i1l2796 018C                                            i1l2894 01D4  
                                          i1l2886 01D0                                            i1l2878 01CC  
                                          i1l2984 021C                                            i1l2976 0214  
                                          i1l2968 0210                                            i1l2994 0224  
                                          i1l2898 01D6                                            i1l2996 0232  
                                          i1l2988 0220                                            _TX1REG 019A  
                                          _TX2REG 0492                                            _TX1STA 019E  
                                          _TX2STA 0496                                    __CFG_PWRTE$OFF 0000  
                  __end_of_copyReceivedDataBuffer 076B                       __size_of_sendAcknowledgment 001E  
                                          ___wmul 07D5                             ??_GPIO_pin_Initialize 0020  
                        _mainReceivedDataPosition 005E                                  _applianceControl 0469  
                                    __pdataCOMMON 0070                                         ??_isdigit 0020  
                                  ?_pinINIT_extra 0076           __end_of_copyTouchpanelReceiveDataBuffer 079A  
        __size_of_copyTouchpanelReceiveDataBuffer 002F                 ??_copyTouchpanelReceiveDataBuffer 0020  
                ?_copyTouchpanelReceiveDataBuffer 0076                   _copyTouchpanelReceiveDataBuffer 076B  
                   _touchpanelReceivedataPosition 005A                        actiontouchPanel@Switch_Num 002B  
                                ?_TMR1_Initialize 0076                           __end_of__initialization 02DC  
                sendFeedback_TO_Gateway@sw_number 0022                  sendFeedback_TO_Gateway@sw_status 0020  
                                  __pcstackCOMMON 0076                                      __pidataBANK0 0F74  
                                    __pidataBANK1 06C9                                      __pidataBANK2 067F  
                         __end_of_CCP9_Initialize 0F5D                                        __pbssBANK0 0056  
                                ?_TMR3_Initialize 0076                                   __CFG_VCAPEN$OFF 0000  
                              __size_of_errorsISR 0019                                        __pmaintext 02E0  
                                         ?___wmul 0020                                        __pintentry 0004  
                      sendAcknowledgment@Tx_count 0021                                           _CCP9CON 061C  
                                 ??_pinINIT_extra 0020                                           _SP1BRGH 019C  
                                         _SP1BRGL 019B                                           _SP2BRGH 0494  
                                         _SP2BRGL 0493                                        __pswtext10 08B4  
                                      __pswtext11 08C8       applianceControl@currentStateBufferPositions 0041  
                applianceControl@chDimmerSpeedLSB 0031                  applianceControl@chDimmerSpeedMSB 0030  
                                 __size_of___wmul 001C                                   __CFG_STVREN$OFF 0000  
                                      _errorsMain 07B8                                           __ptext1 07B8  
                                         __ptext2 076B                                           __ptext3 073A  
                                         __ptext4 0469                                           __ptext5 079A  
                                         __ptext6 0614                                           __ptext7 07F1  
                                         __ptext8 07D5                                           __ptext9 0F81  
                       __size_of_actiontouchPanel 0079                                         _T1CONbits 0018  
                                ?_CCP9_Initialize 0076                                           _isdigit 07F1  
                                    __size_of_isr 029B                                         _T3CONbits 0413  
                               __end_of_errorsISR 1000              sendAcknowledgment@currentStateBuffer 0023  
                            end_of_initialization 02DC                                           init_ram 0F47  
                                         initloop 0F48                                 _EUSART_Initialize 0FD1  
                               _levelofDimmer_LSB 0070                                 _levelofDimmer_MSB 0055  
                        ?_sendFeedback_TO_Gateway 0020                          __end_of_applianceControl 059B  
              applianceControl@integerSwitchState 003D                                _EUSART2_Initialize 0FBB  
                              ?_EUSART_Initialize 0076                            _touchPanelDataReceived 0058  
                                  main@start_flag 00DC                               ?_EUSART2_Initialize 0076  
                             ??_EUSART_Initialize 0020                                         _PORTAbits 000C  
                                       _PORTEbits 0010                                         _PORTFbits 028C  
                                       _TRISAbits 008C                            __size_of_clearAllPorts 0004  
                                       _TRISCbits 008E                                         _TRISEbits 0090  
                                       _TRISFbits 030C                                         _TRISGbits 030D  
                            ??_EUSART2_Initialize 0020                         __end_of_EUSART_Initialize 0FE7  
        applianceControl@switchNumberStringBuffer 0039                        __end_of_sendAcknowledgment 07B8  
                     __end_of_GPIO_pin_Initialize 0FBB                                    __end_of___wmul 07F1  
                          _mainReceivedDataBuffer 0120                                     __pidataCOMMON 0F4D  
                                     ?_errorsMain 0076                               start_initialization 02A1  
                                     __end_of_isr 029F                             applianceControl@F3724 0053  
                           applianceControl@F3726 0051                                     _clearAllPorts 0F43  
                        __size_of_TMR1_Initialize 000B           copyReceivedDataBuffer@dataBufferCounter 0021  
                                        ??___wmul 0024                                       __pdataBANK0 0049  
                                     __pdataBANK1 00A0                                       __pdataBANK2 0120  
                                _actiontouchPanel 059B                                  _mainDataReceived 005C  
                                       ___latbits 0002                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00DC                                 errorsISR@Tx_count 0077  
                        ??_copyReceivedDataBuffer 0020                        __size_of_EUSART_Initialize 0016  
                                       _checkFlag 0060                                errorsMain@Tx_count 0021  
                             __size_of_errorsMain 001D                                         __pnvBANK0 0062  
                                       __pnvBANK1 00E4                                    ?_clearAllPorts 0076  
                                 errorsISR@errNum 0079                          __size_of_TMR3_Initialize 000C  
                                errorsMain@errNum 0023                                         __pswtext1 0800  
                                       __pswtext2 0814                                         __pswtext3 0828  
                                       __pswtext4 083C                                         __pswtext5 0850  
                                       __pswtext6 0864                                         __pswtext7 0878  
                                       __pswtext8 088C                                         __pswtext9 08A0  
                                        _BAUD1CON 019F                                          _BAUD2CON 0497  
                           __end_of_pinINIT_extra 0FA5                                          ?_isdigit 0076  
             applianceControl@charFinalFrameState 0033                                         _errorsISR 0FE7  
                   actiontouchPanel@switch_status 002C           applianceControl@dimmerSpeedStringBuffer 003B  
                                  ___wmul@product 0024                                          _PIE1bits 0091  
                                        _PIE3bits 0093                                          _PIE4bits 0094  
                               ?_applianceControl 002E                                          _PIR1bits 0011  
                                        _PIR3bits 0013                                          _PIR4bits 0014  
                              ??_applianceControl 0034                                 ??_TMR1_Initialize 0020  
                               ___wmul@multiplier 0020                  __size_of_sendFeedback_TO_Gateway 0035  
                   applianceControl@charSwitchLSB 002E                     applianceControl@charSwitchMSB 0038  
                                      ?_errorsISR 0076                          __size_of_CCP9_Initialize 000A  
                 __size_of_copyReceivedDataBuffer 0031                                   ??_clearAllPorts 0020  
                     actiontouchPanel@int_swSpeed 0026                  _start_PWM_Generation_in_ISR_FLAG 0056  
                               _allPeripheralInit 0F81                                      ??_errorsMain 0020  
                              _sendAcknowledgment 079A                                 ??_TMR3_Initialize 0020  
                                     _isdigit$973 0020                                ?_allPeripheralInit 0076  
                                __size_of_isdigit 000F                               ?_sendAcknowledgment 0076  
                                        __ptext10 0F68                                          __ptext11 0F5D  
                                        __ptext12 0FD1                                          __ptext21 0FE7  
                                        __ptext13 0FBB                                          __ptext14 0F53  
                                        __ptext15 059B                                          __ptext16 0705  
                                        __ptext17 0FA5                                          __ptext18 0F90  
                                        __ptext19 0F43                               ??_allPeripheralInit 0020  
                 applianceControl@charSwitchSTATE 002F                       __size_of_EUSART2_Initialize 0016  
                           main@dataBufferCounter 00E0                                     __size_of_atoi 006B  
                                   __size_of_main 0189                          __end_of_actiontouchPanel 0614  
                       actiontouchPanel@ch_sw_num 0028                                __end_of_errorsMain 07D5  
                              _currentStateBuffer 0140                                        _RC1STAbits 019D  
                            ??_sendAcknowledgment 0020                                        _RC2STAbits 0495  
                       __end_of_allPeripheralInit 0F90                                          int$flags 007E  
                                        atoi@sign 002A                            _copyReceivedDataBuffer 073A  
                           actiontouchPanel@SwNum 0029                            _tempReceivedDataBuffer 00A0  
                    __size_of_GPIO_pin_Initialize 0016                                          isdigit@c 0021  
                                     ??_errorsISR 0076                                          intlevel1 0000  
                               __CFG_CLKOUTEN$OFF 0000               applianceControl@integerSwitchNumber 003F  
                               ??_CCP9_Initialize 0020                                _parentalLockBuffer 00D2  
                         _sendFeedback_TO_Gateway 0705                                     __pstringtext1 1000  
                                   __pstringtext2 0000                         actiontouchPanel@sw_status 0023  
                 _tempReceiveTouchpanelDataBuffer 0049                                        _TX1STAbits 019E  
                                      _TX2STAbits 0496                                   _TMR1_Initialize 0F5D  
